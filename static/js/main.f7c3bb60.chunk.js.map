{"version":3,"sources":["lib/lego/TabsMenu/index.ts","lib/lego/Modal/_view/Modal_view_figma.ts","lib/lego/Modal/Modal.tsx","model/combine.ts","api/downloadTokens.ts","utils/queryParameters.ts","utils/color.ts","utils/constants.ts","utils/tokenType.ts","utils/extractParams.ts","model/query.ts","model/constants.ts","model/themes.ts","Tokens/model/tokens.ts","icons/BackIcon.tsx","FigmaMessageType.ts","icons/CloseEyeIcon.tsx","icons/EllipsesIcon.tsx","icons/UnionIcon.tsx","icons/TipIcon.tsx","icons/TrashIcon.tsx","icons/OpenEyeIcon.tsx","icons/SunIcon.tsx","components/Header/Controls/Controls.tsx","components/Header/Header.tsx","components/Panel/Panel.tsx","lib/lego/Divider/index.tsx","pages/componentsPage/components/Panels/Panels.tsx","Tokens/model/tokensToShow.ts","components/ExpandButton/ExpandButton.tsx","components/Section/Section.tsx","components/Textinput/TextinputBase.tsx","components/Textinput/Textinput.tsx","components/YaMetrika/YaMetrika.ts","utils/figma.ts","model/figma.ts","TokenTypes.ts","Tokens/components/TokenApply/icons/lineHeight.svg","Tokens/components/TokenApply/icons/letterSpacing.svg","Tokens/components/TokenApply/icons/paragraphSpacing.svg","Tokens/components/TokenApply/icons/padding.svg","Tokens/components/TokenApply/icons/fontSize.svg","Tokens/components/TokenApply/TokenApplyType.tsx","Tokens/components/TokenApply/TokenApply.tsx","Tokens/components/ColorPicker/ColorPicker.tsx","Tokens/components/TokenField/Inputs/Color/Color.tsx","Tokens/components/TokenField/Inputs/Link/Link.tsx","Tokens/components/TokenField/Inputs/Text/Text.tsx","Tokens/components/TokenField/TokenPrevious/TokenPrevious.tsx","Tokens/components/TokenField/TokenField.tsx","Tokens/components/Tokens/TokenGroup.tsx","Tokens/components/TokenEditor/model.ts","Tokens/components/TokenEditor/Color/Color.tsx","model/mappings.ts","Tokens/components/TokenEditor/TokenEditor.tsx","Tokens/components/Tokens/Tokens.tsx","Tokens/components/Tokens/TokensStore.tsx","utils/getComponentByName.ts","pages/componentsPage/model.ts","pages/componentsPage/components/Playground/Settings.tsx","pages/componentsPage/components/Playground/Code.tsx","utils/combinations.ts","pages/componentsPage/components/Playground/Playground.tsx","model/css.ts","model/dark.ts","model/view.ts","pages/componentsPage/components/ComponentWrapper/ComponentWrapper.tsx","hooks/dragToFigma.ts","utils/getWrappedComponent.ts","pages/componentsPage/components/Showcase/Showcases/Overview/Headline/Headline.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/ButtonShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/CheckboxShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/HeaderShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/LinkShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/MenuShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/ProgressShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/RadioboxShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/RadioButtonShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/SpinShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TextareaShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TextinputShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TextShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TumblerShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Overview.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/DividerShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/MessageBoxShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TabsMenuShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/UserPicShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/SliderShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/index.ts","components/IconButton/IconButtonBase.tsx","components/IconButton/buttons/EyeIconButton.tsx","components/IconButton/buttons/SunIconButton.tsx","pages/componentsPage/components/Showcase/Showcase.tsx","pages/componentsPage/ComponentsPage.tsx","api/downloadTheme.ts","utils/toDeepToken.ts","model/yaml.ts","Tokens/model/tokensText.ts","api/uploadTokens.ts","model/share-tokens.ts","pages/changesPage/Tokens/Tokens.tsx","pages/changesPage/ChangesPage.tsx","App.tsx","ComponentsRenderer.tsx","index.tsx","lib/lego/TabsMenu/TabsMenu.tsx","lib/lego/Tooltip/Tooltip.tsx","lib/lego/TabsMenu/_view/TabsMenu_view_figma.ts","lib/lego/Tooltip/_view/Tooltip_view_figma.ts","lib/lego/Tooltip/_dark/Tooltip_dark.ts","lib/lego/Tooltip/index.ts"],"names":["withViewFigma","withBemMod","view","Modal","compose","withThemeNormal","ModalDesktop","defaultProps","isCombineChange","createEvent","isCombineReset","$isCombine","createStore","on","state","reset","downloadTokens","tokensHash","a","fetch","method","body","JSON","stringify","response","json","ok","Error","errorMessage","parse","getLocation","window","location","href","replace","search","getQueryParameter","name","URLSearchParams","get","clamp","number","min","max","Math","convertColorObj","color","source","rgb","r","g","b","hsl","h","s","l","hex","toHEXA","_color","String","match","extract","slice","length","split","map","el","Number","trim","a1","a2","a3","alpha","toString","rgbToHex","f","n","k","round","padStart","hslToHex","fullForm","parseInt","toUpperCase","hexAndAlphaToRgba","rgbNumbers","mappedAlpha","join","PARAM_DASH_RE","PARAM_DOT_RE","BRACES_REMOVAL_RE","getType","token","Boolean","value","template","params","hasParams","tokensQueryParameterUpdate","tokens","queryParams","set","history","pushState","setQueryParameter","delete","query","deleteQueryParameter","componentsList","excludeComponentsList","themeChange","$themes","default","dataDefault","preset","themeDefault","inverse","dataInverse","themeInverse","brand","dataBrand","themeBrand","$themeName","themes","Object","keys","$theme","combine","themeName","_","tokensPass","tokenUpdate","tokenBatchUpdate","tokensReset","tokensChangedSinceLastViewReset","$rawTokens","$allTokens","theme","defaultValues","comment","defaultValue","changed","type","description","$allTokensObject","reduce","acc","$allTokensDeps","refs","refToken","push","$globalTokens","globals","forEach","path","includes","$componentTokens","components","$changes","$hasChanges","$tokensChangedSinceLastView","entries","tokensInitializationGate","createGate","initializeTokens","createEffect","toast","success","error","remove","newState","result","watch","forward","from","open","to","observer","ThemekitObserver","getState","context","aliases","output","transforms","files","destination","format","content","update","tokenChange","tokenReset","$token","$tokenPresent","FigmaMessageType","BackIcon","props","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","fillOpacity","CloseEyeIcon","EllipsesIcon","UnionIcon","className","TipIcon","TrashIcon","OpenEyeIcon","SunIcon","Controls","scopeRef","useRef","useState","visible","setVisible","isCombine","useStore","changesPresent","handleClose","ref","onClick","scope","onClose","onPress","destructive","cnHeader","cn","Header","activeTab","setActiveTab","showChangesNotification","TabsMenu","tabs","id","notify","cnPanel","Panel","children","active","restProps","focusableProps","useFocusable","Divider","cnPanels","panelsTree","allComponents","filter","key","component","toLocaleLowerCase","defaultSections","Array","toLowerCase","Panels","activePanel","panels","onPanelSelect","setSearch","sections","setSections","onChange","e","target","renderIcon","placeholder","index","section","some","label","checked","prev","i","handleSectionChange","getTokenGroups","parts","reverse","mapToken","resultToken","rawValue","original","baseType","link","isColor","colorValue","groups","mapTokens","deps","preparedToken","$tokens","res","cnExpandButton","ExpandButton","amount","buttonProps","useButton","cnSection","Section","header","cnTextinput","TextinputBase","tip","labelRef","onLabelClick","has_tip","Tooltip","Textinput","Component","multiple","options","onChangeSelectHandler","useCallback","v","onChangeCheckHandler","onChangeTextHandler","console","log","optionsMapped","o","option","selected","unshift","metricaGoal","goal","ym","pluginMessage","data","parent","handlerWindow","postMessage","rendererMessage","frame","document","getElementById","contentWindow","sendToFigma","blocks","position","obj","figmaId","RENDER","$currentNodes","setCurrentNodes","setCurrentNodesToken","payload","nodes","valueKeys","node","exists","newTokens","tokenValue","nodeId","APPLY_TOKEN","_path","_path2","TokenKeys","spacing","size","sizing","font","border","borderWidth","borderRadiusTopLeft","borderRadiusTopRight","borderRadiusBottomLeft","borderRadiusBottomRight","borderColor","fontFamily","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","createElement","stroke","ForwardRef","forwardRef","_g","cnTokenApply","isActive","values","isArray","TokenApplyButton","icon","ArrowIcon","direction","style","transform","left","right","top","bottom","BorderIcon","TokenApplyPadding","onClickLeftHandler","onClickRightHandler","onClickBottomHandler","onClickTopHandler","onClickAllHandler","togglePopup","elementRef","useClickAway","TokenApplyBorderRadius","onClickBottomLeftHandler","onClickBottomRightHandler","onClickTopRightHandler","onClickTopLeftHandler","TokenApplyType","tokenKey","onClickHandler","background","TokenApply","applyHandler","concat","test","isFinite","getTokenTypes","group","ColorPicker","shape","anchorRef","handleClick","handleColorChange","event","backgroundColorStyle","useMemo","anchor","DebounceInput","withDebounceInput","Input","Color","handleLink","_hex","setHex","_alpha","setAlpha","setColor","handleColorChangeDebounced","debounce","useEffect","handleInputChange","_handleColorChange","handleLinkHandler","hexChangeHandler","alphaChangeHandler","selectTextOnFocus","setSelectionRange","type_color","debounceTimeout","maxLength","onFocus","Link","handleRefHandler","type_link","Text","handleChange","type_text","forceNotifyByEnter","forceNotifyOnBlur","data-testid","cnTokenPrevious","TokenPrevious","TokenField","handleTextChange","handleClear","inner","showApplyToken","setShowApplyToken","selectedNodeToken","find","t","tokenValues","onTokenApply","onLabelClickHandler","hasTail","cnTokens","prettyLabelName","TokenGroup","addNewToken","opened","setOpened","handleOpen","onAddNewToken","closeEditor","$selectedToken","inherit","$invertedTokenMappings","mappedName","cnTokenEditor","TokenEditor","inheritDefault","resolvedValue","mappings","setInherit","setChanged","setValue","colorPreview","setColorPreview","newName","setNewName","namgeChangeHandler","tokensToReplace","extractParams","toReplace","every","toTransform","transformValueWithColorFn","transformer","readOnly","type__color","type__text","disabled","Tokens","showEditor","currentTokensGroups","groupsCount","groupBy","groupTokens","TokensStore","showTokenEditor","currentTokens","getComponentByName","activeTabChange","componentChange","$activeTab","$component","currentPropsChange","currentCombinedPropsChange","$componentProps","allProps","currentProps","currentCombinedProps","currentComponent","uppercasedName","getComponentMetaByName","argTypes","args","newProp","componentData","Settings","onChangeProp","prop","required","Code","getVariantsFromProps","current","combined","variants","combinedVariants","reduceRight","flat","variant","merge","combinedVariantsByView","cnPlayground","Playground","handleCombineChange","stopPropagation","combineVariantsHandler","componentNormalizedName","$cssVariables","changes","cssTokens","RENDER_TOKENS_SYNC","$cssText","variables","cssText","darkToggle","$dark","viewChange","$view","$isFigma","initializeView","isFigma","viewInitializationGate","cnComponentWrapper","ComponentWrapper","React","__name","componentProps","dragRef","offsetX","offsetY","iframeX","iframeY","dragElem","dragStartHandler","dataTransfer","effectAllowed","setData","currentTarget","innerHTML","dropEffect","screenX","clientX","screenY","clientY","dragEndHandler","windowSize","outerWidth","outerHeight","dropPosition","screenLeft","screenTop","offset","x","y","addEventListener","removeEventListener","useDragToFigma","draggable","getWrappedComponent","Headline","dark","Button","Checkbox","SearchButton","withViewSearchArrowButton","ButtonBase","SearchInput","withHasClear","withViewSearchArrowTextinput","Menu","Progress","Radiobox","RadioButton","Spin","Textarea","Tumbler","componentsMap","button","display","marginBottom","flexDirection","alignItems","flexBasis","marginRight","progress","checkbox","indeterminate","divider","action","hasClear","pseudo","menu","items","messageBox","timing","maxValue","radiobox","radioButton","spin","tabsMenu","text","as","whiteSpace","textarea","value1","setValue1","onClearClick","hint","textinput","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","value6","setValue6","padding","tumbler","checked1","setChecked1","checked2","setChecked2","labelBefore","labelAfter","aria-label","userPic","slider","useSliderState","Showcases","overview","componentName","cnIconButtonBase","IconButtonBase","EyeIconButton","close","SunIconButton","cnShowcase","Showcase","showDiff","setShowDiff","cssVariables","handleSunIconClick","cnTheme","variantProps","cnComponentsPage","ComponentsPage","panel","downloadTheme","compile","parseYaml","properties","item","toDeepToken","chunks","chunk","$yamlText","yml","tokenName","deepmergedYml","deepmerge","all","YAML","rawTokensUpload","$tokensText","uploadRawTokensFx","attach","mapParams","effect","tokensUpdate","pending","doneData","rest","failData","message","autoClose","uploadTokens","tokensShare","shareTokens","allTokens","$shareTokensDisabled","hasTokens","copy","setFormat","tokensText","shareDisabled","showTokensCode","setShowTokensCode","switchToCodeHandler","handlePushToCanvasClick","tokensRecord","APPLY_TOKENS","ChangesPage","configureRootTheme","Fade","cssTransition","enter","exit","useGate","pluginMessageListener","SELECT_NODE","activePane","panes","src","transition","closeButton","limit","hideProgressBar","setProperty","html","ReactDOMServer","renderToStaticMarkup","block","layers","htmlToFigma","IMPORT","layer","ReactDOM","render","StrictMode","withLayoutHoriz","withAdaptive","composeU","withSizeM","withSizeS","TabsMenuCommon","layout","enhance","withDark","TooltipDesktop","TooltipStateful","TooltipStatefulDesktop"],"mappings":"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","file":"static/js/main.f7c3bb60.chunk.js","sourcesContent":["export * from './TabsMenu'\n","import { withBemMod } from '@bem-react/core'\n\nimport './Modal_view_figma.css'\n\nexport type ModalViewFigmaProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  view?: 'figma'\n}\n\n/**\n * Модификатор, отвечающий за внешний вид модала.\n * @param {ModalViewFigmaProps} props\n */\nexport const withViewFigma = withBemMod<ModalViewFigmaProps>('Modal', {\n  view: 'figma',\n})\n","import { compose } from '@bem-react/core'\n\n// base\nimport { Modal as ModalDesktop, withThemeNormal } from '@yandex-lego/components/Modal'\n// _view\nimport { withViewFigma } from './_view/Modal_view_figma'\n// _view\n\nexport * from '../Modal'\n\nexport const Modal = compose(withViewFigma, withThemeNormal)(ModalDesktop)\n\nModal.defaultProps = {\n  view: 'figma',\n}\n","import { createEvent, createStore } from 'effector'\n\nexport const isCombineChange = createEvent()\nexport const isCombineReset = createEvent()\n\nexport const $isCombine = createStore(false)\n\n$isCombine.on(isCombineChange, (state) => !state).reset(isCombineReset)\n","import { VariablesType } from '../types'\n\nexport const downloadTokens = async (tokensHash: string | null) => {\n  if (!tokensHash) {\n    return\n  }\n\n  const response = await fetch('https://functions.yandexcloud.net/d4eg1ughq5da8rgfonij', {\n    method: 'POST',\n    body: JSON.stringify({\n      tokensHash,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return JSON.parse(json) as { tokens: VariablesType[]; theme: string }\n}\n","const getLocation = () => window.location.href.replace(window.location.search, '')\n\nexport const getQueryParameter = (name: string) => {\n  return new URLSearchParams(window.location.search).get(name)\n}\n\nexport const setQueryParameter = (name: string, value: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.set(name, value)\n\n  window.history.pushState({}, '', `${getLocation()}?${queryParams.toString()}`)\n}\n\nexport const deleteQueryParameter = (name: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.delete(name)\n\n  const query = queryParams.toString() ? `?${queryParams.toString()}` : ''\n\n  window.history.pushState({}, '', getLocation() + query)\n}\n","type Color =\n  | { source: 'rgb'; rgb: { r: number; g: number; b: number; a: number } }\n  | { source: 'hsl'; hsl: { h: number; s: number; l: number; a: number } }\n  | { source: 'hex'; hex: string }\n\nexport function isColor(value: string): boolean {\n  return Boolean(String(value).match(/^(#|hsla?|rgba?)/))\n}\n\nfunction hslToHex(h: number, s: number, l: number) {\n  l /= 100\n  const a = (s * Math.min(l, 1 - l)) / 100\n  const f = (n: number) => {\n    const k = (n + h / 30) % 12\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1)\n    return Math.round(255 * color)\n      .toString(16)\n      .padStart(2, '0') // convert to Hex and prefix \"0\" if needed\n  }\n  return `${f(0)}${f(8)}${f(4)}`\n}\n\nfunction rgbToHex(r: number, g: number, b: number) {\n  return (\n    (r | (1 << 8)).toString(16).slice(1) +\n    (g | (1 << 8)).toString(16).slice(1) +\n    (b | (1 << 8)).toString(16).slice(1)\n  )\n}\n\nfunction clamp(number: number, min: number, max: number) {\n  return Math.max(Math.min(number, max), min)\n}\n\nexport function convertColorObj(color: Color): string {\n  let colorValue = ''\n\n  if (color.source === 'rgb') {\n    colorValue = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`\n  } else if (color.source === 'hsl') {\n    colorValue = `hsla(${color.hsl.h}, ${color.hsl.s}, ${color.hsl.l}, ${color.hsl.a})`\n  } else {\n    colorValue = color.hex\n  }\n\n  return colorValue\n}\n\nexport function toHEXA(color: string) {\n  const _color = String(color)\n  let hex, a\n\n  if (_color.match(/(rgb|hsl)/)) {\n    const extract = _color.match(/\\((.*)\\)/)\n\n    if (!extract) {\n      throw new Error('Wrong color value. Empty rgb/hsl body')\n    }\n\n    // Parameters depends on the applied function\n    //     r   g   b   alpha\n    //     h   s   l   alpha\n    const [a1, a2, a3, alpha] = extract[0]\n      .slice(1, extract[0].length - 1)\n      .split(',')\n      .map((el) => Number(el.trim()))\n\n    hex = _color.match(/rgb/) ? rgbToHex(a1, a2, a3) : hslToHex(a1, a2, a3)\n    a = alpha ?? 1\n  } else {\n    let fullForm = _color.slice(1)\n    if (_color.length === 4 || _color.length === 5) {\n      const r = _color[1],\n        g = _color[2],\n        b = _color[3]\n      fullForm = r + r + g + g + b + b + (_color.length === 5 ? color[4] + color[4] : '')\n    }\n\n    if (fullForm.length === 8) {\n      // _______ <- color part\n      // #FFFFFF00\n      //        -- <- alpha part\n      hex = fullForm.slice(0, -2)\n      a = parseInt(fullForm.slice(fullForm.length - 2, fullForm.length), 16) / 100\n    } else {\n      hex = fullForm\n      a = 1\n    }\n  }\n\n  a = clamp(a, 0, 1)\n  return [hex.toUpperCase(), `${Math.round(a * 100)}%`]\n}\n\n// TODO: сейчас данный функция работает только для hex длины 3 и 6\n// Нужно посмотреть, какие подходы используются в других либах и также сделать\nexport function hexAndAlphaToRgba(hex: string, alpha: string): string {\n  let rgb\n\n  if (hex.length === 3) {\n    rgb = hex.split('').map((el) => el + el)\n  } else if (hex.length === 6) {\n    rgb = [0, 2, 4].map((el) => hex.slice(el, el + 2))\n  } else {\n    throw new Error(\n      `Invalid HEX. HEX of length 3 or 6 are accepted, but \"${hex}\" has length ${hex.length}`,\n    )\n  }\n\n  const rgbNumbers = rgb.map((el) => parseInt(el, 16))\n  const mappedAlpha = clamp(Number(alpha), 0, 100) / 100\n\n  return `rgba(${rgbNumbers.join(', ')}, ${mappedAlpha})`\n}\n","export const COLOR_RE = /color\\(.+\\)/\nexport const PARAM_DASH_RE = /({([a-zA-Z-]+)})/g\nexport const PARAM_DOT_RE = /({([a-zA-Z.]+)})/g\nexport const BRACES_REMOVAL_RE = /[{}]/g\n","import { isColor } from './color'\nimport { hasParams } from '../utils/extractParams'\n\nexport const getType = (token: string) => {\n  if (isColor(token)) {\n    return 'color'\n  }\n\n  if (typeof token === 'string' && hasParams(token)) {\n    return 'link'\n  }\n\n  return 'text'\n}\n","import { ParamsType } from '../types'\nimport { PARAM_DASH_RE, BRACES_REMOVAL_RE } from './constants'\n\n/**\n * Get parameters from string.\n *\n * @param value {string} String from which parameters should be retrieved\n * @returns {ParamsType[] | undefined}\n *\n * @example\n *\n * extractParams('{button-bg-color}') // [ { template: '{button-bg-color}', token: 'button-bg-color'} ]\n * extractParams('{width} {height}') // [ {template: '{width}', token: 'width'}, { template: '{height}', token: 'height'} ]\n */\nexport const extractParams = (\n  value: string,\n  template: RegExp = PARAM_DASH_RE,\n): ParamsType[] | undefined => {\n  const params = String(value).match(template)\n\n  if (!params) {\n    return\n  }\n\n  return params.reduce<ParamsType[]>(\n    (acc, el) => [...acc, { template: el, token: el.replace(BRACES_REMOVAL_RE, '') }],\n    [],\n  )\n}\n\nexport const hasParams = (value: string, template: RegExp = PARAM_DASH_RE): boolean => {\n  const params = value.match(template)\n  return Boolean(params)\n}\n","import { setQueryParameter, deleteQueryParameter } from '../utils/queryParameters'\n\nexport const TOKENS_QUERY_PARAMETER = 'tokens'\n\nexport const tokensQueryParameterUpdate = (tokens?: string) => {\n  if (!tokens) {\n    deleteQueryParameter(TOKENS_QUERY_PARAMETER)\n    return\n  }\n\n  setQueryParameter(TOKENS_QUERY_PARAMETER, tokens)\n}\n","export const componentsList = [\n  'attach',\n  'badge',\n  'button',\n  'buttonGroup',\n  'checkbox',\n  'divider',\n  // \"dropdown\", // У дропдауна нет никаких токенов\n  'header',\n  'icon',\n  'image',\n  'layerManager',\n  'link',\n  'listTile',\n  'menu',\n  'messageBox',\n  'modal',\n  'popup',\n  'progress',\n  'radioButton',\n  'radiobox',\n  'select',\n  'showcase',\n  'slider',\n  'spacer',\n  'spin',\n  'tabsMenu',\n  'tabsPanes',\n  'text',\n  'textarea',\n  'textinput',\n  'theme',\n  'tooltip',\n  'tumbler',\n  'userPic',\n]\n\n// List of components that should not be shown\nexport const excludeComponentsList = ['calendar']\n","import { createStore, createEvent, combine } from 'effector'\n\nimport { theme as themeDefault } from '@yandex-lego/components/Theme/presets/default'\nimport { theme as themeInverse } from '@yandex-lego/components/Theme/presets/inverse'\nimport { theme as themeBrand } from '@yandex-lego/components/Theme/presets/brand'\n\nimport dataDefault from '../themes/example/theme.json'\nimport dataInverse from '../themes/example-inverse/theme.json'\nimport dataBrand from '../themes/example-brand/theme.json'\n\nimport { ThemeType, ThemeNamesType } from '../types'\n\nexport const themeChange = createEvent<ThemeNamesType>()\n\nexport const $themes = createStore<Record<string, ThemeType>>({\n  default: {\n    ...dataDefault,\n    preset: themeDefault,\n  },\n  inverse: {\n    ...dataInverse,\n    preset: themeInverse,\n  },\n  brand: {\n    ...dataBrand,\n    preset: themeBrand,\n  },\n})\n\nexport const $themesNames = $themes.map((themes) => Object.keys(themes))\n\nexport const $themeName = createStore<ThemeNamesType>('default')\nexport const $theme = combine($themes, $themeName, (themes, themeName) => themes[themeName])\n\n$themeName.on(themeChange, (_, themeName) => themeName)\n","import { ThemekitObserver } from '@yandex/themekit-core';\nimport {\n    combine,\n    createEffect,\n    createEvent,\n    createStore,\n    forward,\n    Store,\n} from 'effector';\nimport { createGate } from 'effector-react';\nimport { toast } from 'react-toastify';\n\nimport { downloadTokens } from '../../api/downloadTokens';\nimport { ThemeNamesType } from '../../types';\nimport { getQueryParameter } from '../../utils/queryParameters';\nimport { getType } from '../../utils/tokenType';\nimport { tokensQueryParameterUpdate } from '../../model/query';\nimport { componentsList, excludeComponentsList } from '../../model/constants';\n\nimport { $theme, themeChange } from '../../model/themes';\n\ntype Token = {\n    name: string;\n    path: string[];\n    refs: Token[];\n    value: string;\n    comment: string;\n    original: {\n        value: string;\n    };\n};\n\nconst tokensPass = createEvent<Array<Token>>();\n\nexport const tokensInitialization = createEvent();\nexport const tokenUpdate = createEvent<{\n    name: string;\n    value: string;\n    remove?: boolean;\n}>();\nexport const tokenBatchUpdate = createEvent<\n    { name: string; value: string; remove?: boolean }[]\n>();\nexport const tokensReset = createEvent();\n\nexport const tokensChangedSinceLastViewReset = createEvent();\n\nexport const $rawTokens = createStore<Array<Token>>([]);\n\nexport const $allTokens = combine(\n    { theme: $theme, tokens: $rawTokens },\n    ({ theme: { defaultValues }, tokens }) =>\n        tokens.map(({ comment, ...token }) => ({\n            ...token,\n            defaultValue: defaultValues[token.name],\n            changed: defaultValues[token.name] !== token.value,\n            type: getType(token.value),\n            description: comment,\n        }))\n);\n\ntype GetInsideStore<X> = X extends Store<infer I> ? I : never;\n\ntype ArrayElement<\n    ArrayType extends readonly unknown[]\n> = ArrayType extends readonly (infer ElementType)[] ? ElementType : never;\n\nexport type TokenStoreType = ArrayElement<GetInsideStore<typeof $allTokens>>;\n\nexport const $allTokensObject = $allTokens.map<Record<string, TokenStoreType>>(\n    (tokens) =>\n        tokens.reduce((acc, token) => ({ ...acc, [token.name]: token }), {})\n);\n\nexport const $allTokensDeps = $allTokens.map<Record<string, TokenStoreType[]>>(\n    (tokens: TokenStoreType[]) =>\n        tokens.reduce((acc, token) => {\n            for (const refToken of token.refs) {\n                if (!acc[refToken.name]) {\n                    acc[refToken.name] = [];\n                }\n                acc[refToken.name].push(token);\n            }\n\n            return acc;\n        }, {} as Record<string, TokenStoreType[]>)\n);\n\nexport const $globalTokens = $allTokens.map((tokens) => {\n    const globals: Record<string, typeof tokens[0]> = {};\n\n    tokens.forEach((token) => {\n        const path = token.path[0];\n\n        if (\n            excludeComponentsList.includes(path) ||\n            componentsList.includes(path)\n        ) {\n            return;\n        }\n\n        globals[token.name] = token;\n    });\n\n    return globals;\n});\n\nexport const $componentTokens = $allTokens.map((tokens) => {\n    const components: Record<string, Record<string, typeof tokens[0]>> = {};\n\n    tokens.forEach((token) => {\n        const path = token.path[0];\n\n        if (\n            excludeComponentsList.includes(path) ||\n            !componentsList.includes(path)\n        ) {\n            return;\n        }\n\n        if (!(path in components)) {\n            components[path] = {};\n        }\n\n        components[path] = {\n            ...components[path],\n            [token.name]: { ...token },\n        };\n    });\n\n    return components;\n});\n\nexport const $changes = createStore<Record<string, { value: string }>>({});\n\nexport const $hasChanges = $changes.map(\n    (tokens) => Object.keys(tokens).length !== 0\n);\n\nexport const $changesArray = $changes.map((tokens) =>\n    Object.entries(tokens).map(([name, value]) => ({ name, ...value }))\n);\n\n// Видел ли пользователи последние изменения на странице Changes\nexport const $tokensChangedSinceLastView = createStore(false);\n\nexport const tokensInitializationGate = createGate();\n\nexport const initializeTokens = createEffect(async () => {\n    const tokensHash = getQueryParameter('tokens');\n\n    if (!tokensHash) {\n        return;\n    }\n\n    try {\n        const response = await downloadTokens(tokensHash);\n\n        if (!response) {\n            throw new Error('No response');\n        }\n\n        const { tokens, theme } = response;\n\n        themeChange(theme as ThemeNamesType);\n        tokenBatchUpdate(tokens);\n        tokensQueryParameterUpdate(tokensHash);\n        toast.success('Theme successfully downloaded');\n    } catch (err) {\n        toast.error(\"Couldn't download the Theme\");\n    }\n});\n\n$changes\n    .on(tokenUpdate, (state, { name, value, remove }) => {\n        if (remove) {\n            const newState = { ...state };\n            delete newState[name];\n\n            return newState;\n        }\n\n        return { ...state, [name]: { value } };\n    })\n    .on(tokenBatchUpdate, (state, tokens) => {\n        const result = { ...state };\n\n        tokens.forEach(({ name, value, remove }) => {\n            if (remove) {\n                delete result[name];\n            } else {\n                result[name] = { value };\n            }\n        });\n\n        return result;\n    })\n    .reset(tokensReset);\n\ntokensReset.watch(() => {\n    toast.success('All changes reset');\n    tokensQueryParameterUpdate();\n});\n\nforward({\n    from: tokensInitializationGate.open,\n    to: initializeTokens,\n});\n\n$tokensChangedSinceLastView\n    .on(tokenUpdate, () => true)\n    .on(tokenBatchUpdate, () => true)\n    .reset(tokensChangedSinceLastViewReset);\n\n$rawTokens.on(tokensPass, (_, tokens) => tokens);\n\nlet observer = new ThemekitObserver({\n    tokens: $theme.getState().tokens,\n    context: { \n        aliases: { \"button-size-m-text-indent-all\": \"button-size-m-text-indentAll\" }\n    },\n    output: {\n        json: {\n            transforms: ['name/param-case', 'value/color-function', 'name/alias'],\n            files: [\n                {\n                    destination: 'root.json',\n                    format: 'json/flat',\n                },\n            ],\n        },\n    },\n});\n\nobserver.watch((result) => {\n    tokensPass(JSON.parse(result.json[0].content));\n});\n\ntokenUpdate.watch(({ name, value }) => observer.update(name, value));\ntokenBatchUpdate.watch((tokens) =>\n    tokens.forEach(({ name, value }) => observer.update(name, value))\n);\n\nexport type TokenBase = {\n    label: string;\n    groups: string[];\n    path: string[];\n    description: string;\n    defaultValue: string;\n    rawValue: string;\n    changed: boolean;\n    name: string;\n};\n\nexport type TokenType = TokenBase &\n    (\n        | { type: 'text'; value: string }\n        | {\n              type: 'color';\n              hex: string;\n              alpha: string;\n              color: string;\n          }\n        | {\n              type: 'link';\n              link: string;\n              isColor: boolean;\n              colorValue: string;\n          }\n    );\n\nexport const tokenChange = createEvent<string>();\nexport const tokenReset = createEvent();\n\n// Current selected token to be edited\nexport const $token = createStore<string>('');\nexport const $tokenPresent = $token.map((token) => token.length > 0);\n\n$token.on(tokenChange, (_, token) => token).reset(tokenReset);\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type BackIconProps = IconProps\n\nexport const BackIcon: FC<BackIconProps> = ({ ...props }) => (\n  <svg\n    {...props}\n    width=\"13\"\n    height=\"12\"\n    viewBox=\"0 0 13 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M2.70718 5.00004L5.35363 7.64648L4.64652 8.35359L1.14652 4.85359L0.792969 4.50004L1.14652 4.14648L4.64652 0.646484L5.35363 1.35359L2.70718 4.00004H6.50008C10.0762 4.00004 13.0001 6.9239 13.0001 10.5L13.0001 12H12.0001L12.0001 10.5C12.0001 7.47618 9.52393 5.00004 6.50008 5.00004H2.70718Z\"\n      fill=\"black\"\n      fillOpacity=\"0.8\"\n    />\n  </svg>\n)\n","import { PlainLayerNode } from 'html-figma/types';\nimport { Token } from './TokenTypes';\n\nexport enum FigmaMessageType {\n    IMPORT,\n    UPDATE,\n    RENDER,\n    IMPORT_VARIANTS,\n    APPLY_TOKEN,\n    APPLY_TOKENS,\n    SELECT_NODE,\n    CLEAR_SELECTION,\n    RENDER_TOKENS_SYNC,\n}\n\ntype FigmaImportTypes = 'variants' | 'single';\n\ntype LayerPosition = {\n    dropPosition: { clientX: number; clientY: number };\n    offset: {\n        x: number;\n        y: number;\n    };\n    windowSize: { width: number; height: number };\n};\n\ntype FigmaMessageImportPayload = {\n    nodes: {\n        layer: PlainLayerNode;\n        componentData: { name: string; props: unknown };\n        id?: string;\n        position?: LayerPosition;\n    }[];\n    type: FigmaImportTypes\n};\nexport interface FigmaImportMessage {\n    type: FigmaMessageType.IMPORT;\n    data: FigmaMessageImportPayload;\n}\n\nexport interface FigmaImportVariantsMessage {\n    type: FigmaMessageType.IMPORT_VARIANTS;\n    data: {\n        layers: PlainLayerNode[];\n        componentsData: { name: string; props: unknown }[];\n    };\n}\n\nexport interface FigmaRenderMessage {\n    type: FigmaMessageType.RENDER;\n    data: {\n        blocks: { figmaId?: string; name: string; props: unknown }[];\n        position?: LayerPosition;\n        type: FigmaImportTypes\n    };\n}\n\nexport interface FigmaRenderTokenSyncMessage {\n    type: FigmaMessageType.RENDER_TOKENS_SYNC;\n    data: Record<string, string>;\n}\n\nexport interface FigmaSelectNodeMessagePayload {\n    nodes: { nodeId: string; tokens: Token[]; componentData: unknown | null }[];\n}\n\nexport interface FigmaSelectNodeMessage {\n    type: FigmaMessageType.SELECT_NODE;\n    data: FigmaSelectNodeMessagePayload;\n}\n\nexport interface FigmaApplyTokenMessagePayload {\n    nodes: { nodeId: string; tokens?: Token[] }[];\n}\n\nexport interface FigmaApplyTokenMessage {\n    type: FigmaMessageType.APPLY_TOKEN;\n    data: FigmaApplyTokenMessagePayload;\n}\n\nexport interface FigmaApplyAllTokensMessagePayload {\n    tokens: Record<string, string>;\n}\n\nexport interface FigmaApplyAllTokensMessage {\n    type: FigmaMessageType.APPLY_TOKENS;\n    data: FigmaApplyAllTokensMessagePayload;\n}\n\nexport interface FigmaClearSelectionMessage {\n    type: FigmaMessageType.CLEAR_SELECTION;\n}\n\nexport type FigmaMessages =\n    | FigmaImportMessage\n    | FigmaImportVariantsMessage\n    | FigmaApplyTokenMessage\n    | FigmaApplyAllTokensMessage\n    | FigmaRenderMessage\n    | FigmaRenderTokenSyncMessage;\n\nexport type FigmaPluginMessages =\n    | FigmaSelectNodeMessage\n    | FigmaClearSelectionMessage;\n\nexport interface PluginMessageEvent extends MessageEvent {\n    data: FigmaMessages;\n}\n\nexport interface FigmaMessageEvent extends MessageEvent {\n    data: FigmaPluginMessages;\n}\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type CloseEyeIconProps = IconProps & { type: 'white' | 'black' }\n\nexport const CloseEyeIcon: FC<CloseEyeIconProps> = ({ type, ...props }) => (\n  <svg\n    {...props}\n    width=\"20\"\n    height=\"10\"\n    viewBox=\"0 0 20 10\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M17.6347 3.24478C18.4044 2.51355 19.0692 1.67306 19.6041 0.748291H17.9623C16.208 3.26336 13.2941 4.90725 9.99726 4.90725C6.70037 4.90725 3.78656 3.26336 2.03219 0.748291H0.390405C0.925582 1.67349 1.59073 2.51435 2.36092 3.24582L0.150391 5.45643L1.13071 6.43671L3.4279 4.13943C4.41331 4.86503 5.52317 5.43164 6.71961 5.80126L5.86431 8.88033L7.20008 9.25138L8.06813 6.1264C8.69462 6.23629 9.33923 6.2936 9.99726 6.2936C10.6558 6.2936 11.301 6.23619 11.9279 6.12612L12.7961 9.25138L14.1318 8.88033L13.2764 5.8008C14.4728 5.43102 15.5825 4.86426 16.5678 4.13852L18.8661 6.43672L19.8464 5.45641L17.6347 3.24478Z\"\n      fill={type === 'white' ? 'white' : '#222222'}\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type EllipsesIconProps = IconProps\n\nexport const EllipsesIcon: FC<EllipsesIconProps> = ({ ...props }) => (\n  <svg\n    {...props}\n    width=\"32\"\n    height=\"32\"\n    viewBox=\"0 0 32 32\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M17 12C17 12.5523 16.5523 13 16 13C15.4477 13 15 12.5523 15 12C15 11.4477 15.4477 11 16 11C16.5523 11 17 11.4477 17 12ZM17 16C17 16.5523 16.5523 17 16 17C15.4477 17 15 16.5523 15 16C15 15.4477 15.4477 15 16 15C16.5523 15 17 15.4477 17 16ZM16 21C16.5523 21 17 20.5523 17 20C17 19.4477 16.5523 19 16 19C15.4477 19 15 19.4477 15 20C15 20.5523 15.4477 21 16 21Z\"\n      fill=\"black\"\n      fillOpacity=\"0.301961\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport const UnionIcon: FC<IconProps> = ({ className }) => (\n  <svg\n    className={className}\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M3.74279 2.74819L6.00006 0.500244L8.25733 2.74819L6.00006 4.99614L3.74279 2.74819ZM2.74819 8.25731L0.500244 6.00004L2.74819 3.74278L4.99614 6.00004L2.74819 8.25731ZM8.25731 9.25191L6.00004 11.4999L3.74278 9.25191L6.00004 7.00396L8.25731 9.25191ZM11.4999 6.00006L9.25191 3.74279L7.00396 6.00006L9.25191 8.25733L11.4999 6.00006Z\"\n      fill=\"#7B61FF\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport const TipIcon: FC<IconProps> = (props) => (\n  <svg\n    {...props}\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M11 6C11 8.761 8.761 11 6 11C3.239 11 1 8.761 1 6C1 3.239 3.239 1 6 1C8.761 1 11 3.239 11 6ZM12 6C12 9.313 9.314 12 6 12C2.686 12 0 9.313 0 6C0 2.687 2.686 0 6 0C9.314 0 12 2.687 12 6ZM5.488 6.383C5.4 6.599 5.355 6.889 5.355 7.253H6.355L6.371 7.016C6.4 6.76 6.513 6.538 6.711 6.348L7.027 6.047C7.275 5.807 7.448 5.59 7.547 5.395C7.646 5.197 7.695 4.987 7.695 4.765C7.695 4.279 7.543 3.902 7.238 3.637C6.934 3.369 6.505 3.234 5.953 3.234C5.406 3.234 4.973 3.375 4.656 3.656C4.341 3.937 4.181 4.326 4.176 4.824H5.309C5.312 4.677 5.344 4.552 5.402 4.45C5.426 4.408 5.455 4.37 5.488 4.336C5.55 4.273 5.622 4.226 5.705 4.196C5.78 4.169 5.862 4.156 5.953 4.156C6.359 4.156 6.563 4.376 6.563 4.816C6.563 4.891 6.553 4.964 6.532 5.036C6.512 5.103 6.484 5.169 6.445 5.234C6.367 5.364 6.21 5.535 5.973 5.746C5.738 5.955 5.577 6.166 5.488 6.383ZM5.418 8.023C5.301 8.135 5.242 8.279 5.242 8.453C5.242 8.625 5.3 8.767 5.414 8.879C5.531 8.991 5.684 9.047 5.875 9.047C5.995 9.047 6.102 9.024 6.192 8.979C6.244 8.953 6.29 8.919 6.332 8.879C6.449 8.767 6.508 8.625 6.508 8.453C6.508 8.279 6.448 8.135 6.328 8.023C6.211 7.909 6.06 7.852 5.875 7.852C5.781 7.852 5.695 7.867 5.617 7.896C5.543 7.925 5.477 7.967 5.418 8.023Z\"\n      fill=\"black\"\n      fillOpacity=\"0.301961\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport const TrashIcon: FC<IconProps> = (props) => (\n  <svg\n    {...props}\n    width=\"12\"\n    height=\"16\"\n    viewBox=\"0 0 12 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M5 1.5C4.44772 1.5 4 1.94772 4 2.5H8C8 1.94772 7.55228 1.5 7 1.5H5ZM9 2.5C9 1.39543 8.10457 0.5 7 0.5H5C3.89543 0.5 3 1.39543 3 2.5H1.5H0L0 3.5H1V13.5C1 14.6046 1.89543 15.5 3 15.5H9C10.1046 15.5 11 14.6046 11 13.5V3.5H12V2.5H10.5H9ZM10 3.5H8.5H3.5H2V13.5C2 14.0523 2.44772 14.5 3 14.5H9C9.55228 14.5 10 14.0523 10 13.5V3.5ZM4 10.5V6.5H5V10.5H4ZM7 10.5V6.5H8V10.5H7Z\"\n      fill=\"black\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type OpenEyeIconProps = IconProps & { type: 'white' | 'black' }\n\nexport const OpenEyeIcon: FC<OpenEyeIconProps> = ({ type, ...props }) => (\n  <svg\n    {...props}\n    width=\"20\"\n    height=\"12\"\n    viewBox=\"0 0 20 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.99914 10.159C6.81074 10.159 4.00713 8.50346 2.40422 5.99998C4.00713 3.49649 6.81074 1.84094 9.99914 1.84094C13.1875 1.84094 15.9911 3.4965 17.5941 5.99998C15.9911 8.50346 13.1875 10.159 9.99914 10.159ZM9.99914 0.45459C13.9891 0.45459 17.4542 2.702 19.1975 5.99998C17.4542 9.29796 13.9891 11.5454 9.99914 11.5454C6.00917 11.5454 2.54411 9.29796 0.800781 5.99998C2.54411 2.70199 6.00917 0.45459 9.99914 0.45459ZM9.99914 8.7728C11.5305 8.7728 12.7718 7.53142 12.7718 6.0001C12.7718 4.46879 11.5305 3.22741 9.99914 3.22741C8.46782 3.22741 7.22644 4.46879 7.22644 6.0001C7.22644 7.53142 8.46782 8.7728 9.99914 8.7728Z\"\n      fill={type === 'white' ? 'white' : '#222222'}\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type SunIconProps = IconProps & { type: 'white' | 'black' }\n\nexport const SunIcon: FC<SunIconProps> = ({ type, ...props }) =>\n  type === 'white' ? (\n    <svg\n      {...props}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.19956 3.68499C7.14639 3.77904 7.06092 3.85043 6.96059 3.89051C6.86793 3.92753 6.76627 3.93636 6.66948 3.91209L2.99026 2.98959L3.92325 6.6175C3.95066 6.72405 3.94078 6.8362 3.89952 6.93819C3.85601 7.04571 3.77945 7.13746 3.67859 7.19475L0.5 9L3.67858 10.8053C3.77944 10.8625 3.85601 10.9543 3.89952 11.0618C3.94079 11.1638 3.95066 11.276 3.92326 11.3825L2.99026 15.0104L6.6695 14.0879C6.76628 14.0636 6.86793 14.0725 6.96059 14.1095C7.06092 14.1496 7.14639 14.221 7.19956 14.315L9 17.5L10.8628 14.2747C10.9094 14.1941 10.9828 14.1326 11.069 14.0976C11.1516 14.064 11.2425 14.0561 11.3289 14.078L15.0111 15.0104L14.0896 11.2761C14.0707 11.1995 14.0775 11.1191 14.1069 11.0459C14.1384 10.9674 14.1944 10.9006 14.2677 10.8584L17.5 9L14.2677 7.14158C14.1944 7.09939 14.1384 7.03263 14.1069 6.95408C14.0775 6.88086 14.0707 6.80047 14.0896 6.72389L15.0111 2.98959L11.3289 3.92198C11.2425 3.94386 11.1516 3.93599 11.069 3.90244C10.9828 3.86741 10.9094 3.80592 10.8628 3.72533L9 0.5L7.19956 3.68499ZM10.1396 4.64557C9.77567 4.55057 9.39374 4.5 9 4.5C6.51472 4.5 4.5 6.51472 4.5 9C4.5 11.4853 6.51472 13.5 9 13.5C9.39375 13.5 9.7757 13.4494 10.1397 13.3544C8.83816 12.3486 8 10.7722 8 8.99998C8 7.22783 8.83814 5.65143 10.1396 4.64557Z\"\n        fill=\"white\"\n      />\n    </svg>\n  ) : (\n    <svg\n      {...props}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.8004 3.68499C10.8536 3.77904 10.9391 3.85043 11.0394 3.89051C11.1321 3.92753 11.2337 3.93636 11.3305 3.91209L15.0097 2.98959L14.0767 6.6175C14.0493 6.72405 14.0592 6.8362 14.1005 6.93819C14.144 7.04571 14.2206 7.13746 14.3214 7.19475L17.5 9L14.3214 10.8053C14.2206 10.8625 14.144 10.9543 14.1005 11.0618C14.0592 11.1638 14.0493 11.276 14.0767 11.3825L15.0097 15.0104L11.3305 14.0879C11.2337 14.0636 11.1321 14.0725 11.0394 14.1095C10.9391 14.1496 10.8536 14.221 10.8004 14.315L9 17.5L7.13716 14.2747C7.09061 14.1941 7.01719 14.1326 6.93097 14.0976C6.84839 14.064 6.7575 14.0561 6.67108 14.078L2.98892 15.0104L3.91043 11.2761C3.92933 11.1995 3.92247 11.1191 3.89311 11.0459C3.86162 10.9674 3.80565 10.9006 3.73228 10.8584L0.5 9L3.73228 7.14158C3.80565 7.09939 3.86162 7.03263 3.89311 6.95408C3.92247 6.88086 3.92933 6.80047 3.91043 6.72389L2.98892 2.98959L6.67108 3.92198C6.7575 3.94386 6.84839 3.93599 6.93097 3.90244C7.01719 3.86741 7.09061 3.80592 7.13716 3.72533L9 0.5L10.8004 3.68499ZM7.86036 4.64557C8.22433 4.55057 8.60626 4.5 9 4.5C11.4853 4.5 13.5 6.51472 13.5 9C13.5 11.4853 11.4853 13.5 9 13.5C8.60625 13.5 8.2243 13.4494 7.86031 13.3544C9.16184 12.3486 10 10.7722 10 8.99998C10 7.22783 9.16186 5.65143 7.86036 4.64557Z\"\n        fill=\"#222222\"\n      />\n    </svg>\n  )\n","import React, { FC, useRef, useState } from 'react'\nimport { useStore } from 'effector-react'\n\nimport { Modal } from '../../../lib/lego/Modal'\nimport { $isCombine } from '../../../model/combine'\nimport { tokensReset, $hasChanges } from '../../../Tokens/model/tokens'\n\nimport { TrashIcon } from '../../../icons'\nimport { Button, Icon } from 'react-figma-components'\n\nimport './Controls.css'\n\nexport type ControlsProps = { className: string }\n\nexport const Controls: FC<ControlsProps> = (props) => {\n  const scopeRef = useRef<HTMLDivElement>(null)\n  const [visible, setVisible] = useState(false)\n  const isCombine = useStore($isCombine)\n  const changesPresent = useStore($hasChanges)\n\n  const handleClick = () => {\n    setVisible(true)\n  }\n\n  const handleClose = () => {\n    setVisible(false)\n  }\n\n  const handleSubmit = () => {\n    tokensReset()\n    setVisible(false)\n  }\n\n  return (\n    <div {...props} ref={scopeRef}>\n      {!isCombine && changesPresent && (\n        <div className=\"Control\" onClick={handleClick}>\n          <TrashIcon className=\"Reset-Icon\" />\n          Reset all changes\n        </div>\n      )}\n      <Modal theme=\"normal\" visible={visible} scope={scopeRef} onClose={handleClose}>\n        <div className=\"Reset-Modal\">\n          <div className=\"Title\">\n            <span>Do you want to reset all changes?</span>\n            <Icon name=\"close\" color=\"black\" onClick={handleClose} className=\"CloseIcon\" />\n          </div>\n          <div className=\"Buttons\">\n            <Button view=\"secondary\" onPress={handleClose}>\n              Cancel\n            </Button>\n            <Button view=\"primary\" destructive onPress={handleSubmit}>\n              Reset changes\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { cn } from '@bem-react/classname'\nimport { useStore } from 'effector-react'\n\nimport { TabsMenu } from '../../lib/lego/TabsMenu'\nimport { Controls } from './Controls'\nimport { $tokensChangedSinceLastView } from '../../Tokens/model/tokens'\n\nimport './Header.css'\n\nexport type ActiveTabType = 'components' | 'changes'\n\nexport type HeaderProps = {\n  activeTab: ActiveTabType\n  setActiveTab: (newActiveTab: ActiveTabType) => void\n}\n\nexport const cnHeader = cn('Header')\n\nexport const Header: FC<HeaderProps> = ({ activeTab, setActiveTab }) => {\n  const showChangesNotification = useStore($tokensChangedSinceLastView)\n\n  return (\n    <div className={cnHeader()}>\n      <TabsMenu\n        activeTab={activeTab}\n        tabs={[\n          {\n            id: 'components',\n            onClick: () => setActiveTab('components'),\n            content: 'Components',\n          },\n          {\n            id: 'changes',\n            onClick: () => setActiveTab('changes'),\n            content: (\n              <div\n                className={cnHeader('Changes', {\n                  notify: showChangesNotification,\n                })}\n              >\n                Design Tokens\n              </div>\n            ),\n          },\n        ]}\n      />\n      <Controls className={cnHeader('Controls')} />\n    </div>\n  )\n}\n","import React, { ReactNode, FC, MouseEventHandler, useRef } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport { UnionIcon } from '../../icons'\n\nimport './Panel.css'\nimport { useFocusable, UseFocusableProps } from 'web-platform-alpha'\n\nexport const cnPanel = cn('Panel')\n\nexport type PanelProps = UseFocusableProps & {\n  className?: string\n  onClick?: MouseEventHandler\n  active?: boolean\n}\n\nexport const Panel: FC<PanelProps> = (props) => {\n  const { children, className, active, ...restProps } = props\n  const ref = useRef<HTMLButtonElement>(null)\n  const { focusableProps } = useFocusable(props, ref)\n\n  return (\n    <button\n      className={cnPanel({ active }, [className])}\n      ref={ref}\n      {...focusableProps}\n      {...restProps}\n    >\n      <UnionIcon className={cnPanel('Icon')} />\n      <span className={cnPanel('Label')}>{children}</span>\n    </button>\n  )\n}\n","import React from 'react'\nimport { Divider as DividerBase } from '@yandex-lego/components/Divider'\n\nimport './Divider.css'\n\nexport const Divider = () => <DividerBase />\n","import React, { FC, Fragment, useState } from 'react';\nimport { Input, Icon, Disclosure } from 'react-figma-components';\nimport { cn } from '@bem-react/classname';\n\nimport { Panel } from '../../../../components/Panel';\nimport { Divider } from '../../../../lib/lego/Divider';\nimport * as allComponents from '@yandex-lego/components/figma';\n// import { panelsTree } from './constants'\n\nimport './Panels.css';\n\nexport const cnPanels = cn('Panels');\n\nexport type PanelsProps = {\n    className: string;\n    panels: string[];\n    activePanel: string;\n    onPanelSelect: (panel: string) => void;\n};\n\nconst panelsTree = {\n    components: Object.keys(allComponents)\n        .filter(\n            (key) =>\n                !['Modal', 'Popup', 'Tooltip', 'Drawer', 'Spin', 'Radiobox', 'RadioButton', 'Progress', 'Menu'].includes(key)\n        )\n        .map((component) => component.toLocaleLowerCase()),\n};\n\n// By default all disclosures are open\nconst defaultSections = Array(Object.keys(panelsTree).length).fill(true);\n\nconst includes = (component: string, search: string) =>\n    component.toLowerCase().includes(search.toLowerCase());\n\nexport const Panels: FC<PanelsProps> = ({\n    className,\n    panels,\n    activePanel,\n    onPanelSelect,\n}) => {\n    const [search, setSearch] = useState('');\n    const [sections, setSections] = useState(defaultSections);\n\n    const handleSectionChange = (index: number) => {\n        setSections((prev) => prev.map((el, i) => (i === index ? !el : el)));\n    };\n\n    return (\n        <div className={cnPanels('Wrapper')}>\n            <div className={cnPanels(null, [className])}>\n                <Input\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    renderIcon={<Icon name=\"search\" color=\"black\" />}\n                    placeholder=\"Search\"\n                    className={cnPanels('Input')}\n                />\n                <Divider />\n                <div className={cnPanels('Content')}>\n                    {/* Overview is not belong to any class */}\n                    {includes('overview', search) && (\n                        <Panel\n                            key=\"overview\"\n                            active={activePanel === 'overview'}\n                            onClick={() => onPanelSelect('overview')}\n                        >\n                            overview\n                        </Panel>\n                    )}\n\n                    {Object.entries(panelsTree).map(\n                        ([section, components], index) => {\n                            if (\n                                !components.some((component) =>\n                                    includes(component, search)\n                                )\n                            ) {\n                                return <Fragment key={section} />;\n                            }\n\n                            return (\n                                <Disclosure\n                                    label={section}\n                                    checked={sections[index]}\n                                    onChange={() => handleSectionChange(index)}\n                                    className=\"Panels-Disclosure\"\n                                    key={section}\n                                >\n                                    {components\n                                        .filter((component) =>\n                                            includes(component, search)\n                                        )\n                                        .map((component) => (\n                                            <Panel\n                                                key={component}\n                                                active={\n                                                    activePanel === component\n                                                }\n                                                onClick={() =>\n                                                    onPanelSelect(component)\n                                                }\n                                            >\n                                                {component}\n                                            </Panel>\n                                        ))}\n                                </Disclosure>\n                            );\n                        }\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { combine } from 'effector';\n\nimport { $component } from '../../pages/componentsPage/model';\n\nimport { toHEXA } from '../../utils/color';\nimport { $currentNodes } from '../../model/figma';\nimport { $allTokensDeps, $allTokensObject, $componentTokens, $globalTokens, TokenStoreType } from './tokens';\n\nexport type TokenBase = {\n    label: string;\n    name: string;\n    groups: string[];\n    deps?: TokenType[];\n    path: string[];\n    description: string;\n    defaultValue: string;\n    rawValue: string;\n    changed: boolean;\n};\n\nexport type TokenType = TokenBase &\n    (\n        | { type: 'text'; value: string }\n        | {\n              type: 'color';\n              hex: string;\n              alpha: string;\n              color: string;\n          }\n        | {\n              type: 'link';\n              link: string;\n              isColor: boolean;\n              colorValue: string;\n          }\n    );\n\n\nconst getTokenGroups = (name: string) => {\n    const parts = name.split('-');\n\n    return parts\n        .map((_, index) => parts.slice(0, index + 1).join('-'))\n        .reverse();\n};\n\nexport const mapToken = (token: TokenStoreType) => {\n    const {\n        original: { value: rawValue },\n        type: baseType,\n        name,\n        refs,\n        value,\n    } = token;\n    let resultToken: any;\n    if (refs.length > 0) {\n        resultToken = {\n            link: refs[0].name,\n            isColor: baseType === 'color',\n            colorValue: value,\n            type: 'link',\n        };\n    } else if (baseType === 'color') {\n        const [hex, alpha] = toHEXA(value);\n        resultToken = { hex, alpha, color: value, type: 'color' };\n    } else {\n        resultToken = { value, type: 'text' };\n    }\n\n    return {\n        ...token,\n        ...resultToken,\n        name,\n        label: name,\n        groups: getTokenGroups(name),\n        rawValue,\n    };\n}\n\nexport const mapTokens = (tokens: Record<string, TokenStoreType>, deps?: Record<string, TokenStoreType[]>,) => {\n    return Object.entries(tokens).map<TokenType>(([_, token]) => {\n        // Current type of the token (can become link)\n        const preparedToken = mapToken(token);\n\n        preparedToken.deps = deps ? deps[token.name]?.map(mapToken) : null;\n\n        return preparedToken;\n    });\n} \n\n// Tokens of the selected component\nexport const $tokens = combine(\n    {\n        globals: $globalTokens,\n        deps: $allTokensDeps,\n        components: $componentTokens,\n    },\n    ({ globals, components, deps }) => {\n        return {\n            globals: mapTokens(globals, deps),\n            components: Object.keys(components).reduce<Record<string, TokenType[]>>((res, key) => { \n                res[key] = mapTokens(components[key], deps);\n\n                return res;\n            }, {})\n        };\n    }\n);\n\n// // Tokens of the selected component\n// export const $selectedTokens = combine(\n//     {\n//         allTokens: $allTokensObject,\n//         deps: $allTokensDeps,\n//         currentNodes: $currentNodes\n//     },\n//     ({ allTokens, currentNodes }) => {\n//         if (!currentNodes || currentNodes.length === 0) return null;\n\n//         const tokens = currentNodes[0]?.tokens?.map(token => {\n//             return allTokens[token.name];\n//         });\n\n//         return mapTokens(tokens, deps);\n//     }\n// );\n","import React, { FC, useRef } from 'react'\nimport { UseButtonProps, useButton } from 'web-platform-alpha'\nimport { cn } from '@bem-react/classname'\n\nimport { EllipsesIcon } from '../../icons'\n\nimport './ExpandButton.css'\n\ntype ExpandButtonProps = UseButtonProps & {\n  amount: number\n  className?: string\n}\n\nexport const cnExpandButton = cn('ExpandButton')\n\nexport const ExpandButton: FC<ExpandButtonProps> = ({ className, amount, ...props }) => {\n  const ref = useRef<HTMLButtonElement>(null)\n  const { buttonProps } = useButton(props, ref)\n\n  return (\n    <button {...buttonProps} ref={ref} className={cnExpandButton(null, [className])}>\n      <EllipsesIcon className={cnExpandButton('Icon')} />\n      <span className={cnExpandButton('Text')}> See all {amount} tokens </span>\n    </button>\n  )\n}\n","import { cn } from '@bem-react/classname'\nimport React, { FC, ReactElement, } from 'react'\n\nimport './Section.css'\n\nconst cnSection = cn('Section')\n\nexport const Section: FC<{ header?: ReactElement | string }> = ({ children, header }) => {\n  return (\n    <div className={cnSection()}>\n        {header ? <h4 className={cnSection('Header')}>{header}</h4> : null}\n        {children}\n    </div>\n  )\n}\n","import React, { FC, ReactNode, Ref } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport { TipIcon } from '../../icons'\nimport { TooltipStateful } from '../../lib/lego/Tooltip'\n\nimport './TextinputBase.css'\n\nexport const cnTextinput = cn('Textinput')\n\nexport type TextinputBaseProps = {\n  label: string\n  labelRef?: Ref<HTMLElement>;\n  children?: ReactNode\n  className?: string\n  tip?: string\n  onClick?: () => void\n  onLabelClick?: () => void\n}\n\nexport const TextinputBase: FC<TextinputBaseProps> = ({\n  children,\n  className,\n  tip,\n  label,\n  labelRef,\n  onClick,\n  onLabelClick,\n}) => {\n  return (\n    <div className={cnTextinput({ has_tip: Boolean(tip) }, [className])} onClick={onClick}>\n      <div className={cnTextinput('Tip')}>\n        {tip && (\n          <TooltipStateful content={tip}>\n            <span>\n              <TipIcon className={cnTextinput('TipIcon')} />\n            </span>\n          </TooltipStateful>\n        )}\n        <span onClick={onLabelClick} ref={labelRef} className={cnTextinput('Label')}>{label}</span>\n      </div>\n      <div className={cnTextinput('Body')}>{children}</div>\n    </div>\n  )\n}\n","import React, { FC, ReactNode, useCallback } from 'react';\nimport { Select, Input, Item, Switch } from 'react-figma-components';\n\nimport { TextinputBase, TextinputBaseProps, cnTextinput } from '.';\n\nexport type TextinputProps = TextinputBaseProps & {\n    type:\n        | 'enum'\n        | 'array'\n        | 'select'\n        | 'set'\n        | 'boolean'\n        | 'node'\n        | 'number'\n        | 'string'\n        | 'object'\n        | 'text'\n        | 'children';\n    options?: string[];\n    multiple?: boolean;\n    value?: string;\n    onChange?: (value: string | boolean | string[], label: string) => void;\n};\n\nexport const Textinput: FC<TextinputProps> = ({\n    value,\n    type,\n    multiple = false,\n    options = [],\n    onChange = () => {},\n    label,\n    ...props\n}) => {\n    let Component: ReactNode;\n\n    const onChangeSelectHandler = useCallback(\n        (v) => {\n            // @ts-expect-error\n            const value = v?.map(({ value }) => value);\n            onChange(multiple ? value : value[0], label);\n        },\n        [onChange, label, multiple]\n    );\n    const onChangeCheckHandler = useCallback(\n        (v) => {\n            onChange(v?.target.checked, label);\n        },\n        [onChange, label]\n    );\n    const onChangeTextHandler = useCallback(\n        (v) => {\n            onChange(v?.target.value, label);\n        },\n        [onChange, label]\n    );\n        console.log({ type });\n    switch (type) {\n        case 'select':\n        case 'enum':\n        case 'set':\n            const optionsMapped = options.map((o) => ({\n                value: o,\n                label: o,\n                option: o\n            }));\n            const selected = optionsMapped.filter((v) => value?.includes(v.value));\n            // @ts-expect-error\n            optionsMapped.unshift({ value: '-1', label: '--' });\n\n            Component = (\n                <Select multiple={multiple} onChange={onChangeSelectHandler} selected={selected}>\n                    {optionsMapped.map(({ value, label }) => (\n                        <Item value={value} key={`${label}-${value}`}>\n                            {label}\n                        </Item>\n                    ))}\n                </Select>\n            );\n\n            break;\n        case 'boolean':\n            Component = <Switch onChange={onChangeCheckHandler} checked={Boolean(value)} />;\n            break;\n        case 'children':\n        case 'text':\n        case 'object':\n        case 'node':\n        case 'number':\n        case 'string':\n        case 'array':\n            Component = <Input onChange={onChangeTextHandler} value={value} />;\n            break;\n        default:\n            throw new Error('component type is not defined');\n    }\n\n    return (\n        <TextinputBase\n            {...props}\n            label={label}\n            className={cnTextinput({ [`type_${type}`]: Boolean(type) })}\n        >\n            {Component}\n        </TextinputBase>\n    );\n};\n","export const COUNTER_ID = '69595123'\n\nexport const metricaGoal = (goal: string) => {\n  // @ts-ignore\n  window.ym(COUNTER_ID, 'reachGoal', goal)\n}\n","import { htmlToFigma } from 'html-figma/browser';\nimport { LayerNode } from 'html-figma/types';\nimport {\n    FigmaApplyAllTokensMessagePayload,\n    FigmaApplyTokenMessagePayload,\n    FigmaMessages,\n    FigmaMessageType,\n    FigmaRenderMessage,\n} from '../FigmaMessageType';\nimport { Token } from '../TokenTypes';\n\ninterface SendToFigmaParams {\n    blocks: { figmaId?: string, name: string; props: unknown }[],\n    type?: FigmaRenderMessage['data']['type'],\n    position?: {\n        dropPosition: { clientX: number; clientY: number };\n        offset: {\n            x: number;\n            y: number;\n        };\n        windowSize: { width: number; height: number };\n    };\n}\n\nexport const pluginMessage = (data: FigmaMessages, parent = false) => {\n    const handlerWindow = window.parent;\n    (parent ? handlerWindow.parent : handlerWindow).postMessage(\n        {\n            pluginMessage: data,\n        },\n        '*'\n    );\n};\n\nconst objectToPlainObject = (\n    obj: unknown\n): Record<string, string | number | object> => {\n    return Object.keys(obj as Record<string, unknown>).reduce((res, key) => {\n        // @ts-expect-error\n        if (typeof obj[key] !== 'function') {\n            // @ts-expect-error\n            res[key] = obj[key];\n        }\n\n        return res;\n    }, {});\n};\n\nexport const rendererMessage = (data: FigmaMessages) => {\n    // @ts-expect-error\n    const frame = document?.getElementById('renderer-frame')?.contentWindow;\n\n    frame?.postMessage(data, '*');\n};\n\nexport const renderMessage = (data: FigmaRenderMessage['data']) => {\n    rendererMessage({\n        type: FigmaMessageType.RENDER,\n        data: data,\n    });\n};\n\nexport const rendererSyncThemeMessage = (cssTokens: Record<string, string>) => {\n    rendererMessage({\n        type: FigmaMessageType.RENDER_TOKENS_SYNC,\n        data: cssTokens,\n    });\n};\n\n// export const sendToFigma = ({\n//     id,\n//     props = {},\n//     name,\n//     elem,\n//     position,\n// }: SendToFigmaParams) => {\n//     // const result = elem ? htmlToFigma(elem) : null;\n\n//     renderMessage({\n//         block: { name, props: objectToPlainObject(props) },\n//         position,\n//         type: 'single',\n//     });\n// };\n\nexport const sendToFigma = ({\n    blocks,\n    position,\n    type = 'single'\n}: SendToFigmaParams) => {\n    renderMessage({\n        blocks: blocks.map(({ figmaId, name, props }) => ({\n            name,\n            figmaId,\n            props: objectToPlainObject(props),\n        })),\n        position,\n        type,\n    });\n};\n\nexport const applyTokenToFigma = (payload: FigmaApplyTokenMessagePayload) => {\n    pluginMessage({\n        type: FigmaMessageType.APPLY_TOKEN,\n        data: payload,\n    });\n};\n\nexport const applyAllTokensToFigma = (\n    payload: FigmaApplyAllTokensMessagePayload\n) => {\n    pluginMessage({\n        type: FigmaMessageType.APPLY_TOKENS,\n        data: payload,\n    });\n};\n","import { createStore, createEvent } from 'effector'\nimport { Token, TokenValueKeys } from '../TokenTypes'\nimport { applyTokenToFigma } from '../utils/figma'\n\ninterface currentFigmaNode {\n    nodeId: string;\n    name?: string;\n    tokens?: Token[];\n    componentData?: unknown;\n}\nexport const $currentNodes = createStore<currentFigmaNode[]>([])\n\nexport const setCurrentNodes = createEvent<currentFigmaNode[]>()\nexport const setCurrentNodesToken = createEvent<Token>()\n\n$currentNodes.on(setCurrentNodes, (_, payload) => payload);\n\n$currentNodes.on(setCurrentNodesToken, (nodes, payload) => {\n    const valueKeys = Object.keys(payload.value) as TokenValueKeys[];\n\n    return nodes.map((node) => {\n        const tokens = node.tokens || [];\n        let exists = false;\n        const newTokens = tokens.map((token) => {\n            if (token.name === payload.name) {\n                exists = true;\n                return { ...token, value: payload.value }\n            } else {\n                let tokenValue = {...token.value};\n                for (const key of valueKeys) {\n                    if (tokenValue[key]) {\n                        delete tokenValue[key];\n                    }\n                }\n\n                return { ...token, value: tokenValue }\n            }\n        }).filter((token) => Object.keys(token.value).length > 0);\n        if (!exists) {\n            newTokens.push(payload);\n        }\n\n        return {\n            ...node,\n            tokens: newTokens \n        }\n    });\n});\n\n$currentNodes.watch(setCurrentNodesToken, state => {\n    applyTokenToFigma({ nodes: state.map(n => ({ nodeId: n.nodeId, tokens: n.tokens })) });\n});","export type Token = {\n    name: string;\n    value: TokenValue;\n    description?: string;\n};\n\nexport type TokenColor = {\n    borderColor?: string;\n    fill?: string;\n}\n\nexport type TokenSpace = {\n    paddingLeft?: number;\n    paddingRight?: number;\n    paddingBottom?: number;\n    paddingTop?: number;\n    itemSpacing?: number;\n}\n\nexport type TokenBorder = {\n    borderWidth?: number;\n    borderRadiusTopLeft?: number;\n    borderRadiusTopRight?: number;\n    borderRadiusBottomLeft?: number;\n    borderRadiusBottomRight?: number;\n}\n\nexport type TokenSize = {\n    width?: number | string;\n    height?: number | string;\n    sizing?: number | string;\n}\n\nexport type TokenTypography = {\n    fontWeight?: number;\n    lineHeight?: number;\n    fontSize?: number;\n    letterSpacing?: number;\n    paragraphSpacing?: number;\n}\n\nexport type TokenOpacity = {\n    opacity?: number;\n}\n\nexport type TokenFontFamily = {\n    fontFamily?: string,\n}\n\nexport type TokenBoxShadow = {\n    boxShadow?: {\n        x: number\n        y: number\n        spread: number;\n        color: string;\n        blur: number;\n    }\n}\n\nexport interface TokenValue extends TokenTypography, TokenSpace, TokenSize, TokenBorder, TokenBoxShadow, TokenOpacity, TokenFontFamily, TokenColor {\n}\n\nexport type TokenValueKeys = keyof TokenValue;\n\nconst fontFamilyBase: Required<TokenFontFamily> = { \n    fontFamily: \"\",\n};\n\nconst colorBase: Required<TokenColor> = { \n    fill: \"\",\n    borderColor: \"\"\n};\n\nconst spacingBase: Required<TokenSpace> = { \n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    paddingTop: 0,\n    itemSpacing: 0\n};\n\nconst sizeBase: Required<TokenSize> = { \n    sizing: 0,\n    width: 0,\n    height: 0,\n}\n\nconst typoBase: Required<TokenTypography> = { \n    fontWeight: 0,\n    lineHeight: 0,\n    fontSize: 0,\n    letterSpacing: 0,\n    paragraphSpacing: 0\n}\n\nconst borderBase: Required<TokenBorder> = { \n    borderWidth: 0,\n    borderRadiusTopLeft: 0,\n    borderRadiusTopRight: 0,\n    borderRadiusBottomLeft: 0,\n    borderRadiusBottomRight: 0\n}\n\nexport type tokenValueKeys = keyof TokenValue;\n\nexport const TokenKeys = {\n    spacing: ['itemSpacing', 'paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'] as tokenValueKeys[],\n    size: Object.keys(sizeBase) as tokenValueKeys[],\n    font: ['fontSize', 'fontWeight', 'lineHeight', 'letterSpacing', 'paragraphSpacing'] as tokenValueKeys[],\n    border: Object.keys(borderBase) as tokenValueKeys[],\n    color: Object.keys(colorBase) as tokenValueKeys[],\n    fontFamily: Object.keys(fontFamilyBase) as tokenValueKeys[],\n}","var _path, _path2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgLineHeight = function SvgLineHeight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg\",\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 1H0V0h14v1zm0 13H0v-1h14v1z\",\n    fillRule: \"nonzero\",\n    fillOpacity: 1,\n    fill: \"#000\",\n    stroke: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.548 11l2.8-8h1.304l2.8 8h-.954l-.7-2H5.202l-.7 2h-.954zM7 3.862L8.448 8H5.552L7 3.862z\",\n    fillRule: \"evenodd\",\n    fillOpacity: 1,\n    fill: \"#000\",\n    stroke: \"none\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLineHeight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/lineHeight.4afce02e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgLetterSpacing = function SvgLetterSpacing(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg\",\n    width: 16,\n    height: 12,\n    viewBox: \"0 0 16 12\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 12V0h1v12H0zm15 0V0h1v12h-1z\",\n    fillRule: \"nonzero\",\n    fillOpacity: 1,\n    fill: \"#000\",\n    stroke: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.548 10l2.8-8h1.304l2.8 8h-.954l-.7-2H6.202l-.7 2h-.954zM8 2.862L9.448 7H6.552L8 2.862z\",\n    fillRule: \"evenodd\",\n    fillOpacity: 1,\n    fill: \"#000\",\n    stroke: \"none\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLetterSpacing, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/letterSpacing.18c7096e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgParagraphSpacing = function SvgParagraphSpacing(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg\",\n    width: 14,\n    height: 16,\n    viewBox: \"0 0 14 16\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 1H0V0h14v1zm-7 .793l2.354 2.353-.708.708L7.5 3.707v4.586l1.146-1.147.708.708L7 10.207 4.646 7.854l.708-.708L6.5 8.293V3.707L5.354 4.854l-.708-.708L7 1.793zM14 11v1H0v-1h14zm0 4v1H0v-1h14z\",\n    fillRule: \"nonzero\",\n    fillOpacity: 1,\n    fill: \"#000\",\n    stroke: \"none\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgParagraphSpacing, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/paragraphSpacing.3ea4fca2.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgPadding = function SvgPadding(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg\",\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 3h6v6H3V3zm1 1h4v4H4V4zM0 0h12v12H0V0zm1 1h10v10H1V1z\",\n    fillRule: \"evenodd\",\n    fillOpacity: 1,\n    fill: \"#000\",\n    stroke: \"none\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPadding, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/padding.3bcbd6e8.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgFontSize = function SvgFontSize(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    className: \"svg\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"title\", null, \"Layer 1\"), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"svg_2\",\n    fill: \"#000\",\n    fillRule: \"evenodd\",\n    d: \"m1.391144,11l2.8,-8l1.304,0l2.8,8l-0.954,0l-0.7,-2l-3.596,0l-0.7,2l-0.954,0zm3.452,-7.138l1.448,4.138l-2.896,0l1.448,-4.138z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"svg_3\",\n    fill: \"#000\",\n    fillRule: \"evenodd\",\n    d: \"m8.744059,11.027946l1.368609,-3.910312l0.637381,0l1.368609,3.910312l-0.466305,0l-0.342152,-0.977578l-1.757685,0l-0.342152,0.977578l-0.466305,0zm1.687299,-3.488976l0.707766,2.022609l-1.415533,0l0.707766,-2.022609z\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFontSize, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/fontSize.18ea73f2.svg\";\nexport { ForwardRef as ReactComponent };","import { cn } from '@bem-react/classname';\nimport React, { FC, useCallback, useRef, useState } from 'react';\nimport { TokenValue } from '../../../TokenTypes';\nimport { useClickAway } from 'react-use';\n\nimport { Icon } from 'react-figma-components';\nimport { ReactComponent as LineHeightIcon } from './icons/lineHeight.svg';\nimport { ReactComponent as LetterSpacingIcon } from './icons/letterSpacing.svg';\nimport { ReactComponent as ParagraphSpacingIcon } from './icons/paragraphSpacing.svg';\nimport { ReactComponent as PaddingIcon } from './icons/padding.svg';\nimport { ReactComponent as FontSizeIcon } from './icons/fontSize.svg';\n\nconst cnTokenApply = cn('TokenApply');\n\ntype TokenKey = keyof TokenValue;\n\ninterface TokenApplyType {\n    tokenKey: TokenKey;\n    value: string;\n    values: TokenValue;\n    active?: boolean;\n    onClick: (key: TokenKey | TokenKey[]) => void;\n}\n\nconst isActive = (values: TokenValue, key: TokenKey | TokenKey[]) => {\n    if (Array.isArray(key)) {\n        return key.some(k => typeof values[k] !== 'undefined')\n    }\n    return typeof values[key] !== 'undefined';\n};\n\nexport const TokenApplyButton: FC<{\n    className?: string;\n    title: string;\n    icon?: boolean;\n    active?: boolean;\n    checked?: boolean;\n    onClick?: () => void;\n}> = ({\n    title,\n    children,\n    active,\n    onClick,\n    className,\n    checked,\n    icon = false,\n}) => {\n    return (\n        <button\n            title={title}\n            onClick={onClick}\n            className={cnTokenApply('ValueButton', { active, icon, checked }, [\n                className,\n            ])}\n        >\n            {children}\n        </button>\n    );\n};\n\nconst ItemSpaceIcon: FC<{}> = () => {\n    return (\n        <svg\n            className=\"svg\"\n            width=\"12\"\n            height=\"13\"\n            viewBox=\"0 0 12 13\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                d=\"M11 13v-2H1v2H0v-3h12v3h-1zm1-10H0V0h1v2h10V0h1v3zM9 7V6H3v1h6z\"\n                fillRule=\"nonzero\"\n                fillOpacity=\"1\"\n                fill=\"#000\"\n                stroke=\"none\"\n            ></path>\n        </svg>\n    );\n};\n\nconst ArrowIcon: FC<{ direction: 'top' | 'right' | 'bottom' | 'left' }> = ({\n    direction,\n}) => {\n    const degs = {\n        left: '90deg',\n        right: '-90deg',\n        top: '180deg',\n        bottom: '0deg',\n    };\n\n    return (\n        <svg\n            className=\"svg\"\n            width=\"8\"\n            height=\"8\"\n            viewBox=\"0 0 8 8\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{ transform: `rotate(${degs[direction]})` }}\n        >\n            <path\n                d=\"M.646 3.354l.708-.708L4 5.293l2.646-2.647.708.708L4 6.707.646 3.354z\"\n                fillRule=\"nonzero\"\n                fill=\"rgba(51,51,51)\"\n                stroke=\"none\"\n            ></path>\n        </svg>\n    );\n};\n\nconst BorderIcon: FC<{ direction: 'top' | 'right' | 'bottom' | 'left' }> = ({\n    direction,\n}) => {\n    const degs = {\n        left: '0deg',\n        right: '90deg',\n        top: '180deg',\n        bottom: '-90deg',\n    };\n\n    return (\n        <Icon\n            color=\"black\"\n            style={{ transform: `rotate(${degs[direction]})` }}\n            name=\"corner-radius\"\n        />\n    );\n};\n\nconst TokenApplyPadding: FC<{\n    onClick: (\n        key: TokenApplyType['tokenKey'] | TokenApplyType['tokenKey'][]\n    ) => void;\n    values: TokenValue;\n}> = ({ onClick, values }) => {\n    const onClickLeftHandler = useCallback(() => {\n        onClick('paddingLeft');\n    }, [onClick]);\n    const onClickRightHandler = useCallback(() => {\n        onClick('paddingRight');\n    }, [onClick]);\n    const onClickBottomHandler = useCallback(() => {\n        onClick('paddingBottom');\n    }, [onClick]);\n    const onClickTopHandler = useCallback(() => {\n        onClick('paddingTop');\n    }, [onClick]);\n    const onClickAllHandler = useCallback(() => {\n        onClick(['paddingTop', 'paddingLeft', 'paddingBottom', 'paddingRight']);\n    }, [onClick]);\n\n    const [visible, setVisible] = useState(false);\n    const togglePopup = useCallback(() => {\n        setVisible((v) => !v);\n    }, []);\n    const elementRef = useRef<HTMLDivElement>(null);\n    useClickAway(elementRef, () => {\n        setVisible(false);\n    });\n\n    return (\n        <div ref={elementRef} className={cnTokenApply('padding')}>\n            <TokenApplyButton\n                title={'padding'}\n                className={cnTokenApply('paddingTrigger')}\n                onClick={togglePopup}\n                icon\n                checked={visible}\n                active={isActive(values, [\n                    'paddingLeft',\n                    'paddingRight',\n                    'paddingTop',\n                    'paddingBottom',\n                ])}\n            >\n                <PaddingIcon />\n            </TokenApplyButton>\n            <div className={cnTokenApply('MiniPopup', { visible })}>\n                <div\n                    ref={elementRef}\n                    className={cnTokenApply('paddingContainer')}\n                >\n                    <TokenApplyButton\n                        title={'padding'}\n                        className={cnTokenApply('paddingAll')}\n                        onClick={onClickAllHandler}\n                        \n                    >\n                        <PaddingIcon />\n                    </TokenApplyButton>\n                    <TokenApplyButton\n                        title={'paddingLeft'}\n                        className={cnTokenApply('paddingLeft')}\n                        onClick={onClickLeftHandler}\n                        active={isActive(values, 'paddingLeft')}\n                    >\n                        <ArrowIcon direction=\"left\" />\n                    </TokenApplyButton>\n                    <TokenApplyButton\n                        title={'paddingRight'}\n                        className={cnTokenApply('paddingRight')}\n                        onClick={onClickRightHandler}\n                        active={isActive(values, 'paddingRight')}\n                    >\n                        <ArrowIcon direction=\"right\" />\n                    </TokenApplyButton>\n                    <TokenApplyButton\n                        title={'paddingTop'}\n                        className={cnTokenApply('paddingTop')}\n                        onClick={onClickTopHandler}\n                        active={isActive(values, 'paddingTop')}\n                    >\n                        <ArrowIcon direction=\"top\" />\n                    </TokenApplyButton>\n                    <TokenApplyButton\n                        title={'paddingBottom'}\n                        className={cnTokenApply('paddingBottom')}\n                        onClick={onClickBottomHandler}\n                        active={isActive(values, 'paddingBottom')}\n                    >\n                        <ArrowIcon direction=\"bottom\" />\n                    </TokenApplyButton>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst TokenApplyBorderRadius: FC<{\n    onClick: (\n        key: TokenApplyType['tokenKey'] | TokenApplyType['tokenKey'][]\n    ) => void;\n    values: TokenValue;\n}> = ({ onClick, values }) => {\n    const onClickBottomLeftHandler = useCallback(() => {\n        onClick('borderRadiusBottomLeft');\n    }, [onClick]);\n    const onClickBottomRightHandler = useCallback(() => {\n        onClick('borderRadiusBottomRight');\n    }, [onClick]);\n    const onClickTopRightHandler = useCallback(() => {\n        onClick('borderRadiusTopRight');\n    }, [onClick]);\n    const onClickTopLeftHandler = useCallback(() => {\n        onClick('borderRadiusTopLeft');\n    }, [onClick]);\n    const onClickAllHandler = useCallback(() => {\n        onClick([\n            'borderRadiusTopRight',\n            'borderRadiusTopLeft',\n            'borderRadiusBottomRight',\n            'borderRadiusBottomLeft',\n        ]);\n    }, [onClick]);\n\n    const [visible, setVisible] = useState(false);\n    const togglePopup = useCallback(() => {\n        setVisible((v) => !v);\n    }, []);\n    const elementRef = useRef<HTMLDivElement>(null);\n    useClickAway(elementRef, () => {\n        setVisible(false);\n    });\n\n    return (\n        <div ref={elementRef} className={cnTokenApply('borderRadius')}>\n            <TokenApplyButton\n                title={'borderRadius'}\n                className={cnTokenApply('borderRadiusTrigger')}\n                onClick={togglePopup}\n                icon\n                checked={visible}\n                active={isActive(values, [\n                    'borderRadiusTopLeft',\n                    'borderRadiusTopRight',\n                    'borderRadiusBottomRight',\n                    'borderRadiusBottomLeft',\n                ])}\n            >\n                <BorderIcon direction=\"left\" />\n            </TokenApplyButton>\n            <div className={cnTokenApply('MiniPopup', { visible })}>\n                <div className={cnTokenApply('borderRadiusContainer')}>\n                    <TokenApplyButton\n                        title={'borderRadius'}\n                        className={cnTokenApply('borderRadiusAll')}\n                        onClick={onClickAllHandler}\n                    ></TokenApplyButton>\n                    <TokenApplyButton\n                        title={'borderRadiusTopLeft'}\n                        className={cnTokenApply('borderRadiusTopLeft')}\n                        onClick={onClickTopLeftHandler}\n                        active={isActive(values, 'borderRadiusTopLeft')}\n                    >\n                        <BorderIcon direction=\"left\" />\n                    </TokenApplyButton>\n                    <TokenApplyButton\n                        title={'borderRadiusTopRight'}\n                        className={cnTokenApply('borderRadiusTopRight')}\n                        onClick={onClickTopRightHandler}\n                        active={isActive(values, 'borderRadiusTopRight')}\n                    >\n                        <BorderIcon direction=\"right\" />\n                    </TokenApplyButton>\n                    <TokenApplyButton\n                        title={'borderRadiusBottomRight'}\n                        className={cnTokenApply('borderRadiusBottomRight')}\n                        onClick={onClickBottomRightHandler}\n                        active={isActive(values, 'borderRadiusBottomRight')}\n                    >\n                        <BorderIcon direction=\"top\" />\n                    </TokenApplyButton>\n                    <TokenApplyButton\n                        title={'borderRadiusBottomLeft'}\n                        className={cnTokenApply('borderRadiusBottomLeft')}\n                        onClick={onClickBottomLeftHandler}\n                        active={isActive(values, 'borderRadiusBottomLeft')}\n                    >\n                        <BorderIcon direction=\"bottom\" />\n                    </TokenApplyButton>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const TokenApplyType: FC<TokenApplyType> = ({\n    tokenKey,\n    value,\n    onClick,\n    values,\n}) => {\n    const onClickHandler = useCallback(() => {\n        onClick(tokenKey);\n    }, [tokenKey, onClick]);\n\n    const active = typeof values[tokenKey] !== 'undefined';\n\n    switch (tokenKey) {\n        case 'fill':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    title={tokenKey}\n                    onClick={onClickHandler}\n                >\n                    <div\n                        style={{ background: value }}\n                        className={cnTokenApply('fill')}\n                    />\n                </TokenApplyButton>\n            );\n        case 'borderColor':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    title={tokenKey}\n                    onClick={onClickHandler}\n                >\n                    <div\n                        style={{ borderColor: value }}\n                        className={cnTokenApply('border')}\n                    />\n                </TokenApplyButton>\n            );\n        case 'width':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    title={tokenKey}\n                    onClick={onClickHandler}\n                >\n                    <div\n                        style={{ borderColor: value }}\n                        className={cnTokenApply('sizing')}\n                    >\n                        <span className={cnTokenApply('sizingLabel')}>W</span>\n                        {value}\n                    </div>\n                </TokenApplyButton>\n            );\n        case 'height':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    title={tokenKey}\n                    onClick={onClickHandler}\n                >\n                    <div\n                        style={{ borderColor: value }}\n                        className={cnTokenApply('sizing')}\n                    >\n                        <span className={cnTokenApply('sizingLabel')}>H</span>\n                        {value}\n                    </div>\n                </TokenApplyButton>\n            );\n        case 'paddingLeft':\n            return <TokenApplyPadding values={values} onClick={onClick} />;\n        case 'paddingRight':\n        case 'paddingTop':\n        case 'paddingBottom':\n            return null;\n        case 'itemSpacing':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    title={'itemSpacing'}\n                    onClick={onClickHandler}\n                    icon\n                >\n                    <Icon color=\"black\" name=\"spacing\" />\n                </TokenApplyButton>\n            );\n        case 'borderRadiusTopLeft':\n            return <TokenApplyBorderRadius values={values} onClick={onClick} />;\n        case 'borderRadiusTopRight':\n        case 'borderRadiusBottomRight':\n        case 'borderRadiusBottomLeft':\n            return null;\n        case 'borderWidth':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    title={'itemSpacing'}\n                    onClick={onClickHandler}\n                    icon\n                >\n                    <Icon color=\"black\" name=\"stroke-weight\" />\n                    {/* <BorderWidthIcon className={cnTokenApply('BigIcon')} /> */}\n                </TokenApplyButton>\n            );\n        case 'fontFamily':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    onClick={onClickHandler}\n                    title={tokenKey}\n                >\n                    Family\n                </TokenApplyButton>\n            );\n        case 'fontSize':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    onClick={onClickHandler}\n                    title={'fontSize'}\n                    icon\n                >\n                    <FontSizeIcon />\n                </TokenApplyButton>\n            );\n        case 'fontWeight':\n            return Number(value) % 100 === 0 ? (\n                <TokenApplyButton\n                    active={active}\n                    onClick={onClickHandler}\n                    title={tokenKey}\n                >\n                    {value}\n                </TokenApplyButton>\n            ) : null;\n        case 'lineHeight':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    onClick={onClickHandler}\n                    title={tokenKey}\n                    icon\n                >\n                    <LineHeightIcon />\n                </TokenApplyButton>\n            );\n        case 'paragraphSpacing':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    onClick={onClickHandler}\n                    title={tokenKey}\n                    icon\n                >\n                    <ParagraphSpacingIcon />\n                </TokenApplyButton>\n            );\n        case 'letterSpacing':\n            return (\n                <TokenApplyButton\n                    active={active}\n                    onClick={onClickHandler}\n                    title={tokenKey}\n                    icon\n                >\n                    <LetterSpacingIcon />\n                </TokenApplyButton>\n            );\n    }\n    return null;\n};\n","import { cn } from '@bem-react/classname';\nimport React, { FC, useCallback } from 'react';\nimport { TokenKeys, TokenValue, TokenValueKeys } from '../../../TokenTypes';\n\nimport './TokenApply.css';\nimport { TokenApplyType } from './TokenApplyType';\n\ninterface TokenApplyProps {\n    name: string;\n    value: string;\n    values: TokenValue;\n    description?: string;\n    onChange: (newValue: TokenValueKeys[]) => void;\n}\n\ntype TokenTypes = keyof typeof TokenKeys;\n\nconst getTokenTypes = (\n    name: string,\n    value: string\n): TokenTypes[] | undefined => {\n    console.log(/px$/.test(value), value);\n    if (Number.isFinite(Number(value)) || /px$/.test(value)) {\n        return ['size', 'spacing', 'border', 'font'];\n    }\n\n    if (name.includes('color')) {\n        return ['color'];\n    }\n\n    if (typeof name === 'string') {\n        return ['fontFamily'];\n    }\n};\n\nconst cnTokenApply = cn('TokenApply');\n\nexport const TokenApply: FC<TokenApplyProps> = ({\n    name,\n    value,\n    values,\n    description,\n    onChange,\n}) => {\n    const applyHandler = useCallback(\n        (key: TokenValueKeys | TokenValueKeys[]) => {\n            // @ts-expect-error\n            onChange([].concat(key));\n        },\n        [value, onChange]\n    );\n\n    return (\n        <div className={cnTokenApply()}>\n            <h3 className={cnTokenApply('Name')}>\n                {name}\n                {description ? (\n                    <div className={cnTokenApply('Description')}>\n                        {description}\n                    </div>\n                ) : null}\n            </h3>\n            {getTokenTypes(name, value)?.map((group) => {\n                return (\n                    <div className={cnTokenApply('Group')}>\n                        <h4 className={cnTokenApply('GroupName')}>{group}</h4>\n                        <div className={cnTokenApply('Values')}>\n                            {\n                                TokenKeys[group].map((key) => (\n                                    <TokenApplyType\n                                        tokenKey={key}\n                                        value={value}\n                                        values={values}\n                                        onClick={applyHandler}\n                                    />\n                                ))\n                                // <button onClick={() => applyHandler(key)}>\n                                //     {key}\n                                // </button>\n                            }\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","import React, { useState, useRef, useCallback, FC, useMemo } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { Popup } from '@yandex-lego/components/Popup/desktop/bundle';\n\nimport { metricaGoal } from '../../../components/YaMetrika';\n\nimport './ColorPicker.css';\n\nexport type ColorPickerProps = {\n    color: string;\n    onChange?: (color: string) => void;\n    shape?: 'circle' | 'square';\n    className?: string;\n};\n\nexport const ColorPicker: FC<ColorPickerProps> = ({\n    color,\n    onChange,\n    shape = 'circle',\n    className,\n}) => {\n    const [visible, setVisible] = useState(false);\n\n    const scopeRef = useRef<HTMLDivElement>(null);\n    const anchorRef = useRef<HTMLDivElement>(null);\n\n    const handleClick = useCallback(() => {\n        if (!onChange) {\n            return;\n        }\n\n        setVisible(true);\n        metricaGoal('picker');\n    }, [onChange]);\n\n    const handleClose = useCallback(() => {\n        setVisible(false);\n    }, []);\n\n    const handleColorChange = useCallback(\n        (event) => {\n            onChange?.(event);\n            metricaGoal('change-tokens');\n        },\n        [onChange]\n    );\n\n    const backgroundColorStyle = useMemo(() => ({ background: color }), [\n        color,\n    ]);\n\n    return (\n        <div\n            ref={scopeRef}\n            className={`ColorPicker ${className ? className : ''}`}\n        >\n            <div\n                ref={anchorRef}\n                onClick={handleClick}\n                className={`ColorPicker-Preview ColorPicker-Preview_shape_${shape}`}\n                style={backgroundColorStyle}\n            />\n            <Popup\n                direction=\"bottom-end\"\n                target=\"anchor\"\n                anchor={anchorRef}\n                view=\"default\"\n                visible={visible}\n                scope={scopeRef}\n                onClose={handleClose}\n            >\n                <ChromePicker color={color} onChange={handleColorChange} />\n            </Popup>\n        </div>\n    );\n};\n","import React, {\n    FC,\n    useEffect,\n    useState,\n    useCallback,\n    FocusEventHandler,\n} from 'react';\nimport { cnTextinput } from '@yandex-lego/components/Textinput/Textinput';\nimport { withDebounceInput } from '@yandex-lego/components/withDebounceInput';\nimport { IconButton, Input } from 'react-figma-components';\nimport { debounce } from 'lodash';\n\nimport { convertColorObj, hexAndAlphaToRgba } from '../../../../../utils/color';\nimport { ColorPicker } from '../../../ColorPicker';\nimport { TokenType } from '../../../../model/tokens';\n\nimport './Color.css';\n\nexport type ColorProps = TokenType & {\n    handleLink: (token: string) => void;\n    handleColorChange: (color: string) => void;\n    type: 'color';\n    name: string;\n};\n\nconst DebounceInput = withDebounceInput(Input);\n\nexport const Color: FC<ColorProps> = ({\n    handleLink,\n    handleColorChange,\n    color,\n    hex,\n    alpha,\n    name,\n}) => {\n    const [_hex, setHex] = useState(hex);\n    const [_alpha, setAlpha] = useState(alpha);\n    const [_color, setColor] = useState(color);\n\n    const handleColorChangeDebounced = useCallback(\n        debounce(handleColorChange, 100),\n        [handleColorChange]\n    );\n\n    useEffect(() => {\n        if (hex) {\n            setHex(hex);\n        }\n        if (alpha) {\n            setAlpha(alpha);\n        }\n        if (color) {\n            setColor(color);\n        }\n    }, [hex, alpha, color]);\n\n    const handleInputChange = useCallback(\n        (hex: string, alpha: string) => {\n            try {\n                const color = hexAndAlphaToRgba(hex, alpha.replace('%', ''));\n                handleColorChange(color);\n            } catch (e) {}\n        },\n        [handleColorChange]\n    );\n\n    const _handleColorChange = useCallback(\n        (color: any) => {\n            const _color = convertColorObj(color);\n\n            setColor(_color);\n            handleColorChangeDebounced(_color);\n        },\n        [handleColorChangeDebounced]\n    );\n\n    const handleLinkHandler = useCallback(() => handleLink(name), [\n        name,\n        handleLink,\n    ]);\n    const hexChangeHandler = useCallback(\n        (event) => handleInputChange(event.target.value, _alpha),\n        [_alpha, handleInputChange]\n    );\n    const alphaChangeHandler = useCallback(\n        (event) => handleInputChange(_hex, event.target.value),\n        [_hex, handleInputChange]\n    );\n\n    const selectTextOnFocus: FocusEventHandler = (event) => {\n        // @ts-ignore\n        event.target.setSelectionRange(0, event.target.value.length);\n    };\n\n    return (\n        <>\n            <div className={cnTextinput({ type_color: true })}>\n                <ColorPicker\n                    color={_color}\n                    onChange={_handleColorChange}\n                    className=\"Textinput-Picker\"\n                    shape=\"square\"\n                />\n                <DebounceInput\n                    className=\"Textinput-Hex\"\n                    value={_hex}\n                    debounceTimeout={500}\n                    onChange={hexChangeHandler}\n                    maxLength={6}\n                    onFocus={selectTextOnFocus}\n                />\n                <DebounceInput\n                    className=\"Textinput-Alpha\"\n                    value={_alpha}\n                    debounceTimeout={500}\n                    onChange={alphaChangeHandler}\n                    maxLength={4}\n                    onFocus={selectTextOnFocus}\n                />\n                <IconButton\n                    name=\"hyperlink\"\n                    onPress={handleLinkHandler}\n                    className=\"Textinput-BreakIcon\"\n                />\n            </div>\n        </>\n    );\n};\n","import React, { FC, useCallback } from 'react';\nimport { cnTextinput } from '@yandex-lego/components/Textinput/Textinput';\nimport { IconButton } from 'react-figma-components';\n\nimport { ColorPicker } from '../../../../components/ColorPicker';\nimport { TokenType } from '../../../../model/tokens';\n\nimport './Link.css';\n\nexport type LinkProps = TokenType & {\n    handleLink: (token: string) => void;\n    type: 'link';\n};\n\nexport const Link: FC<LinkProps> = ({\n    name,\n    link,\n    isColor,\n    colorValue,\n    handleLink,\n}) => {\n    const handleLinkHandler = useCallback(() => handleLink(name), [handleLink,name]);\n    const handleRefHandler = useCallback(() => handleLink(link), [handleLink, link]);\n\n\n    return (\n        <div className={cnTextinput({ type_link: true })}>\n            {isColor && (\n                <ColorPicker\n                    color={colorValue}\n                    shape=\"circle\"\n                    className=\"Textinput-Picker\"\n                />\n            )}\n            <div className={cnTextinput('LinkWrapper')}><span className={cnTextinput('Link')} onClick={handleRefHandler}>{link}</span></div>\n            <IconButton\n                name=\"break\"\n                onPress={handleLinkHandler}\n                className=\"Textinput-BreakIcon\"\n            />\n        </div>\n    );\n};\n","import React, { ChangeEventHandler, FC, FocusEventHandler } from 'react'\nimport { withDebounceInput } from '@yandex-lego/components/withDebounceInput'\nimport { Input } from 'react-figma-components'\n\nimport { TokenBase } from '../../../../model/tokens'\nimport { cnTextinput } from '../../../../../components/Textinput'\n\nexport type TextProps = TokenBase & {\n  handleChange: ChangeEventHandler<HTMLInputElement>\n  value: string\n}\n\nconst DebounceInput = withDebounceInput(Input)\n\nexport const Text: FC<TextProps> = ({ label, value, handleChange }) => {\n  const selectTextOnFocus: FocusEventHandler = (event) => {\n    // @ts-ignore\n    event.target.setSelectionRange(0, event.target.value.length)\n  }\n  return (\n    <div className={cnTextinput({ type_text: true })}>\n      <DebounceInput\n        onChange={handleChange}\n        onFocus={selectTextOnFocus}\n        value={value}\n        debounceTimeout={500}\n        forceNotifyByEnter\n        forceNotifyOnBlur\n        data-testid={label}\n        className=\"TextinputField-Input\"\n      />\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport { TextinputBase, TextinputBaseProps } from '../../../../components/Textinput'\nimport { toHEXA } from '../../../../utils/color'\n\nimport './TokenPrevious.css'\n\nexport const cnTokenPrevious = cn('TokenPrevious')\n\nexport type TokenPreviousProps = Omit<TextinputBaseProps, 'label'> & {\n  color: string\n  handleClick: () => void\n}\n\nexport const TokenPrevious: FC<TokenPreviousProps> = ({ color, handleClick, ...props }) => {\n  const [hex, alpha] = toHEXA(color)\n\n  return (\n    <TextinputBase\n      label=\"initial value\"\n      className={cnTokenPrevious()}\n      onClick={handleClick}\n      {...props}\n    >\n      <div className={cnTokenPrevious('Body')}>\n        <span className={cnTokenPrevious('Hex')}>{hex}</span>\n        <span className={cnTokenPrevious('Alpha')}>{alpha}</span>\n      </div>\n    </TextinputBase>\n  )\n}\n","import { Popup } from '@yandex-lego/components/Popup/desktop/bundle';\nimport { useStore } from 'effector-react';\nimport React, { useCallback, FC, useMemo, useState, useRef } from 'react';\n\nimport { TextinputBase } from '../../../components/Textinput';\nimport { metricaGoal } from '../../../components/YaMetrika';\nimport { $currentNodes, setCurrentNodesToken } from '../../../model/figma';\nimport { tokenUpdate } from '../../model/tokens';\nimport { tokenChange, TokenType } from '../../model/tokens';\nimport { TokenValue, TokenValueKeys } from '../../../TokenTypes';\nimport { TokenApply } from '../TokenApply/TokenApply';\nimport { Text, Color, Link } from './Inputs';\nimport { TokenPrevious } from './TokenPrevious';\n\nexport type TokenProps = TokenType & {\n    value?: string | number;\n};\n\nexport const TokenField: FC<TokenProps> = (props) => {\n    const {\n        label,\n        description,\n        type,\n        path,\n        defaultValue,\n        changed,\n        name,\n    } = props;\n\n    const handleTextChange = useCallback(\n        (event) => {\n            tokenUpdate({\n                name,\n                value: event.target.value,\n            });\n            metricaGoal('change-tokens');\n        },\n        [path, name]\n    );\n\n    const handleColorChange = useCallback(\n        (color) => {\n            tokenUpdate({\n                name,\n                value: color,\n            });\n        },\n        [name, path]\n    );\n\n    const handleLink = useCallback((token: string) => {\n        tokenChange(token);\n    }, []);\n\n    const handleClear = useCallback(() => {\n        tokenUpdate({\n            name,\n            value: defaultValue,\n            remove: true,\n        });\n    }, [defaultValue, name, path]);\n\n    const inner = useMemo(() => {\n        switch (props.type) {\n            case 'text':\n                return <Text handleChange={handleTextChange} {...props} />;\n            case 'color':\n                return (\n                    <Color\n                        handleLink={handleLink}\n                        handleColorChange={handleColorChange}\n                        {...props}\n                    />\n                );\n            case 'link':\n                return <Link handleLink={handleLink} {...props} />;\n        }\n        // @ts-expect-error\n    }, [props.type, props.color, props.colorValue, props.value]);\n\n    const [showApplyToken, setShowApplyToken] = useState(false);\n    const labelRef = useRef(null);\n    const nodes = useStore($currentNodes);\n    const { tokens, nodeId } = nodes[0] || {};\n\n    const selectedNodeToken = tokens\n        ? tokens.find((t) => t.name === name)\n        : null;\n    const tokenValues = selectedNodeToken?.value || {};\n\n    const onTokenApply = useCallback(\n        (key: TokenValueKeys[]) => {\n            const tokenValue = key.reduce<TokenValue>(\n                (res, key) => {\n                    if (typeof res[key] === 'undefined') {\n                        // @ts-expect-error\n                        res[key] = props.value;\n                    } else {\n                        delete res[key];\n                    }\n                    return res;\n                },\n                { ...tokenValues }\n            );\n\n            setCurrentNodesToken({ name, value: tokenValue });\n        },\n        [name, props.value, tokenValues]\n    );\n\n    const onLabelClickHandler = useCallback(() => {\n        setShowApplyToken((v) => !v);\n    }, []);\n\n    return (\n        <>\n            <TextinputBase onLabelClick={onLabelClickHandler} labelRef={labelRef} label={label} tip={description}>\n                {inner}\n            </TextinputBase>\n            <Popup\n                visible={showApplyToken}\n                onClose={onLabelClickHandler}\n                hasTail\n                target=\"anchor\"\n                anchor={labelRef}\n                view=\"default\"\n            >\n                {nodeId ? (\n                    <TokenApply\n                        name={name}\n                        value={props.value as string}\n                        description={description}\n                        values={tokenValues}\n                        onChange={onTokenApply}\n                    />\n                ) : null}\n            </Popup>\n            {type === 'color' && changed && (\n                <TokenPrevious color={defaultValue} handleClick={handleClear} />\n            )}\n        </>\n    );\n};\n","import { cn } from '@bem-react/classname';\nimport React, { FC, useCallback, useState } from 'react';\nimport { IconButton } from 'react-figma-components';\nimport { tokenChange } from '../../model/tokens';\nimport { TokenType } from '../../model/tokensToShow';\nimport { ExpandButton } from '../../../components/ExpandButton';\nimport { Section } from '../../../components/Section/Section';\nimport { TokenField } from '../TokenField';\n\nconst cnTokens = cn('Tokens');\n\nconst AMOUNT_TO_HIDE = 4;\n\nconst prettyLabelName = (token: TokenType, group?: string) => {\n    if (!group) return token.label;\n    if (group === token.label) {\n        const parts = token.label.split('-');\n        return parts[parts.length - 1];\n    }\n\n    return token.label.replace(group + '-', '');\n};\n\nexport type TokenGroupProps = {\n    name?: string;\n    tokens?: TokenType[];\n    addNewToken?: boolean;\n};\n\nexport const TokenGroup: FC<TokenGroupProps> = ({\n    name,\n    tokens = [],\n    addNewToken,\n}) => {\n    const [opened, setOpened] = useState(false);\n\n    const handleOpen = useCallback(() => setOpened(true), []);\n\n    const onAddNewToken = useCallback(() => {\n        tokenChange(`${name !== 'globals' ? name + '-' : ''}<new-token>`);\n    }, [name]);\n\n    return (\n        <Section\n            header={\n                <>\n                    {name}{' '}\n                    {addNewToken ? (\n                        <IconButton\n                            name=\"plus\"\n                            onClick={onAddNewToken}\n                            className={cnTokens('AddTokenBtn')}\n                        />\n                    ) : null}\n                </>\n            }\n        >\n            <div>\n                {(opened ? tokens : tokens?.slice(0, AMOUNT_TO_HIDE))?.map(\n                    (token) => (\n                        <TokenField\n                            {...token}\n                            key={token.label}\n                            label={prettyLabelName(token, name)}\n                        />\n                    )\n                )}\n                {!opened && tokens.length > AMOUNT_TO_HIDE && (\n                    <ExpandButton amount={tokens.length} onPress={handleOpen} />\n                )}\n            </div>\n        </Section>\n    );\n};\n","import { combine } from 'effector';\nimport { $allTokensDeps, $allTokensObject } from '../../model/tokens';\nimport { $token, tokenReset } from '../../model/tokens';\n\nexport type SelectedTokenType = {};\n\nexport const closeEditor = tokenReset;\n\nexport const $selectedToken = combine(\n    { token: $token, tokens: $allTokensObject, deps: $allTokensDeps },\n    ({ token, tokens, deps }) => {\n        const {\n            description = '',\n            refs = [],\n            type = 'text',\n            name = '',\n            original: { value: rawValue = '' },\n            value = '',\n        } = tokens[token] || { original: { value: '' } };\n\n        return {\n            token,\n            description,\n            inherit: refs.length > 0,\n            type,\n            deps: deps[token],\n            rawValue,\n            name,\n            value,\n        };\n    }\n);\n\n$selectedToken.watch(console.log);\n","import React, {\n    FC,\n    useEffect,\n    useState,\n    useCallback,\n    FocusEventHandler,\n} from 'react';\nimport { cnTextinput } from '@yandex-lego/components/Textinput/Textinput';\nimport { withDebounceInput } from '@yandex-lego/components/withDebounceInput';\nimport { Input } from 'react-figma-components';\nimport { debounce } from 'lodash';\n\nimport { convertColorObj, hexAndAlphaToRgba } from '../../../../utils/color';\nimport { ColorPicker } from '../../ColorPicker';\n\nimport './Color.css';\n\nexport type ColorProps = {\n    handleColorChange: (color: string) => void;\n    color: string;\n    hex: string;\n    alpha: string;\n};\n\nconst DebounceInput = withDebounceInput(Input);\n\nexport const Color: FC<ColorProps> = ({\n    handleColorChange,\n    color,\n    hex,\n    alpha,\n}) => {\n    const [_hex, setHex] = useState(hex);\n    const [_alpha, setAlpha] = useState(alpha);\n    const [_color, setColor] = useState(color);\n\n    const handleColorChangeDebounced = useCallback(\n        debounce(handleColorChange, 100),\n        [handleColorChange]\n    );\n\n    useEffect(() => {\n        if (hex) {\n            setHex(hex);\n        }\n        if (alpha) {\n            setAlpha(alpha);\n        }\n        if (color) {\n            setColor(color);\n        }\n    }, [hex, alpha, color]);\n\n    const handleInputChange = useCallback(\n        (hex: string, alpha: string) => {\n            try {\n                const color = hexAndAlphaToRgba(hex, alpha.replace('%', ''));\n                handleColorChange(color);\n            } catch (e) {}\n        },\n        [handleColorChange]\n    );\n\n    const _handleColorChange = useCallback(\n        (color: any) => {\n            const _color = convertColorObj(color);\n\n            setColor(_color);\n            handleColorChangeDebounced(_color);\n        },\n        [handleColorChangeDebounced]\n    );\n\n    const hexChangeHandler = useCallback(\n        (event) => handleInputChange(event.target.value, _alpha),\n        [_alpha, handleInputChange]\n    );\n    const alphaChangeHandler = useCallback(\n        (event) => handleInputChange(_hex, event.target.value),\n        [_hex, handleInputChange]\n    );\n\n    const selectTextOnFocus: FocusEventHandler = (event) => {\n        // @ts-ignore\n        event.target.setSelectionRange(0, event.target.value.length);\n    };\n\n    return (\n        <>\n            <div className={cnTextinput({ type_color: true })}>\n                <ColorPicker\n                    color={_color}\n                    onChange={_handleColorChange}\n                    className=\"Textinput-Picker\"\n                    shape=\"square\"\n                />\n                <DebounceInput\n                    className=\"Textinput-Hex\"\n                    value={_hex}\n                    debounceTimeout={500}\n                    onChange={hexChangeHandler}\n                    maxLength={6}\n                    onFocus={selectTextOnFocus}\n                />\n                <DebounceInput\n                    className=\"Textinput-Alpha\"\n                    value={_alpha}\n                    debounceTimeout={500}\n                    onChange={alphaChangeHandler}\n                    maxLength={4}\n                    onFocus={selectTextOnFocus}\n                />\n            </div>\n        </>\n    );\n};\n","import { $allTokens } from '../Tokens/model/tokens';\nimport { MappingsType } from '../types';\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button-view-action-fill-color-base': 'button.viewAction.fillColor.base.value',\n * }\n */\nexport const $tokenMappings = $allTokens.map<MappingsType>((tokens) =>\n    tokens.reduce((acc, { name, path }) => {\n        const mappedName = [...path, 'value'].join('.');\n        return { ...acc, [name]: mappedName };\n    }, {})\n);\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button.viewAction.fillColor.base.value': 'button-view-action-fill-color-base',\n * }\n */\nexport const $invertedTokenMappings = $allTokens.map<MappingsType>((tokens) =>\n    tokens.reduce((acc, { name, path }) => {\n        const mappedName = [...path, 'value'].join('.');\n        return { ...acc, [mappedName]: name };\n    }, {})\n);\n","import React, {\n    ChangeEventHandler,\n    FC,\n    useState,\n    useEffect,\n    useCallback,\n} from 'react';\nimport { useStore } from 'effector-react';\nimport { cn } from '@bem-react/classname';\nimport { Button, Icon, Input, Switch, Textarea } from 'react-figma-components';\nimport { transformValueWithColorFn } from '@yandex/themekit-core/lib/builtins/value-color-function-transform';\n\nimport { Divider } from '../../../lib/lego/Divider';\nimport { TooltipStateful } from '../../../lib/lego/Tooltip';\nimport { $selectedToken, closeEditor } from './model';\nimport { BackIcon, TipIcon } from '../../../icons';\nimport './TokenEditor.css';\nimport { Color } from './Color';\nimport { ColorPicker } from '../../components/ColorPicker';\nimport { $allTokensDeps, $allTokensObject, TokenStoreType, tokenUpdate } from '../../model/tokens';\nimport { toHEXA } from '../../../utils/color';\nimport { extractParams } from '../../../utils/extractParams';\nimport { $invertedTokenMappings } from '../../../model/mappings';\nimport { PARAM_DOT_RE } from '../../../utils/constants';\nimport { IconBack } from '../../../components/IconBack';\nimport { Section } from '../../../components/Section/Section';\nimport { TokenGroup } from '../Tokens/TokenGroup';\nimport { mapToken } from '../../model/tokensToShow';\nimport { Tokens } from '../Tokens/Tokens';\n\nexport const cnTokenEditor = cn('TokenEditor');\n\nexport type TokenEditorProps = {\n    className?: string;\n};\n\nexport const TokenEditor: FC<TokenEditorProps> = ({ className, ...props }) => {\n    const {\n        token,\n        description,\n        inherit: inheritDefault,\n        rawValue,\n        type,\n        deps,\n        name,\n        value: resolvedValue,\n    } = useStore($selectedToken);\n    const tokens = useStore($allTokensObject);\n    const mappings = useStore($invertedTokenMappings);\n    const [inherit, setInherit] = useState(inheritDefault);\n    const [changed, setChanged] = useState(false);\n    const [value, setValue] = useState(rawValue);\n    const [colorPreview, setColorPreview] = useState(resolvedValue);\n    const [newName, setNewName] = useState(token);\n\n    useEffect(() => setNewName(token), [token])\n\n    const namgeChangeHandler = useCallback((e) => {\n        setNewName(e.target.value);\n    }, []);\n\n    useEffect(() => {\n        setValue(inherit ? rawValue : resolvedValue);\n        setChanged(false);\n    }, [inherit, rawValue, resolvedValue]);\n\n    useEffect(() => {\n        if (inherit) {\n            setChanged(value !== rawValue);\n        } else {\n            setChanged(value !== resolvedValue);\n        }\n    }, [inherit, rawValue, resolvedValue, value]);\n\n    useEffect(() => {\n        const tokensToReplace = extractParams(value, PARAM_DOT_RE)?.map(\n            ({ token, template }) => ({\n                toReplace: template,\n                token: mappings[token],\n            })\n        );\n\n        if (\n            !tokensToReplace ||\n            !tokensToReplace.every((token) => Boolean(token))\n        ) {\n            setColorPreview(value);\n            return;\n        }\n\n        try {\n            const toTransform = tokensToReplace.reduce(\n                (acc, { token, toReplace }) =>\n                    (acc = acc.replace(toReplace, tokens[token].value)),\n                value\n            );\n\n            setColorPreview(\n                transformValueWithColorFn.transformer({\n                    // @ts-ignore\n                    token: { value: toTransform },\n                })\n            );\n        } catch {\n            return;\n        }\n    }, [mappings, tokens, value]);\n\n    const handleSwitchChange = () => setInherit((prev) => !prev);\n    const handleInputChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n        (e) => {\n            setValue(e.target.value);\n            console.log(e);\n        },\n        []\n    );\n    const handleColorChange = setValue;\n\n    const handleReset = () => {\n        setValue(inherit ? rawValue : resolvedValue);\n    };\n\n    const handleSave = () => {\n        tokenUpdate({ name: name || newName, value });\n        closeEditor();\n    };\n\n    return (\n        <div className={cnTokenEditor(null, [className])} {...props}>\n            <Section>\n                <div className={cnTokenEditor('Header')}>\n                    <span>Edit token</span>\n                    <Icon\n                        name=\"close\"\n                        color=\"black\"\n                        onClick={closeEditor}\n                        className={cnTokenEditor('CloseIcon')}\n                    />\n                </div>\n            </Section>\n            <Section header=\"Name\">\n                <div className={cnTokenEditor('Description')}>\n                    <Input\n                        value={newName}\n                        readOnly={Boolean(name)}\n                        onChange={namgeChangeHandler}\n                    />\n                    {description && (\n                        <Textarea\n                            value={description}\n                            readOnly={Boolean(name)}\n                        />\n                    )}\n                </div>\n            </Section>\n            <Section>\n                <div className={cnTokenEditor('Controls')}>\n                    <div className={cnTokenEditor('Header')}>\n                        <span>Properties</span>\n                        <div className={cnTokenEditor('Switch')}>\n                            <Switch\n                                checked={inherit}\n                                onChange={handleSwitchChange}\n                            />\n                            <span>Inheritance</span>\n                            <TooltipStateful content=\"You can use formulas in “color(value h() s() l() a())” format \">\n                                <span>\n                                    <TipIcon className=\"\" />\n                                </span>\n                            </TooltipStateful>\n                        </div>\n                    </div>\n                    <div\n                        className={cnTokenEditor('Input', {\n                            type__color: type === 'color',\n                            type__text: type === 'text',\n                            inherit: inherit,\n                        })}\n                    >\n                        <div className={cnTokenEditor('InputContent')}>\n                            {inherit && type === 'color' && (\n                                <>\n                                    <ColorPicker\n                                        color={colorPreview}\n                                        shape=\"circle\"\n                                    />\n                                    <Input\n                                        value={value}\n                                        onChange={handleInputChange}\n                                    />\n                                </>\n                            )}\n                            {!inherit && type === 'color' && (\n                                <Color\n                                    color={value}\n                                    handleColorChange={handleColorChange}\n                                    hex={toHEXA(value)[0]}\n                                    alpha={toHEXA(value)[1]}\n                                />\n                            )}\n                            {type === 'text' && (\n                                <Input\n                                    value={value}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Value\"\n                                />\n                            )}\n                            {changed && <BackIcon />}\n                        </div>\n                        {changed && (\n                            <div\n                                className={cnTokenEditor('InputPrevious')}\n                                onClick={handleReset}\n                            >\n                                <div className=\"Title\">Initial value</div>\n                                <div className=\"Content\">\n                                    {inherit ? rawValue : resolvedValue}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </Section>\n            <Section>\n                <div className={cnTokenEditor('Actions')}>\n                    <Button\n                        view=\"primary\"\n                        disabled={!changed}\n                        onPress={handleSave}\n                    >\n                        Save Changes\n                    </Button>\n                </div>\n            </Section>\n            {deps ? <Tokens name=\"Dependencies\" tokens={deps.map(mapToken)} addNewToken={false} /> : null }\n        </div>\n    );\n};\n","import React, { FC, useMemo } from 'react';\n\nimport { TokenType } from '../../model/tokensToShow';\n\nimport './Tokens.css';\nimport { TokenGroup } from './TokenGroup';\nimport { TokenEditor } from '../TokenEditor/TokenEditor';\nimport { cn } from '@bem-react/classname';\nimport groupBy from 'lodash.groupby';\n\nexport type TokensProps = {\n    name?: string;\n    tokens: TokenType[];\n    showEditor?: boolean;\n    addNewToken?: boolean;\n};\n\nconst cnTokens = cn('Tokens');\n\nexport const groupTokens = (tokens: TokenType[]) => {\n    const groupsCount = tokens.reduce<Record<string, number>>(\n        (res, { groups }) => {\n            for (const group of groups) {\n                res[group] = res[group] ? res[group] + 1 : 1;\n            }\n\n            return res;\n        },\n        {}\n    );\n\n    return groupBy(tokens, ({ groups }) => {\n        return groups.find((group) => groupsCount[group] >= 3) || groups[0];\n    });\n};\n\nexport const Tokens: FC<TokensProps> = ({ name, tokens, showEditor, addNewToken = true }) => {\n    const currentTokensGroups = useMemo(() => {\n        if (!tokens) return [];\n        const groups = groupTokens(tokens);\n\n        return Object.keys(groups).map((key) => ({\n            name: key,\n            tokens: groups[key],\n        }));\n    }, [tokens]);\n\n    return (\n        <div className={cnTokens()}>\n            {showEditor ? (\n                <TokenEditor className={cnTokens('TokenEditor')} />\n            ) : (\n                <>  \n                    {name !== currentTokensGroups[0]?.name ? (\n                        <TokenGroup name={name} addNewToken={addNewToken} />\n                    ) : null}\n                    {currentTokensGroups.map(({ name, tokens }) => (\n                        <TokenGroup key={name} name={name} tokens={tokens} addNewToken={addNewToken} />\n                    ))}\n                </>\n            )}\n        </div>\n    );\n};\n","import { useStore } from 'effector-react';\nimport React, { FC, useMemo } from 'react';\n\nimport { $token, $tokenPresent } from '../../model/tokens';\nimport { $tokens, TokenType } from '../../model/tokensToShow';\n\nimport './Tokens.css';\nimport { TokenGroup } from './TokenGroup';\nimport { TokenEditor } from '../TokenEditor/TokenEditor';\nimport { cn } from '@bem-react/classname';\nimport { TokensType } from '../../../types';\nimport groupBy from 'lodash.groupby';\nimport { Tokens } from './Tokens';\n\nexport type TokensProps = {\n    component?: 'globals' | 'all' | string;\n};\n\nexport const TokensStore: FC<TokensProps> = ({ component = 'globals' }) => {\n    const tokens = useStore($tokens);\n    const showTokenEditor = useStore($tokenPresent);\n\n    const currentTokens =\n        component === 'globals' ? tokens.globals : tokens.components[component];\n    \n    return <Tokens name={component} tokens={currentTokens} showEditor={showTokenEditor} />\n};\n","import  * as allComponents from '@yandex-lego/components/figma';\n\n// import { allComponents } from './allComponents';\n\ntype ComponentReactTypes = typeof allComponents\nexport type AllComponentsNames = keyof ComponentReactTypes\nexport type AllComponentsTypes = {\n    [K in AllComponentsNames]: any\n}\n// export type AllComponentsValues = AllComponentsTypes[AllComponentsNames];\n\nexport const getComponentByName = (name: keyof ComponentReactTypes) => {\n    // console.log(allComponents[name]);\n\n    return allComponents[name].default.component;\n};\n\nexport const getComponentMetaByName = (name: keyof ComponentReactTypes) => {\n    // console.log(allComponents[name]);\n    const uppercasedName = name[0].toUpperCase() + name.slice(1);\n    // @ts-expect-error\n    return allComponents[uppercasedName].default;\n};\n","import { createStore, createEvent } from 'effector';\nimport { $currentNodes } from '../../model/figma';\nimport { sendToFigma } from '../../utils/figma';\nimport { AllComponentsNames, getComponentMetaByName } from '../../utils/getComponentByName';\n\nexport const activeTabChange = createEvent<string>();\nexport const componentChange = createEvent<string>();\n\n// Current tab to show\nexport const $activeTab = createStore<string>('');\n\n// Current component to show\nexport const $component = createStore<string>('overview');\n\n$activeTab.on(activeTabChange, (_, activeTab) => activeTab);\n$component.on(componentChange, (_, component) => component);\ninterface IComponent {\n    block: string;\n    props: Prop[];\n}\n\nexport const currentPropsChange = createEvent<{\n    name: string;\n    value: unknown;\n}>();\nexport const currentCombinedPropsChange = createEvent<{\n    name: string;\n    value: unknown;\n}>();\n\nexport interface Prop {\n    name: string;\n    description: string;\n    type: {\n        required: boolean;\n        name:\n            | 'node'\n            | 'boolean'\n            | 'string'\n            | 'number'\n            | 'enum'\n            | 'array'\n            | 'object';\n    };\n    options?: string[];\n    defaultValue: unknown;\n}\ninterface ComponentState {\n    allProps: Prop[];\n    currentProps: Record<string, unknown>;\n    currentCombinedProps: Record<string, unknown>;\n}\n\n// Current selected component to be shown\nexport const $componentProps = createStore<ComponentState>({\n    allProps: [],\n    currentProps: {},\n    currentCombinedProps: {},\n});\n\n$componentProps.on(componentChange, (_, component) => {\n    const currentComponent = getComponentMetaByName(component as AllComponentsNames);\n    return {\n        allProps: currentComponent.argTypes,\n        currentProps: currentComponent.args,\n        currentCombinedProps: {},\n    };\n});\n$componentProps.on(\n    currentPropsChange,\n    ({ allProps, currentProps, currentCombinedProps }, newProp) => {\n        const newState = { ...currentProps };\n        newState[newProp.name] = newProp.value;\n\n        return { allProps, currentProps: newState, currentCombinedProps };\n    }\n);\n\n$componentProps.watch(currentPropsChange, ({ currentProps }) => {\n    const component = $component.getState();\n    const selected = $currentNodes.getState();\n    const name = component ? component[0].toUpperCase() + component.slice(1) : null;\n    // @ts-expect-error\n    if (name && component && selected && selected.length && selected[0].componentData.name === name) {\n        sendToFigma({\n            blocks: [{ figmaId: selected[0].nodeId, name, props: currentProps }]\n        })\n    }\n});\n\n\n$componentProps.on(\n    currentCombinedPropsChange,\n    ({ allProps, currentProps, currentCombinedProps }, newProp) => {\n        const newState = { ...currentCombinedProps };\n        newState[newProp.name] = newProp.value;\n\n        return { allProps, currentCombinedProps: newState, currentProps };\n    }\n);\n","import React, { FC, useCallback } from 'react';\n\nimport { Textinput } from '../../../../components/Textinput';\nimport {\n    $componentProps,\n    Prop,\n    currentPropsChange,\n    currentCombinedPropsChange,\n} from '../../model';\n\nimport { useStore } from 'effector-react';\n\nexport type SettingsProps = {\n    combine: boolean;\n};\n\nexport type SettingsItemProps = {\n    prop: Prop;\n    value: unknown;\n    onChange: ({ name, value }: { name: string; value: unknown }) => void;\n};\n\nexport const Settings: FC<SettingsProps> = ({ combine }) => {\n    const { allProps, currentProps, currentCombinedProps } = useStore(\n        $componentProps\n    );\n    const onChangeProp = useCallback(\n        (value: unknown, name) => {\n            const handler = combine\n                ? currentCombinedPropsChange\n                : currentPropsChange;\n\n            handler({ name, value });\n        },\n        [combine]\n    );\n\n    const props = combine\n        ? { ...currentProps, ...currentCombinedProps }\n        : currentProps;\n\n    return (\n        <>\n            {allProps.map((prop) => {\n                const required = prop.type.required;\n                const type = prop.type.name;\n                const name = prop.name;\n\n                return (\n                    <Textinput\n                        key={name}\n                        multiple={combine}\n                        label={prop.name}\n                        tip={prop.description}\n                        type={type}\n                        value={props[prop.name] as string}\n                        onChange={onChangeProp}\n                        options={prop.options}\n                    />\n                );\n            })}\n        </>\n    );\n};\n","import React, { FC } from 'react'\n\nexport type CodeProps = {}\n\nexport const Code: FC<CodeProps> = () => {\n  return <>Code page</>\n}\n","import groupBy from \"lodash.groupby\"\nimport { merge } from 'lodash'\n\nexport const combinations = (values: unknown[][]) => {\n  if (values.length === 0) return []\n\n  return values.reduceRight((res, value) => {\n    return res.length\n      // @ts-ignore\n      ? value.map((a) => res.map((r) => r.concat(a))).flat()\n      : value.map((v) => [v])\n  }, [])\n}\n\nexport const combinationsCount = (values: unknown[][]): number => {\n  return values.reduce((res, v) => res * v.length, 0)\n}\n\nexport const getVariantsFromProps = (\n    current: Record<string, unknown>,\n    combined: Record<string, unknown>,\n  ) => {\n    const variants = Object.keys(combined).map((key) => {\n      const values = combined[key]\n      if (Array.isArray(values)) {\n        return (values as Array<string>).map((value) => ({ [key]: value }))\n      } else if (typeof values === 'boolean' && values) {\n        return [{ [key]: false }, { [key]: true }]\n      }\n      return [{ [key]: values }]\n    })\n  \n    const combinedVariants = combinations(variants).map((variant) => ({\n      ...current,\n      //@ts-expect-error\n      ...merge(...(variant as Array<unknown>)),\n    }))\n    const combinedVariantsByView = groupBy(combinedVariants, 'view')\n  \n    return Object.values(combinedVariantsByView)\n  }","import React, { useState, FC, useEffect, MouseEvent, useCallback } from 'react';\nimport { useStore } from 'effector-react';\nimport { cn } from '@bem-react/classname';\nimport { Icon, Button } from 'react-figma-components';\n\nimport { TabsMenu } from '../../../../lib/lego/TabsMenu';\nimport { Divider } from '../../../../lib/lego/Divider';\nimport { TokensStore } from '../../../../Tokens/components/Tokens/TokensStore';\n\nimport { Settings } from './Settings';\nimport { Code } from './Code';\n\nimport { $component, $componentProps, $activeTab, activeTabChange } from '../../model';\nimport {\n    $isCombine,\n    isCombineChange,\n    isCombineReset,\n} from '../../../../model/combine';\n\nimport './Playground.css';\nimport { getVariantsFromProps } from '../../../../utils/combinations';\nimport { sendToFigma } from '../../../../utils/figma';\n\nconst cnPlayground = cn('Playground');\n\nexport type PlaygroundProps = {\n    className: string;\n};\n\nexport const Playground: FC<PlaygroundProps> = ({ className }) => {\n    const component = useStore($component);\n    const combine = useStore($isCombine);\n    const activeTab = useStore($activeTab);\n    const { currentProps, currentCombinedProps } = useStore($componentProps);\n\n    const handleCombineChange = (e: MouseEvent<HTMLDivElement>) => {\n        e.stopPropagation();\n        isCombineChange();\n    };\n\n    useEffect(() => {\n        if (component === 'overview') {\n            activeTabChange('tokens');\n        }\n    }, [component]);\n\n    useEffect(() => isCombineReset, [component, activeTab]);\n\n    const combineVariantsHandler = useCallback(() => {\n        const combinedVariants = getVariantsFromProps(\n            currentProps,\n            currentCombinedProps\n        );\n\n        const blocks = combinedVariants?.flat();\n        const componentNormalizedName =\n            component[0].toUpperCase() + component.slice(1);\n        \n        sendToFigma({\n            blocks: blocks.map((props) => ({ name: componentNormalizedName, props })),\n            type: 'variants',\n        })\n    }, [component, currentCombinedProps, currentProps]);\n\n    return (\n        <div className={cnPlayground(null, [className])}>\n            <TabsMenu\n                activeTab={activeTab}\n                tabs={[\n                    // Overview page should not have settings tab\n                    ...(component !== 'overview'\n                        ? [\n                              {\n                                  id: 'settings',\n                                  onClick: () => activeTabChange('settings'),\n                                  content: 'Settings',\n                              },\n                          ]\n                        : []),\n                    {\n                        id: 'tokens',\n                        onClick: () => activeTabChange('tokens'),\n                        content:\n                            component === 'overview'\n                                ? 'Global Tokens'\n                                : 'Design Tokens',\n                    },\n                    // { id: 'code', onClick: () => setActiveTab('code'), content: 'Code' },\n                ]}\n                className={cnPlayground('Header')}\n            />\n            <Divider />\n            <div className={cnPlayground('Body')}>\n                {component !== 'overview' && activeTab === 'settings' && (\n                    <Settings combine={combine} />\n                )}\n                {activeTab === 'tokens' && (\n                    <TokensStore\n                        component={\n                            component === 'overview' ? 'globals' : component\n                        }\n                    />\n                )}\n                {activeTab === 'code' && <Code />}\n            </div>\n            {component !== 'overview' && activeTab === 'settings' && (\n                <>\n                    <Divider />\n                    <div\n                        className={cnPlayground('Footer', { active: combine })}\n                    >\n                        <div\n                            className={cnPlayground('Footer-Header')}\n                            onClick={(e) => !combine && handleCombineChange(e)}\n                        >\n                            <div\n                                className={cnPlayground('Footer-Header-Title')}\n                            >\n                                Combine mode{' '}\n                            </div>\n                            <div\n                                className={cnPlayground('Footer-Header-Button')}\n                            >\n                                <Icon\n                                    name={combine ? 'minus' : 'plus'}\n                                    color={combine ? 'black' : 'black3'}\n                                    onClick={handleCombineChange}\n                                />\n                            </div>\n                        </div>\n                        {combine && (\n                            <>\n                                <p>\n                                    Option Menu are multiselect now. Choose\n                                    needed props and generate variants to Figma\n                                    canvas\n                                </p>\n                                <div className={cnPlayground('Footer-Buttons')}>\n                                    <Button\n                                        view=\"secondary\"\n                                        disabled={!combine}\n                                    >\n                                        Reset Selection\n                                    </Button>\n                                    <Button\n                                        view=\"primary\"\n                                        disabled={!combine}\n                                        onClick={combineVariantsHandler}\n                                    >\n                                        Generate Variants\n                                    </Button>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n","import { combine } from 'effector'\nimport { $allTokensObject, $changes } from '../Tokens/model/tokens'\nimport { rendererSyncThemeMessage } from '../utils/figma';\n\nexport const $cssVariables = combine(\n  { changes: $changes, tokens: $allTokensObject },\n  ({ changes, tokens }) => {\n    return Object.keys(changes).reduce(\n      (acc, name) => ({\n        ...acc,\n        [`--${name}`]: tokens[name].value,\n      }),\n      {},\n    ) as Record<string, string>\n  },\n)\n\n$cssVariables.watch(state => {\n    rendererSyncThemeMessage(state);\n});\n\nexport const $cssText = $cssVariables.map((variables) => {\n  const cssText = Object.keys(variables).reduce(\n    (acc: string, v: string) => `${acc}  ${v}: ${variables[v]};\\n`,\n    '',\n  )\n  return `:root {\\n${cssText}}`\n})\n","import { createEvent, createStore } from 'effector'\n\nexport const darkToggle = createEvent()\n\nexport const $dark = createStore(false)\n\n$dark.on(darkToggle, (state, _) => !state)\n","import { createEffect, createEvent, createStore, forward } from 'effector'\nimport { createGate } from 'effector-react'\nimport { getQueryParameter } from '../utils/queryParameters'\n\nexport type ViewType = 'figma' | 'web'\n\nexport const viewChange = createEvent<ViewType>()\n\nexport const $view = createStore<ViewType>('figma')\nexport const $isFigma = $view.map((state) => state === 'figma')\n\nexport const initializeView = createEffect(async () => {\n  const isFigma = getQueryParameter('figma')\n  viewChange(isFigma === 'true' ? 'figma' : 'web')\n})\n\nexport const viewInitializationGate = createGate()\n\n$view.on(viewChange, (_, payload) => payload)\n\nforward({\n  from: viewInitializationGate.open,\n  to: initializeView,\n})\n","import React, { createElement, useRef } from 'react'\nimport { cn } from '@bem-react/classname'\n\n\nimport './ComponentWrapper.css';\nimport { useDragToFigma } from '../../../../hooks/dragToFigma';\nimport { AllComponentsNames, getComponentByName } from '../../../../utils/getComponentByName';\n\nconst cnComponentWrapper = cn('ComponentWrapper')\n\nexport const ComponentWrapper: React.FC<{\n  __name: AllComponentsNames\n  props: unknown\n}> = React.forwardRef((props, ref) => {\n  const { __name, ...componentProps } = props\n  const component = getComponentByName(__name);\n  const componentRef = useRef<HTMLElement>(null)\n  const dragRef = useRef(null)\n\n  useDragToFigma(dragRef, dragRef, { name: __name, props: componentProps })\n\n  return (\n    <div ref={dragRef} draggable className={cnComponentWrapper()}>\n      <div className={cnComponentWrapper('Element')}>\n        {\n          // @ts-expect-error\n          createElement(component, {\n            ...componentProps,\n            // ref\n          })\n        }\n      </div>\n    </div>\n  )\n})\n","import { useEffect } from 'react'\nimport { sendToFigma } from '../utils/figma'\n\ninterface ComponentParams {\n  name: string\n  props: unknown\n}\n\nconst fixYOffset = 44\n\nexport const useDragToFigma = (\n  elementRef: React.RefObject<HTMLElement>,\n  dragRef: React.RefObject<HTMLElement>,\n  params: ComponentParams,\n) => {\n  useEffect(() => {\n    let offsetX = 0\n    let offsetY = 0\n    let iframeX = 0\n    let iframeY = 0\n\n    if (!dragRef?.current || !elementRef?.current) return\n\n    const dragElem = dragRef.current\n\n    const dragStartHandler = (e: DragEvent) => {\n      // const { offsetX, offsetY } = e.nativeEvent;\n      //@ts-ignore\n      e.dataTransfer.effectAllowed = 'copyMove'\n      //@ts-ignore\n      e.dataTransfer.setData('text/plain', e.currentTarget?.innerHTML)\n      //@ts-ignore\n      e.dataTransfer.dropEffect = 'copy'\n      // Getting the offset position (The position of the cursor relative to the top-left corner of item being dragged)\n\n      offsetX = e.offsetX\n      offsetY = e.offsetY\n      iframeX = e.screenX - e.clientX\n      iframeY = e.screenY - e.clientY\n    }\n\n    const dragEndHandler = (e: DragEvent) => {\n      // Don't proceed if the item was dropped inside the plugin window.\n      // if (e.view?.length === 0) return;\n\n      // Getting the size of the app/browser window.\n      const windowSize = {\n        width: window.outerWidth,\n        height: window.outerHeight,\n      }\n\n      // Getting the position of the cursor relative to the top-left corner of the browser page (Where the hamburger icon is)\n      const dropPosition = {\n        clientX: iframeX + e.clientX - window.screenLeft,\n        clientY: iframeY + e.clientY - window.screenTop - fixYOffset,\n      }\n\n      // These are the offsets set from the dragstart event.\n      const offset = {\n        x: offsetX,\n        y: offsetY,\n      }\n      sendToFigma({\n        position: { offset, dropPosition, windowSize },\n        blocks: [{ name: params.name, props: params.props || {} }]\n      })\n    }\n\n    dragElem?.addEventListener('dragstart', dragStartHandler)\n    dragElem?.addEventListener('dragend', dragEndHandler)\n\n    return () => {\n      dragElem?.removeEventListener('dragstart', dragStartHandler)\n      dragElem?.removeEventListener('dragend', dragEndHandler)\n    }\n  }, [dragRef, elementRef, params.props, params.name])\n}\n","import React, { createElement } from 'react'\nimport { ComponentWrapper } from '../pages/componentsPage/components/ComponentWrapper/ComponentWrapper'\nimport { AllComponentsNames, AllComponentsTypes } from './getComponentByName'\n\n// function getWrappedComponent<T extends AllComponentsNames>(name: T) => (props: AllComponentsTypes[T]) => React.FC<unknown>\n\nexport function getWrappedComponent<T extends AllComponentsNames>(\n  name: T,\n): React.FC<AllComponentsTypes[T]> {\n  return (props, ref) =>\n    createElement(\n      ComponentWrapper,\n      // @ts-ignore\n      { ...props, __name: name, ref },\n    )\n}\n","import React from 'react'\nimport { useStore } from 'effector-react'\n\nimport { $dark } from '../../../../../../../model/dark'\nimport './Headline.css'\n\nexport const Headline: React.FC = ({ children }) => {\n  const dark = useStore($dark)\n  return <div className={`Headline ${dark && 'Headline_dark'}`}>{children}</div>\n}\n","import React, { Fragment } from 'react'\nimport { useStore } from 'effector-react'\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nimport { $isFigma } from '../../../../../../../model/view'\nimport { Headline } from '../Headline'\n\nconst Button = getWrappedComponent('Button')\n\nexport const ButtonShowcase = () => {\n  const isFigma = useStore($isFigma)\n  const view = ['default', 'action', 'pseudo', 'link', 'clear', 'raised']\n  const size = ['s', 'm', 'l']\n\n  return (\n    <>\n      <Headline>Button</Headline>\n      {view.map((view: any) => (\n        <Fragment key={view}>\n          <p>View: {view}</p>\n          <div\n            className=\"Showcase-Item\"\n            style={{\n              display: 'flex',\n              width: 250,\n              marginBottom: 30,\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: isFigma ? 'column' : 'row',\n                alignItems: isFigma ? 'flex-start' : 'center',\n                flexBasis: '50%',\n                marginRight: isFigma ? 0 : 40,\n              }}\n            >\n              {size.map((size: any) => (\n                <div style={{ marginBottom: 16 }} key={`${view}-${size}`}>\n                  <Button view={view} size={size}>\n                    Button\n                  </Button>\n                </div>\n              ))}\n            </div>\n\n            <div\n              style={{\n                display: 'flex',\n                alignItems: isFigma ? 'flex-start' : 'center',\n                flexDirection: isFigma ? 'column' : 'row',\n              }}\n            >\n              <div style={{ marginBottom: 16 }}>\n                <Button view={view} size=\"s\" disabled>\n                  Button\n                </Button>\n              </div>\n              <div style={{ marginBottom: 16 }}>\n                <Button view={view} size=\"m\" checked>\n                  Button\n                </Button>\n              </div>\n              <div style={{ marginBottom: 16 }}>\n                <Button view={view} size=\"l\" progress>\n                  Button\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport { useStore } from 'effector-react'\n\nimport { $isFigma } from '../../../../../../../model/view'\nimport { Headline } from '../Headline'\nimport { Fragment } from 'react'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Checkbox = getWrappedComponent('Checkbox')\n\nexport const CheckboxShowcase = () => {\n  const isFigma = useStore($isFigma)\n  const view = ['outline', 'default']\n  const size = ['s', 'm']\n\n  return (\n    <>\n      <Headline>Checkbox</Headline>\n      {!isFigma &&\n        view.map((view: any) => (\n          <Fragment key={view}>\n            <p>View: {view}</p>\n            <div className=\"Showcase-Item\" style={{ display: 'flex', width: 250 }}>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: isFigma ? 'column' : 'row',\n                  alignItems: isFigma ? 'flex-start' : 'center',\n                  flexBasis: '50%',\n                  marginRight: isFigma ? 0 : 40,\n                }}\n              >\n                {size.map((size: any) => (\n                  <div\n                    style={{\n                      marginBottom: 16,\n                      marginRight: 20,\n                    }}\n                    key={`${view}-${size}`}\n                  >\n                    <Checkbox view={view} size={size} label=\"Label\" />\n                  </div>\n                ))}\n              </div>\n\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: isFigma ? 'flex-start' : 'center',\n                  flexDirection: isFigma ? 'column' : 'row',\n                }}\n              >\n                <div\n                  style={{\n                    marginBottom: 16,\n                    marginRight: 20,\n                  }}\n                >\n                  <Checkbox view={view} size=\"s\" label=\"Label\" disabled />\n                </div>\n                <div\n                  style={{\n                    marginBottom: 16,\n                    marginRight: 20,\n                  }}\n                >\n                  <Checkbox view={view} size=\"m\" label=\"Label\" indeterminate />\n                </div>\n                <div\n                  style={{\n                    marginBottom: 16,\n                    marginRight: 20,\n                  }}\n                >\n                  <Checkbox view={view} size=\"m\" label=\"Label\" checked />\n                </div>\n              </div>\n            </div>\n          </Fragment>\n        ))}\n      {isFigma && (\n        <div className=\"Showcase-Item\">\n          <p>View: Outline </p>\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" checked />\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" />\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" disabled />\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" indeterminate />\n          <br />\n          <br />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" checked />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" disabled />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" indeterminate />\n          <br />\n          <br />\n          <p>View: Default </p>\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" checked />\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" />\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" disabled />\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" indeterminate />\n          <br />\n          <br />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" checked />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" disabled />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" indeterminate />\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Button as ButtonBase } from '@yandex-lego/components/Button'\nimport { Textinput as TextinputBase, withHasClear } from '@yandex-lego/components/Textinput/desktop'\nimport { Header, HeaderSearch, HeaderNav, HeaderNavItem } from '@yandex-lego/components/Header/desktop'\nimport { withViewSearchArrow as withViewSearchArrowButton } from '@yandex-lego/components/Header/Button'\nimport { withViewSearchArrow as withViewSearchArrowTextinput } from '@yandex-lego/components/Header/Textinput'\n\nimport { Headline } from '../Headline'\n\nconst SearchButton = withViewSearchArrowButton(ButtonBase)\nconst SearchInput = withHasClear(withViewSearchArrowTextinput(TextinputBase))\n\nexport const HeaderShowcase = () => {\n  return (\n    <>\n      <Headline> Header </Headline>\n      <div className=\"Showcase-Item\">\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <SearchInput view=\"search-arrow\" name=\"text\" hasClear value=\"Yandex\" />\n            <SearchButton view=\"search-arrow\"> Найти </SearchButton>\n          </HeaderSearch>\n        </Header>\n        <br /> <br />\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <HeaderNav>\n              <HeaderNavItem href=\"/\"> Таб </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> По </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> Умолчанию </HeaderNavItem>\n              <HeaderNavItem href=\"/\" active>\n                Активный\n              </HeaderNavItem>\n            </HeaderNav>\n          </HeaderSearch>\n        </Header>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Link = getWrappedComponent('Link')\n\nexport const LinkShowcase = () => {\n  return (\n    <>\n      <Headline>Link</Headline>\n      <div className=\"Showcase-Item\">\n        <Link href=\"https://ya.ru\" view=\"default\">\n          Ссылка\n        </Link>\n        <br />\n        <Link view=\"default\" pseudo>\n          Ссылка\n        </Link>\n        <br />\n        <Link href=\"https://ya.ru\" view=\"default\" disabled>\n          Ссылка\n        </Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Menu = getWrappedComponent('Menu')\n\nexport const MenuShowcase = () => {\n  const items = [\n    { value: 'a', content: 'Каждый' },\n    { value: 'b', content: 'Охотник' },\n    {\n      items: [\n        { value: 'c', content: 'Желает', disabled: true },\n        { value: 'd', content: 'Знать' },\n        { value: 'e', content: 'Где' },\n      ],\n    },\n  ]\n\n  const [value, setValue] = useState('a')\n\n  return (\n    <>\n      <Headline>Menu</Headline>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Progress = getWrappedComponent('Progress')\n\nexport const ProgressShowcase = () => {\n  return (\n    <>\n      <Headline>Progres</Headline>\n      <div className=\"Showcase-Item\">\n        <Progress timing=\"linear\" value={50} maxValue={100} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Radiobox = getWrappedComponent('Radiobox')\n\nexport const RadioboxShowcase = () => {\n  const options = [\n    { label: 'Option A', value: 'a' },\n    { label: 'Option B', value: 'b' },\n    { label: 'Option C (disabled)', value: 'c', disabled: true },\n  ]\n\n  return (\n    <>\n      <Headline>Radiobox</Headline>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"outline\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"outline\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst RadioButton = getWrappedComponent('RadioButton')\n\nexport const RadioButtonShowcase = () => {\n  const options = [\n    { value: 'a', children: 'Option A' },\n    { value: 'b', children: 'Option B' },\n    { value: 'c', children: 'Option C' },\n  ]\n\n  return (\n    <>\n      <Headline>RadioButton</Headline>\n      <div className=\"Showcase-Item\">\n        <RadioButton size=\"l\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Spin = getWrappedComponent('Spin')\n\nexport const SpinShowcase = () => {\n  return (\n    <>\n      <Headline>Spin</Headline>\n      <div className=\"Showcase-Item\">\n        <Spin progress view=\"default\" size=\"l\" />\n        <Spin progress view=\"default\" size=\"m\" />\n        <Spin progress view=\"default\" size=\"s\" />\n        <Spin progress view=\"default\" size=\"xs\" />\n        <Spin progress view=\"default\" size=\"xxs\" />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Textarea = getWrappedComponent('Textarea')\n\nexport const TextareaShowcase = () => {\n  const [value1, setValue1] = useState('')\n\n  return (\n    <>\n      <Headline>Textarea</Headline>\n      <div className=\"Showcase-Item\">\n        <Textarea\n          hasClear\n          size=\"m\"\n          view=\"default\"\n          value={value1}\n          // @ts-expect-error\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          // @ts-expect-error\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          // @ts-expect-error\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Textinput = getWrappedComponent('Textinput')\n\nexport const TextinputShowcase = () => {\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [value3, setValue3] = useState('')\n  const [value4, setValue4] = useState('')\n  const [value5, setValue5] = useState('')\n  const [value6, setValue6] = useState('')\n\n  return (\n    <>\n      <Headline>Textinput</Headline>\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"m\"\n            view=\"default\"\n            value={value1}\n            // @ts-expect-error\n            onChange={(event) => setValue1(event.target.value)}\n            onClearClick={() => setValue1('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value2}\n            // @ts-expect-error\n\n            onChange={(event) => setValue2(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value3}\n            // @ts-expect-error\n\n            onChange={(event) => setValue3(event.target.value)}\n            onClearClick={() => setValue3('')}\n            state=\"error\"\n            hint=\"Error message\"\n          />\n        </div>\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          size=\"s\"\n          label=\"Label\"\n          view=\"material\"\n          value={value4}\n            // @ts-expect-error\n\n          onChange={(event) => setValue4(event.target.value)}\n          onClearClick={() => setValue4('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value5}\n            // @ts-expect-error\n\n          onChange={(event) => setValue5(event.target.value)}\n          onClearClick={() => setValue5('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value6}\n            // @ts-expect-error\n\n          onChange={(event) => setValue6(event.target.value)}\n          onClearClick={() => setValue6('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Text = getWrappedComponent('Text')\n\nexport const TextShowcase = () => {\n  return (\n    <>\n      <Headline>Text</Headline>\n      <div className=\"Showcase-Item\">\n        <Text as=\"div\" style={{ whiteSpace: 'normal' }}>\n          Миссия Яндекса — помогать людям решать задачи и достигать своих целей в жизни.\n        </Text>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Tumbler = getWrappedComponent('Tumbler')\n\nexport const TumblerShowcase = () => {\n  const [checked1, setChecked1] = useState(true)\n  const [checked2, setChecked2] = useState(false)\n\n  return (\n    <>\n      <Headline>Tumbler</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked={checked1}\n              onChange={() => setChecked1(!checked1)}\n              labelBefore=\"labelBefore\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked\n              disabled\n              onChange={() => {}}\n              labelAfter=\"disabled check\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"s\"\n              view=\"default\"\n              checked={checked2}\n              onChange={() => setChecked2(!checked2)}\n              labelAfter=\"labelAfter\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"l\"\n              view=\"default\"\n              checked={false}\n              disabled\n              onChange={() => {}}\n              labelBefore={\n                <svg\n                  aria-label=\"labelBefore\"\n                  width=\"16\"\n                  height=\"16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.5 7.003a1.5 1.5 0 0 0-1.5 1.5v6a1.5 1.5 0 0 0 1.5 1.5h9a1.5 1.5 0 0 0 1.5-1.5v-6a1.5 1.5 0 0 0-1.5-1.5H12v-2a4 4 0 0 0-8 0v2h-.5zm2.5-2a2 2 0 1 1 4 0V7H6V5.003z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              }\n              labelAfter=\"disabled\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React, { createElement, ComponentType } from 'react'\nimport { useStore } from 'effector-react'\n\nimport { $dark } from '../../../../../../model/dark'\nimport { $isFigma } from '../../../../../../model/view'\n\nimport { AttachShowcase } from './Showcases/AttachShowcase'\nimport { BadgeShowcase } from './Showcases/BadgeShowcase'\nimport { ButtonGroupShowcase } from './Showcases/ButtonGroupShowcase'\nimport { ButtonShowcase } from './Showcases/ButtonShowcase'\nimport { CheckboxShowcase } from './Showcases/CheckboxShowcase'\nimport { DividerShowcase } from './Showcases/DividerShowcase'\nimport { HeaderShowcase } from './Showcases/HeaderShowcase'\nimport { LinkShowcase } from './Showcases/LinkShowcase'\nimport { MenuShowcase } from './Showcases/MenuShowcase'\nimport { MessageBoxShowcase } from './Showcases/MessageBoxShowcase'\nimport { ProgressShowcase } from './Showcases/ProgressShowcase'\nimport { RadioboxShowcase } from './Showcases/RadioboxShowcase'\nimport { RadioButtonShowcase } from './Showcases/RadioButtonShowcase'\nimport { SliderShowcase } from './Showcases/SliderShowcase'\nimport { SpinShowcase } from './Showcases/SpinShowcase'\nimport { TabsMenuShowcase } from './Showcases/TabsMenuShowcase'\nimport { TextareaShowcase } from './Showcases/TextareaShowcase'\nimport { TextinputShowcase } from './Showcases/TextinputShowcase'\nimport { TextShowcase } from './Showcases/TextShowcase'\nimport { TooltipShowcase } from './Showcases/TooltipShowcase'\nimport { TumblerShowcase } from './Showcases/TumblerShowcase'\nimport { UserPicShowcase } from './Showcases/UserPicShowcase'\n\nimport './Overview.css'\n\nconst componentsMap: Record<string, ComponentType> = {\n//   attach: AttachShowcase,\n//   badge: BadgeShowcase,\n  button: ButtonShowcase,\n//   buttonGroup: ButtonGroupShowcase,\n  checkbox: CheckboxShowcase,\n  divider: DividerShowcase,\n  header: HeaderShowcase,\n  link: LinkShowcase,\n  menu: MenuShowcase,\n  messageBox: MessageBoxShowcase,\n  progress: ProgressShowcase,\n  radiobox: RadioboxShowcase,\n  radioButton: RadioButtonShowcase,\n  spin: SpinShowcase,\n  tabsMenu: TabsMenuShowcase,\n  text: TextShowcase,\n  textarea: TextareaShowcase,\n  textinput: TextinputShowcase,\n//   tooltip: TooltipShowcase,\n  tumbler: TumblerShowcase,\n  userPic: UserPicShowcase,\n  slider: SliderShowcase,\n}\n\nexport const Overview: React.FC<any> = (props) => {\n  const dark = useStore($dark)\n  const isFigma = useStore($isFigma)\n\n  return (\n    <div className={`Overview ${dark ? 'Overview_dark' : ''} ${isFigma ? 'Overview_figma' : ''}`}>\n      {Object.entries(componentsMap).map(([componentName, component]) =>\n        createElement(component, { key: componentName }),\n      )}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\n// const Divider = getWrappedComponent('Divider');\n\nexport const DividerShowcase = () => {\n  return (\n    <>\n      <Headline>Divider</Headline>\n      <div className=\"Showcase-Item\">\n        {/* <Divider style={{ margin: '8px 0' }}>\n          <p>Section</p>\n        </Divider> */}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from '@yandex-lego/components/Button/desktop/bundle'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\n// const MessageBox = getWrappedComponent('MessageBox');\n\nexport const MessageBoxShowcase = () => {\n  return (\n    <>\n      <Headline>MessageBox</Headline>\n      {/* <div className=\"Showcase-Item\">\n        <div style={{ marginBottom: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"default\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ marginBottom: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"inverse\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ marginBottom: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"promo\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"action\" size=\"s\">\n                  Подробнее\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n      </div> */}\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\n// const TabsMenu = getWrappedComponent('TabsMenu');\n\nexport const TabsMenuShowcase = () => {\n  return (\n    <>\n      <Headline>TabsMenu</Headline>\n      <div className=\"Showcase-Item\">\n        {/* <TabsMenu\n          size=\"m\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n\n        <br />\n        <TabsMenu\n          size=\"s\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        /> */}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\n// const UserPic = getWrappedComponent('UserPic');\n\nexport const UserPicShowcase = () => {\n  return (\n    <>\n      <Headline>UserPic</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          {/* <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"43978/351415393-30646433\" size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic avatarId=\"0/0-0\" hasCamera size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"0/0-0\" hasCamera size=\"s\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic\n              lodpiUrl=\"https://jing.yandex-team.ru/files/kri0-gen/halp_orange.jpg\"\n              size=\"s\"\n            />\n          </div> */}\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSliderState } from '@yandex-lego/components/Slider/desktop/bundle'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\n// const Slider = getWrappedComponent('Slider');\n\nexport const SliderShowcase = () => {\n  const state1 = useSliderState({ value: [20] })\n  const state2 = useSliderState({ value: [20, 50] })\n\n  const state3 = useSliderState({ value: [20] })\n  const state4 = useSliderState({ value: [20, 50] })\n\n  const state5 = useSliderState({ value: [20] })\n  const state6 = useSliderState({ value: [20, 50] })\n\n  const state7 = useSliderState({ value: [20] })\n  const state8 = useSliderState({ value: [20, 50] })\n\n  const state9 = useSliderState({ value: [20] })\n  const state10 = useSliderState({ value: [20, 50] })\n\n  return (\n    <>\n      <Headline>Slider</Headline>\n      {/* <Slider view=\"default\" {...state1} />\n      <Slider view=\"default\" {...state2} />\n      <Slider filled view=\"default\" {...state3} />\n      <Slider filled view=\"default\" {...state4} />\n      <Slider reverse filled view=\"default\" {...state5} />\n      <Slider reverse filled view=\"default\" {...state6} />\n      <Slider filled step={25} view=\"default\" {...state7} />\n      <Slider filled step={25} view=\"default\" {...state8} />\n      <Slider filled step={20} showTicks showTickValues view=\"default\" {...state9} />\n      <Slider filled showTicks showTickValues step={20} view=\"default\" {...state10} /> */}\n    </>\n  )\n}\n","import { Overview } from './Overview'\n\nexport const Showcases = {\n  overview: Overview,\n}\n","import React, { FC, HTMLProps, useRef } from 'react'\nimport { useButton, UseButtonProps } from 'web-platform-alpha'\nimport { cn } from '@bem-react/classname'\nimport { TooltipStateful } from '../../lib/lego/Tooltip'\n\nimport './IconButtonBase.css'\n\nexport type IconButtonBaseProps = HTMLProps<HTMLButtonElement> &\n  UseButtonProps & {\n    /**\n     * @default false\n     */\n    dark?: boolean\n\n    /**\n     * Tip for tooltip\n     */\n    tip?: string\n  }\n\nexport const cnIconButtonBase = cn('IconButtonBase')\n\nexport const IconButtonBase: FC<IconButtonBaseProps> = ({\n  className,\n  children,\n  dark,\n  tip,\n  ...props\n}) => {\n  const ref = useRef(null)\n  const { buttonProps } = useButton(props, ref)\n\n  return (\n    <TooltipStateful content={tip} dark={dark}>\n      <button {...buttonProps} ref={ref} className={cnIconButtonBase({ dark }, [className])}>\n        {children}\n      </button>\n    </TooltipStateful>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { IconButtonBase, cnIconButtonBase, IconButtonBaseProps } from '../IconButtonBase'\nimport { CloseEyeIcon, OpenEyeIcon } from '../../../icons'\n\nexport const EyeIconButton: FC<IconButtonBaseProps & { close?: boolean }> = ({\n  close,\n  dark,\n  ...props\n}) => {\n  const type = dark ? 'black' : 'white'\n  const tip = close ? 'Show changes' : 'Hide changes'\n\n  return (\n    <IconButtonBase dark={dark} tip={tip} {...props}>\n      {close ? (\n        <CloseEyeIcon type={type} className={cnIconButtonBase('Icon')} />\n      ) : (\n        <OpenEyeIcon type={type} className={cnIconButtonBase('Icon')} />\n      )}\n    </IconButtonBase>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { IconButtonBase, cnIconButtonBase, IconButtonBaseProps } from '../IconButtonBase'\nimport { SunIcon } from '../../../icons'\n\nexport const SunIconButton: FC<IconButtonBaseProps> = ({ dark, ...props }) => {\n  const type = dark ? 'black' : 'white'\n  const tip = dark ? 'Lighten background' : 'Darkent background'\n\n  return (\n    <IconButtonBase dark={dark} tip={tip} {...props}>\n      <SunIcon type={type} className={cnIconButtonBase('Icon')} />\n    </IconButtonBase>\n  )\n}\n","import React, { useState, FC, createElement } from 'react';\nimport { useStore } from 'effector-react';\n\nimport { cnTheme } from '@yandex-lego/components/Theme';\n\nimport { $cssVariables } from '../../../../model/css';\n\nimport { Showcases } from './Showcases';\nimport { $theme } from '../../../../model/themes';\nimport { $dark, darkToggle } from '../../../../model/dark';\nimport { $component, $componentProps } from '../../model';\n\nimport {\n    EyeIconButton,\n    SunIconButton,\n} from '../../../../components/IconButton';\nimport { ComponentWrapper } from '../ComponentWrapper/ComponentWrapper';\nimport { AllComponentsNames } from '../../../../utils/getComponentByName';\nimport { cn } from '@bem-react/classname';\nimport './Showcase.css';\nimport { $isCombine } from '../../../../model/combine';\nimport { getVariantsFromProps } from '../../../../utils/combinations';\n\nexport type ShowcaseProps = {\n    className: string;\n};\n\nconst cnShowcase = cn('Showcase');\n\nexport const Showcase: FC<ShowcaseProps> = ({ className }) => {\n    const [showDiff, setShowDiff] = useState(true);\n\n    const { preset } = useStore($theme);\n    const cssVariables = useStore($cssVariables);\n    const component = useStore($component);\n    const { currentProps, currentCombinedProps } = useStore($componentProps);\n    const combine = useStore($isCombine);\n\n    const dark = useStore($dark);\n\n    const handleSunIconClick = darkToggle;\n    const handleEyeIconClick = () => setShowDiff((prev) => !prev);\n    const componentNormalizedName =\n        component[0].toUpperCase() + component.slice(1);\n\n    const combinedVariants = combine\n        ? getVariantsFromProps(currentProps, currentCombinedProps)\n        : null;\n\n    return (\n        <>\n            <div\n                className={cnTheme({ ...preset, dark }, [className])}\n                style={showDiff ? cssVariables : {}}\n            >\n                {/* @ts-ignore */}\n                {component === 'overview' ? (\n                    createElement(Showcases[component])\n                ) : (\n                    <div className={cnShowcase('Preview')}>\n                        {combine ? (\n                            combinedVariants?.map((group) => {\n                                return (\n                                    <div className={cnShowcase('PreviewRow')}>\n                                        {group.map((variantProps) => {\n                                            return (\n                                                // @ts-ignore\n                                                <ComponentWrapper\n                                                    __name={\n                                                        componentNormalizedName as AllComponentsNames\n                                                    }\n                                                    {...variantProps}\n                                                />\n                                            );\n                                        })}\n                                    </div>\n                                );\n                            })\n                        ) : (\n                            // @ts-ignore\n                            <ComponentWrapper\n                                __name={\n                                    componentNormalizedName as AllComponentsNames\n                                }\n                                {...currentProps}\n                            />\n                        )}\n                    </div>\n                )}\n            </div>\n            <SunIconButton\n                dark={dark}\n                onPress={handleSunIconClick}\n                className=\"SunIcon\"\n            />\n            <EyeIconButton\n                dark={dark}\n                onPress={handleEyeIconClick}\n                close={!showDiff}\n                className=\"EyeIcon\"\n            />\n        </>\n    );\n};\n","import React from 'react';\nimport { useStore } from 'effector-react';\nimport { cn } from '@bem-react/classname';\n\nimport { $componentTokens } from '../../Tokens/model/tokens';\n\nimport './ComponentsPage.css';\nimport { Panels } from './components/Panels';\nimport { Playground } from './components/Playground';\nimport { TokenEditor } from '../../Tokens/components/TokenEditor';\nimport { Showcase } from './components/Showcase';\nimport { $component, componentChange } from './model';\n\nconst cnComponentsPage = cn('ComponentsPage');\n\nexport const ComponentsPage = () => {\n    const { components } = useStore($componentTokens);\n    const component = useStore($component);\n\n    const panels = ['overview', ...Object.keys(components || [])];\n    const handlePanelSelection = (panel: string) => {\n        componentChange(panel);\n    };\n\n    return (\n        <div className={cnComponentsPage()}>\n            <Panels\n                className={cnComponentsPage('Panels')}\n                panels={panels}\n                activePanel={component}\n                onPanelSelect={handlePanelSelection}\n            />\n            <Showcase className={cnComponentsPage('Showcase')} />\n            <Playground className={cnComponentsPage('Playground')} />\n            {/* <button onClick={() => tokenChange('token-name')}>Token Editor</button> */}\n\n        </div>\n    );\n};\n","import { MappingsType } from '../types'\nimport { compile, parseYaml } from '@yandex/themekit-core'\n\nimport { getType } from '../utils/tokenType'\n\nexport const downloadTheme = async (content: string, mappings: MappingsType) => {\n  const res = compile({\n    tokens: [parseYaml(content)],\n    output: {\n      json: {\n        transforms: ['name/param-case', 'value/color-function'],\n        files: [\n          {\n            destination: 'root.json',\n            format: 'json/flat',\n          },\n        ],\n      },\n    },\n  })\n\n  const properties = JSON.parse(res.json[0].content)\n\n  const tokens = Object.entries(properties).map(([_, item]: any) => ({\n    path: item.path,\n    name: item.name,\n    value: item.value,\n    rawValue: item.original.value,\n    changed: true,\n    type: getType(item.value),\n  }))\n\n  return tokens\n}\n","export function toDeepToken(path: string[], prop: any): any {\n  const chunks = [...path].reverse()\n  let result: any = prop\n  for (let chunk of chunks) {\n    result = { [chunk]: result }\n  }\n  return result\n}\n","import { combine } from 'effector';\nimport deepmerge from 'deepmerge';\nimport YAML from 'yaml';\n\nimport { ParamsType } from '../types';\nimport { PARAM_DOT_RE } from '../utils/constants';\nimport { extractParams } from '../utils/extractParams';\nimport { toDeepToken } from '../utils/toDeepToken';\nimport { $changes, $allTokensObject } from '../Tokens/model/tokens';\n\nexport const $yamlText = combine(\n    {\n        changes: $changes,\n        tokens: $allTokensObject,\n    },\n    ({ changes, tokens }) => {\n        if (Object.keys(changes).length === 0) {\n            return '';\n        }\n\n        // Make object for yaml from changes\n        const yml = Object.keys(changes).reduce(\n            (acc, tokenName) => [\n                ...acc,\n                toDeepToken(tokens[tokenName].path, {\n                    value: tokens[tokenName].original.value,\n                }),\n            ],\n            [] as any\n        );\n\n        // Get all params from changes values\n        const params = Object.keys(changes).reduce<string[]>(\n            (acc, tokenName) => [\n                ...acc,\n                ...(tokens[tokenName].refs.map(({ name }) => name) || []),\n            ],\n            []\n        );\n\n        // If param is in the theme and it was not redefined then add theme's value to the yaml\n        params\n            .filter((token) => !(token in changes))\n            .forEach((token) => {\n                if (tokens[token]) {\n                    const {\n                        path,\n                        original: { value },\n                    } = tokens[token];\n                    yml.push(toDeepToken(path, { value }));\n                }\n            });\n\n        const deepmergedYml = deepmerge.all(yml);\n        return YAML.stringify(deepmergedYml);\n    }\n);\n","import { tokenBatchUpdate } from './tokens'\nimport { attach, createEffect, createEvent, forward } from 'effector'\nimport { toast } from 'react-toastify'\n\nimport { $theme } from '../../model/themes'\nimport { downloadTheme } from '../../api/downloadTheme'\nimport { $yamlText } from '../../model/yaml'\nimport { ThemeType } from '../../types'\n\ntype UploadRawTokensFxPropsType = {\n  theme: ThemeType\n  tokens: string\n}\n\nexport const rawTokensUpload = createEvent()\n\n// TODO: Вынести вынести логику с загрузкой в yaml.ts\nexport const $tokensText = $yamlText.map((value) => value)\n\nexport const uploadRawTokensFx = attach({\n  source: {\n    theme: $theme,\n    tokens: $tokensText,\n  },\n  mapParams: (_, { theme, tokens }) =>\n    ({\n      theme,\n      tokens,\n    } as UploadRawTokensFxPropsType),\n  effect: createEffect(({ tokens, theme: { mappings } }: UploadRawTokensFxPropsType) => {\n    return downloadTheme(tokens, mappings)\n  }),\n})\n\nexport const $uploadRawTokensLoading = uploadRawTokensFx.pending\n\nexport const tokensUpdate = createEvent<string>()\n\n$tokensText.on(tokensUpdate, (_, payload) => payload)\n\nuploadRawTokensFx.doneData.watch((tokens) => {\n  tokenBatchUpdate(tokens.map(({ rawValue, ...rest }) => ({ ...rest, value: rawValue })))\n  toast.success('Tokens successfully uploaded')\n})\n\nuploadRawTokensFx.failData.watch((error) => toast.error(error.message, { autoClose: 5000 }))\n\nforward({\n  from: rawTokensUpload,\n  to: uploadRawTokensFx,\n})\n","import { VariablesType } from '../types'\n\nexport const uploadTokens = async (theme: string, tokens: VariablesType[]) => {\n  const response = await fetch('https://functions.yandexcloud.net/d4emk05t1v8gvek4q8l0', {\n    method: 'POST',\n    body: JSON.stringify({\n      theme,\n      tokens,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return json.tokensHash\n}\n","import { attach, createEffect, createEvent, forward } from 'effector'\nimport copy from 'copy-to-clipboard'\nimport { toast } from 'react-toastify'\n\nimport { $themeName } from './themes'\nimport { $hasChanges, $changes, $allTokensObject } from '../Tokens/model/tokens'\nimport { tokensQueryParameterUpdate } from './query'\nimport { uploadTokens } from '../api/uploadTokens'\n\nimport { ThemeNamesType, VariablesType } from '../types'\n\ntype ShareTokensFxPropsType = {\n  themeName: ThemeNamesType\n  tokens: VariablesType[]\n}\n\nexport const tokensShare = createEvent()\n\nexport const shareTokens = attach({\n  source: {\n    themeName: $themeName,\n    changes: $changes,\n    allTokens: $allTokensObject,\n  },\n  mapParams: (_: any, { themeName, allTokens, changes }) => {\n    const tokens = Object.keys(changes).map((name) => {\n      const { value, path } = allTokens[name]\n\n      return { name, value, path }\n    })\n\n    return {\n      themeName,\n      tokens,\n    }\n  },\n  effect: createEffect(({ themeName, tokens }: ShareTokensFxPropsType) => {\n    if (tokens.length === 0) {\n      return\n    }\n\n    return uploadTokens(themeName, tokens)\n  }),\n})\n\nexport const $shareTokensLoading = shareTokens.pending\nexport const $shareTokensDisabled = $hasChanges.map((hasTokens) => !hasTokens)\n\nshareTokens.doneData.watch((tokensHash) => {\n  if (!tokensHash) {\n    return\n  }\n\n  tokensQueryParameterUpdate(tokensHash)\n  copy(window.location.href)\n  toast.success('Link successfully copied to clipboard')\n})\n\nshareTokens.failData.watch((error) => toast.error(error, { autoClose: 5000 }))\n\nforward({\n  from: tokensShare,\n  to: shareTokens,\n})\n","import { useStore } from 'effector-react';\nimport React, { ChangeEvent, FC, useCallback, useState } from 'react';\nimport { Button, Switch, Textarea } from 'react-figma-components';\nimport { $cssText } from '../../../model/css';\nimport { $isFigma } from '../../../model/view';\n\nimport {\n    rawTokensUpload,\n    tokensUpdate,\n    $tokensText,\n} from '../../../Tokens/model/tokensText';\nimport { tokensShare, $shareTokensDisabled } from '../../../model/share-tokens';\nimport { $tokens } from '../../../Tokens/model/tokensToShow';\n\nimport './Tokens.css';\nimport { applyAllTokensToFigma } from '../../../utils/figma';\nimport { TokensStore } from '../../../Tokens/components/Tokens/TokensStore';\nimport { $changes } from '../../../Tokens/model/tokens';\n\nexport type TokensProps = {};\n\nexport const Tokens: FC<TokensProps> = () => {\n    const [format, setFormat] = useState<'yaml' | 'css'>('yaml');\n    const tokensText = useStore($tokensText);\n    const cssText = useStore($cssText);\n    const isFigma = useStore($isFigma);\n    const changes = useStore($changes);\n    const shareDisabled = useStore($shareTokensDisabled);\n\n    const [showTokensCode, setShowTokensCode] = useState(false);\n\n    const switchToCodeHandler = useCallback(() => {\n        setShowTokensCode((v) => !v);\n    }, []);\n\n    const handleSwitchChange = () =>\n        setFormat((format) => {\n            switch (format) {\n                case 'yaml':\n                    return 'css';\n                case 'css':\n                    return 'yaml';\n                default:\n                    return 'css';\n            }\n        });\n\n    const handleTextareaChange = (event: ChangeEvent<HTMLInputElement>) => {\n        tokensUpdate(event.target.value);\n    };\n\n    const handleUploadClick = () => {\n        rawTokensUpload();\n    };\n\n    const handlePushToCanvasClick = useCallback(() => {\n        // console.log(changes);\n        const tokensRecord = Object.keys(changes).reduce<Record<string, string>>((res, key) => {\n            res[key] = changes[key].value;\n\n            return res;\n        }, {});\n        applyAllTokensToFigma({ tokens: tokensRecord });\n    }, [changes]);\n\n    return (\n        <div className=\"TokensChanges\">\n            <div className=\"TokensChanges-Header\">\n                <div className=\"TokensChanges-HeaderItem\">\n                    <Switch\n                        checked={showTokensCode}\n                        onChange={switchToCodeHandler}\n                        className=\"TokensChanges-Switch\"\n                    />\n                    Code\n                </div>\n                {showTokensCode ? (\n                    <div className=\"TokensChanges-HeaderItem\">\n                        YAML\n                        <Switch\n                            checked={format !== 'yaml'}\n                            onChange={handleSwitchChange}\n                            className=\"TokensChanges-Switch\"\n                        />\n                        CSS\n                    </div>\n                ) : null}\n            </div>\n            {!showTokensCode ? (\n                <TokensStore />\n            ) : (\n                <Textarea\n                    value={format === 'yaml' ? tokensText : cssText}\n                    onChange={handleTextareaChange}\n                    className=\"TokensChanges-Textinput\"\n                    placeholder=\"TokensChanges\"\n                />\n            )}\n            <div className=\"TokensChanges-Buttons\">\n                <Button\n                    view=\"tertiary\"\n                    onClick={tokensShare}\n                    disabled={shareDisabled}\n                    onPress={tokensShare}\n                    data-testid=\"share=button\"\n                >\n                    Share Theme\n                </Button>\n                <Button view=\"secondary\" onPress={handleUploadClick}>\n                    Save\n                </Button>\n                {isFigma && (\n                    <Button view=\"primary\" onPress={handlePushToCanvasClick}>\n                        Apply to Figma\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React, { FC, useEffect } from 'react'\n\nimport { Tokens } from './Tokens'\nimport { tokensChangedSinceLastViewReset } from '../../Tokens/model/tokens'\n\nimport './ChangesPage.css'\n\nexport type ChangesPageProps = {}\n\nexport const ChangesPage: FC<ChangesPageProps> = () => {\n  useEffect(tokensChangedSinceLastViewReset, [])\n\n  return (\n    <div className=\"ChangesPage\">\n      <Tokens />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useGate } from 'effector-react'\nimport { configureRootTheme } from '@yandex-lego/components/Theme'\nimport { TabsPanes } from '@yandex-lego/components/TabsPanes/desktop/bundle'\nimport { theme } from '@yandex-lego/components/Theme/presets/default'\n\nimport { ToastContainer, cssTransition } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'animate.css'\nimport '@fontsource/inter'\n\nimport { Header, ActiveTabType } from './components/Header'\n\nimport { ComponentsPage } from './pages/componentsPage'\nimport { ChangesPage } from './pages/changesPage'\n\nimport { tokensInitializationGate } from './Tokens/model/tokens'\nimport { viewInitializationGate } from './model/view'\n\nimport './App.css'\nimport './Toastify.css'\nimport { FigmaMessageEvent, FigmaMessageType } from './FigmaMessageType'\nimport { setCurrentNodes } from './model/figma'\n\nconfigureRootTheme({ theme })\n\nconst Fade = cssTransition({\n  enter: 'animate__animated animate__fadeIn',\n  exit: 'animate__animated animate__fadeOut',\n})\n\n\nexport default () => {\n  const [activeTab, setActiveTab] = useState<ActiveTabType>('components')\n\n  useGate(tokensInitializationGate)\n  useGate(viewInitializationGate)\n\n  // useEffect(() => {\n  //   window.onbeforeunload = (e: BeforeUnloadEvent) => {\n  //     e.preventDefault(\n  //     return ''\n  //   }\n  // }, [])\n\n  useEffect(() => {\n    const pluginMessageListener = function(e: FigmaMessageEvent) {\n        const data = e.data;\n        switch (data.type) {\n            case FigmaMessageType.SELECT_NODE:\n                setCurrentNodes(data.data.nodes);\n                return;\n        }\n    };\n    window.addEventListener('message', pluginMessageListener);\n\n    return () => {\n        window.removeEventListener('message', pluginMessageListener)\n    }\n  }, [])\n\n  return (\n    <div className=\"Site\">\n      <Header activeTab={activeTab} setActiveTab={setActiveTab} />\n      <TabsPanes\n        activePane={activeTab}\n        panes={[\n          { id: 'components', content: <ComponentsPage /> },\n          { id: 'changes', content: <ChangesPage /> },\n        ]}\n      />\n      <iframe id=\"renderer-frame\" title=\"componentRenderer\" src=\"/?componentRenderer=true\" />\n      <ToastContainer\n        transition={Fade}\n        autoClose={2000}\n        position=\"bottom-center\"\n        // closeOnClick={false}\n        closeButton={false}\n        limit={1}\n        hideProgressBar={true}\n      />\n    </div>\n  )\n}\n","import { htmlToFigma } from 'html-figma/browser';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { PlainLayerNode } from 'html-figma/types';\nimport { PluginMessageEvent, FigmaMessageType } from './FigmaMessageType';\nimport { pluginMessage } from './utils/figma';\nimport {\n    getComponentByName,\n    AllComponentsNames,\n} from './utils/getComponentByName';\n\nconst body = document.body;\n\nexport const ComponentRendererInit = (el: HTMLElement) => {\n    const handler = (e: PluginMessageEvent) => {\n        const message = e.data;\n\n        if (message.type === FigmaMessageType.RENDER_TOKENS_SYNC) {\n            const tokens = message.data;\n            for (const key of Object.keys(tokens)) {\n                body.style.setProperty(key, tokens[key]);\n            }\n        }\n\n        if (message.type === FigmaMessageType.RENDER) {\n            const components = message.data.blocks;\n\n            const html = ReactDOMServer.renderToStaticMarkup(\n                // @ts-ignore\n                components.map((block) => {\n                    const component = getComponentByName(\n                        block.name as AllComponentsNames\n                    );\n                    // @ts-expect-error\n                    const { children, ...props } = block.props || {};\n\n                    return React.createElement(\n                        'div',\n                        { style: { position: 'absolute', left: 0, top: 0 } },\n                        // @ts-expect-error\n                        React.createElement(component, props, children)\n                    );\n                })\n            );\n\n            el.style.setProperty('min-height', '200px');\n            el.style.setProperty('min-width', '200px');\n            el.innerHTML = html;\n            const layers = htmlToFigma(el as HTMLElement) as PlainLayerNode;\n\n            el.innerHTML = '';\n            \n            const result = layers.children as PlainLayerNode[];\n\n            pluginMessage(\n                {\n                    type: FigmaMessageType.IMPORT,\n                    data: {\n                        nodes: result.map(({ children }, index) => {\n                            const layer = children[0];\n                            const { name, props, figmaId } = components[index];\n                            const position = message.data.position;\n\n                            return {\n                                id: figmaId,\n                                layer,\n                                componentData: { name, props },\n                                position\n                            }\n                        }),\n                        type: message.data.type\n                    },\n                },\n                true\n            );\n        }\n    };\n\n    window.addEventListener('message', handler);\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { ComponentRendererInit } from './ComponentsRenderer';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst isComponentRenderer = urlParams.get('componentRenderer');\n\nif (!isComponentRenderer) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>,\n        document.getElementById('root'),\n    )\n} else {\n    ComponentRendererInit(document.getElementById('root') as HTMLElement);\n}\n","import { compose, composeU } from '@bem-react/core'\n\n// base\nimport { TabsMenu as TabsMenuCommon } from '@yandex-lego/components/TabsMenu'\n// _layout\nimport { withLayoutHoriz } from '@yandex-lego/components/TabsMenu/_layout/TabsMenu_layout_horiz'\n// _size\nimport { withSizeM } from '@yandex-lego/components/TabsMenu/_size/TabsMenu_size_m'\nimport { withSizeS } from '@yandex-lego/components/TabsMenu/_size/TabsMenu_size_s'\n// _view\nimport { withViewFigma } from './_view/TabsMenu_view_figma'\n// _adaptive\nimport { withAdaptive } from '@yandex-lego/components/TabsMenu/_adaptive/TabsMenu_adaptive@desktop'\n\nexport * from '@yandex-lego/components/TabsMenu/desktop/bundle'\n\nexport const TabsMenu = compose(\n  withLayoutHoriz,\n  withViewFigma,\n  withAdaptive,\n  composeU(withSizeM, withSizeS),\n)(TabsMenuCommon)\n\nTabsMenu.defaultProps = {\n  view: 'figma',\n  layout: 'horiz',\n  size: 'm',\n}\n","import { compose } from '@bem-react/core'\n\n// base\nimport {\n  Tooltip as TooltipDesktop,\n  TooltipStateful as TooltipStatefulDesktop,\n} from '@yandex-lego/components/Tooltip/Tooltip@desktop'\n\n// _size\nimport { withSizeS } from '@yandex-lego/components/Tooltip/_size/Tooltip_size_s'\n// _view\nimport { withViewFigma } from './_view/Tooltip_view_figma'\n\nimport { withDark } from './_dark/Tooltip_dark'\n\nexport * from '@yandex-lego/components/Tooltip/Tooltip@desktop'\n\nconst enhance = compose(withViewFigma, withDark, withSizeS)\n\nexport const Tooltip = enhance(TooltipDesktop)\nexport const TooltipStateful = enhance(TooltipStatefulDesktop)\n\nTooltip.defaultProps = {\n  hasTail: true,\n  view: 'figma',\n  size: 's',\n  direction: 'left',\n}\n\nTooltipStateful.defaultProps = {\n  hasTail: true,\n  view: 'figma',\n  size: 's',\n  direction: 'left',\n}\n","import { withBemMod } from '@bem-react/core'\n\nimport './TabsMenu_view_figma.css'\n\nexport type TabsMenuViewFigmaProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  view?: 'figma'\n}\n\n/**\n * Модификатор, отвечающий за внешний вид тултипа.\n * @param {TabsMenuViewFigmaProps} props\n */\nexport const withViewFigma = withBemMod<TabsMenuViewFigmaProps>('TabsMenu', {\n  view: 'figma',\n})\n","import { withBemMod } from '@bem-react/core'\n\nimport './Tooltip_view_figma.css'\n\nexport type TooltipViewFigmaProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  view?: 'figma'\n}\n\n/**\n * Модификатор, отвечающий за внешний вид тултипа.\n * @param {TooltipViewFigmaProps} props\n */\nexport const withViewFigma = withBemMod<TooltipViewFigmaProps>('Tooltip', {\n  view: 'figma',\n})\n","import { withBemMod } from '@bem-react/core'\n\nimport './Tooltip_dark.css'\n\nexport type TooltipDarkProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  dark?: boolean\n}\n\n/**\n * Модификатор, отвечающий за внешний вид тултипа.\n * @param {TooltipDarkProps} props\n */\nexport const withDark = withBemMod<TooltipDarkProps>('Tooltip', { dark: true })\n","export * from './Tooltip'\n"],"sourceRoot":""}