{"version":3,"sources":["api/downloadTokens.ts","utils/queryParameters.ts","model/themes.ts","model/query.ts","model/tokens.ts","components/Header/Clear/Clear.tsx","api/uploadTokens.ts","components/Header/Share/model.ts","components/Header/Share/Share.tsx","components/Header/Header.tsx","utils/isColor.ts","components/IconBack/IconBack.tsx","components/YaMetrika/YaMetrika.ts","components/TextinputField/ColorPicker/ColorPicker.tsx","components/TextinputField/Description/Description.tsx","model/mappings.ts","utils/constants.ts","utils/transformers.ts","utils/resolveTokens.ts","model/cssVariables.ts","components/TextinputField/TextinputField.tsx","components/Headline/Headline.tsx","components/Showcase/Showcases/BadgeShowcase.tsx","components/Showcase/Showcases/HeaderShowcase.tsx","components/Showcase/Showcase.tsx","components/Showcase/Showcases/AttachShowcase.tsx","components/Showcase/Showcases/ButtonShowcase.tsx","components/Showcase/Showcases/ButtonGroupShowcase.tsx","components/Showcase/Showcases/CheckboxShowcase.tsx","components/Showcase/Showcases/DividerShowcase.tsx","components/Showcase/Showcases/LinkShowcase.tsx","components/Showcase/Showcases/MenuShowcase.tsx","components/Showcase/Showcases/MessageBoxShowcase.tsx","components/Showcase/Showcases/ProgressShowcase.tsx","components/Showcase/Showcases/RadioboxShowcase.tsx","components/Showcase/Showcases/RadioButtonShowcase.tsx","components/Showcase/Showcases/SpinShowcase.tsx","components/Showcase/Showcases/TabsMenuShowcase.tsx","components/Showcase/Showcases/TextShowcase.tsx","components/Showcase/Showcases/TextareaShowcase.tsx","components/Showcase/Showcases/TextinputShowcase.tsx","components/Showcase/Showcases/TooltipShowcase.tsx","components/Showcase/Showcases/TumblerShowcase.tsx","components/Showcase/Showcases/UserPicShowcase.tsx","components/Showcase/Showcases/SliderShowcase.tsx","utils/toDeepToken.ts","components/Sandbox/SandboxExample/model.ts","components/Sandbox/SandboxExample/SandboxExample.tsx","api/downloadTheme.ts","components/Sandbox/CustomThemeDownloader/model.ts","components/Sandbox/CustomThemeDownloader/CustomThemeDownloader.tsx","components/Sandbox/Sandbox.tsx","App.tsx","index.tsx"],"names":["downloadTokens","tokensHash","a","fetch","method","body","JSON","stringify","response","json","ok","Error","errorMessage","parse","getLocation","window","location","href","replace","search","themeToAllTokens","theme","globals","Object","values","components","reduce","acc","val","themeChange","createEvent","$themes","createStore","default","tokens","stylesDataDefault","mappings","mappingsDataDefault","preset","themeDefault","allTokens","inverse","stylesDataInverse","mappingsDataInverse","themeInverse","brand","stylesDataBrand","mappingsDataBrand","themeBrand","$themesNames","map","themes","keys","$theme","getState","$themeName","on","_","themeName","tokensQueryParameterUpdate","name","value","queryParams","URLSearchParams","set","history","pushState","toString","setQueryParameter","delete","query","deleteQueryParameter","variablesChange","variablesChangeBatch","variablesReset","$designTokens","$listDesignTokens","token","variablesInitializationGate","createGate","initializeVariables","createEffect","get","toast","success","error","state","ret","forEach","v","reset","watch","forward","from","open","to","Clear","props","view","size","onClick","uploadTokens","tokensShare","shareTokens","attach","source","mapParams","effect","length","$shareTokensLoading","pending","$shareTokensDisabled","doneData","copy","failData","autoClose","Share","loading","useStore","disabled","progress","data-testid","Header","menuItems","content","className","ListTile","leftSpace","rightSpace","alignItems","leading","typography","color","options","onChange","event","target","isColor","Boolean","String","match","cnIconBack","cn","IconBack","width","height","viewBox","d","fill","metricaGoal","goal","ym","ColorPicker","onColorChange","useState","visible","setVisible","scopeRef","useRef","anchorRef","handleClick","useCallback","handleClose","handleColorChange","ref","style","background","direction","anchor","scope","onClose","onChangeComplete","Description","description","Badge","textColor","$tokenMappings","entries","path","mappedName","join","$invertedTokenMappings","COLOR_RE","PARAM_DASH_RE","PARAM_DOT_RE","BRACES_REMOVAL_RE","transformMappings","inverted","template","params","extractParams","el","$transformedTokens","combine","designTokens","resolved","seen","Set","resolveToken","has","add","mappedValue","resolveTokens","e","message","key","cssColorFn","convert","memoCssVariables","$cssVariables","TextinputField","label","defaultValue","customTokens","rawValue","transformedTokens","setVal","isColorValue","colorValue","isChanged","useEffect","handleClearClick","changed","rgb","r","g","b","hsl","h","s","l","hex","handleChange","debounceTimeout","iconRight","hint","Headline","children","IconTwo","xmlns","SearchButton","withViewSearchArrowButton","ButtonBase","SearchInput","withHasClear","withViewSearchArrowTextinput","TextinputBase","componentsMap","badge","display","justifyContent","outlineColor","marginLeft","button","checked","iconLeft","type","icon","whiteSpace","buttonGroup","gaps","undefined","gap","index","pin","checkbox","indeterminate","divider","Divider","margin","header","action","hasClear","active","link","pseudo","menu","items","setValue","messageBox","backgroundColor","padding","actions","Progress","timing","maxValue","radiobox","radioButton","spin","tabsMenu","layout","tabs","id","activeTab","text","as","textarea","value1","setValue1","onClearClick","textinput","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","value6","setValue6","tooltip","visible1","setVisible1","visible2","setVisible2","visible3","setVisible3","visible4","setVisible4","visible5","setVisible5","visible6","setVisible6","anchorRef1","anchorRef2","anchorRef3","anchorRef4","anchorRef5","anchorRef6","position","marginRight","innerRef","hasTail","tumbler","checked1","setChecked1","checked2","setChecked2","marginBottom","labelBefore","labelAfter","aria-label","userPic","plus","avatarId","hasCamera","lodpiUrl","slider","state1","useSliderState","state2","state3","state4","state5","state6","state7","state8","state9","state10","filled","reverse","step","showTicks","showTickValues","Showcase","includes","filter","componentName","createElement","toDeepToken","prop","chunks","result","chunk","$cssText","variables","cssText","$dotSepDesignTokens","$yamlText","yml","push","deepmergedYml","deepmerge","all","YAML","tabsNames","SandboxExample","setActiveTab","cssVariables","yamlText","shownDiff","setDiff","tab","handleTabChange","prev","cnTheme","themeboxConfig","output","css","transforms","buildPath","files","destination","format","downloadTheme","config","language","headers","res","data","item","rawTokensUpload","$tokensText","uploadRawTokensFx","$uploadRawTokensLoading","tokensUpdate","payload","CustomThemeDownloader","Spacer","Sandbox","invertedTokenMappings","activeTab1","setActiveTab1","setFilter","tokensTab","placeholder","groupName","groupTokens","activePane","panes","configureRootTheme","useGate","onbeforeunload","preventDefault","transition","Slide","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yXAEaA,EAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACvBD,EADuB,iEAKLE,MAAM,yDAA0D,CACrFC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBN,iBARwB,cAKtBO,EALsB,gBAYTA,EAASC,OAZA,UAYtBA,EAZsB,OAcvBD,EAASE,GAdc,uBAepB,IAAIC,MAAMF,EAAKG,cAfK,iCAkBrBN,KAAKO,MAAMJ,IAlBU,4CAAH,sDCFrBK,EAAc,kBAAMC,OAAOC,SAASC,KAAKC,QAAQH,OAAOC,SAASG,OAAQ,K,wECgBzEC,EAAmB,SAACC,GAAD,mBAAC,eACrBA,EAAMC,SACNC,OAAOC,OAAOH,EAAMI,YAAYC,QAAO,SAACC,EAAKC,GAAN,mBAAC,eAAmBD,GAAQC,QAG3DC,EAAcC,cAEdC,EAAUC,YAAuC,CAC5DC,QAAS,CACPC,OAAQC,EACRC,SAAUC,EACVC,OAAQC,IACRC,UAAWpB,EAAiBe,IAE9BM,QAAS,CACPP,OAAQQ,EACRN,SAAUO,EACVL,OAAQM,IACRJ,UAAWpB,EAAiBsB,IAE9BG,MAAO,CACLX,OAAQY,EACRV,SAAUW,EACVT,OAAQU,IACRR,UAAWpB,EAAiB0B,MAInBG,EAAelB,EAAQmB,KAAI,SAACC,GAAD,OAAY5B,OAAO6B,KAAKD,MAEnDE,EAASrB,YAAuBD,EAAQuB,WAAWrB,SAEnDsB,EAAavB,YAA4B,WAEtDqB,EAAOG,GAAG3B,GAAa,SAAC4B,EAAGC,GAAJ,OAAkB3B,EAAQuB,WAAWI,MAE5DH,EAAWC,GAAG3B,GAAa,SAAC4B,EAAGC,GAAJ,OAAkBA,KClDtC,IAEMC,EAA6B,SAACzB,GACpCA,EFC0B,SAAC0B,EAAcC,GAC9C,IAAMC,EAAc,IAAIC,gBAAgBhD,OAAOC,SAASG,QACxD2C,EAAYE,IAAIJ,EAAMC,GAEtB9C,OAAOkD,QAAQC,UAAU,GAAI,GAA7B,UAAoCpD,IAApC,YAAqDgD,EAAYK,aEAjEC,CARoC,SAQMlC,GFGR,SAAC0B,GACnC,IAAME,EAAc,IAAIC,gBAAgBhD,OAAOC,SAASG,QACxD2C,EAAYO,OAAOT,GAEnB,IAAMU,EAAQR,EAAYK,WAAZ,WAA6BL,EAAYK,YAAe,GAEtEpD,OAAOkD,QAAQC,UAAU,GAAI,GAAIpD,IAAgBwD,GEb/CC,CAJkC,WCSzBC,GAD0B1C,cACRA,eAClB2C,EAAuB3C,cACvB4C,EAAiB5C,cAIjB6C,GAFe7C,cAECE,YAA8B,KAE9C4C,EAAoBD,EAAczB,KAA0B,SAAChB,GAAD,OACvEX,OAAOC,OAAOU,GAAQgB,KAAI,SAAC2B,GAAD,sBAAiBA,SAGhCC,EAA8BC,cAE9BC,EAAsBC,YAAY,sBAAC,kCAAA/E,EAAA,yDHvBd0D,EGwBK,SAA/B3D,EHvBC,IAAI8D,gBAAgBhD,OAAOC,SAASG,QAAQ+D,IAAItB,GGsBT,0EAQrB5D,EAAeC,GARM,UAQtCO,EARsC,6BAWpC,IAAIG,MAAM,eAX0B,OAcpCuB,EAAkB1B,EAAlB0B,OAAQb,EAAUb,EAAVa,MAEhBQ,EAAYR,GACZoD,EAAqBvC,GACrByB,EAA2B1D,GAC3BkF,IAAMC,QAAQ,8HAnB8B,kDAqB5CD,IAAME,MAAM,wOArBgC,kCHvBf,IAACzB,IGuBc,sBA0BhDe,EACGnB,GAAGgB,GAAiB,SAACc,EAAOT,GAAR,mBAAC,eAAuBS,GAAxB,kBAAgCT,EAAMjB,KAAOiB,OACjErB,GAAGiB,GAAsB,SAACa,EAAOpD,GAChC,IAAMqD,EAA2B,GAEjC,OADArD,EAAOsD,SAAQ,SAACC,GAAD,OAAQF,EAAIE,EAAE7B,MAAQ6B,KAC9B,2BAAKH,GAAUC,MAEvBG,MAAMhB,GAETA,EAAeiB,OAAM,kBAAMhC,OAE3BiC,YAAQ,CACNC,KAAMf,EAA4BgB,KAClCC,GAAIf,IC3DC,IAAMgB,EAAyB,SAACC,GACrC,OACE,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,KAAK,QAAQC,KAAK,IAAIC,QAAS1B,IAAlD,qD,kBCLS2B,EAAY,uCAAG,WAAOhF,EAAea,GAAtB,iBAAAhC,EAAA,sEACHC,MAAM,yDAA0D,CACrFC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBc,QACAa,aALsB,cACpB1B,EADoB,gBASPA,EAASC,OATF,UASpBA,EAToB,OAWrBD,EAASE,GAXY,sBAYlB,IAAIC,MAAMF,EAAKG,cAZG,gCAenBH,EAAKR,YAfc,2CAAH,wDCcZqG,EAAcxE,cAEdyE,EAAcC,YAAO,CAChCC,OAAQ,CACN/C,UAAWH,EACXrB,OAAQ0C,GAEV8B,UAAW,SAACjD,EAAD,SAAoC,CAC7CC,UADS,EAAWA,UAEpBxB,OAFS,EAAsBA,SAIjCyE,OAAQ1B,aAAa,YAAoD,IAAjDvB,EAAgD,EAAhDA,UAAWxB,EAAqC,EAArCA,OACjC,GAAsB,IAAlBA,EAAO0E,OAIX,OAAOP,EAAa3C,EAAWxB,QAItB2E,EAAsBN,EAAYO,QAClCC,EAAuBnC,EAAkB1B,KAAI,SAAChB,GAAD,OAA8B,IAAlBA,EAAO0E,UAE7EL,EAAYS,SAASrB,OAAM,SAAC1F,GACrBA,IAIL0D,EAA2B1D,GAC3BgH,IAAKlG,OAAOC,SAASC,MACrBkE,IAAMC,QAAQ,qOAGhBmB,EAAYW,SAASvB,OAAM,SAACN,GAAD,OAAWF,IAAME,MAAMA,EAAO,CAAE8B,UAAW,SAEtEvB,YAAQ,CACNC,KAAMS,EACNP,GAAIQ,IC/CC,IAAMa,EAAyB,SAACnB,GACrC,IAAMoB,EAAUC,YAAST,GACnBU,EAAWD,YAASP,GAE1B,OACE,kBAAC,IAAD,iBACMd,EADN,CAEEC,KAAK,SACLC,KAAK,IACLC,QAASE,EACTkB,SAAUH,EACVE,SAAUA,EACVE,cAAY,iBAPd,iE,OCIG,SAASC,KACd,IAAMvE,EAASmE,YAASvF,GAClB2B,EAAY4D,YAAS/D,GAGrBoE,EAFcL,YAASrE,GAECC,KAAI,SAACW,GAAD,MAAY,CAC5CA,QACA+D,QAASzE,EAAOU,GAAOD,MAAQC,MAMjC,OACE,yBAAKgE,UAAU,UACb,kBAACC,EAAA,EAAD,CACEC,UAAU,IACVC,WAAW,IACXC,WAAW,SACXC,QACE,kBAAC,IAAD,CAAMC,WAAW,YAAYC,MAAM,aAAnC,uGAKF,kBAAC,IAAD,CACEjC,KAAK,IACLD,KAAK,UACLmC,QAASV,EACT9D,MAAOH,EACP4E,SApBa,SAACC,GAAD,OACnB1G,EAAY0G,EAAMC,OAAO3E,QAoBnBgE,UAAU,yBAEZ,kBAAC,EAAD,CAAOA,UAAU,iBACjB,kBAAC,EAAD,CAAOA,UAAU,mB,yECjDlB,SAASY,GAAQ5E,GACtB,OAAO6E,QAAQC,OAAO9E,GAAO+E,MAAM,qB,YCIxBC,I,OAAaC,cAAG,aAEhBC,GAAoF,SAAC,GAAD,IAC/F3C,EAD+F,EAC/FA,QACAyB,EAF+F,EAE/FA,UAF+F,OAI/F,0BAAMzB,QAASA,EAASyB,UAAWgB,GAAW,KAAM,CAAChB,KACnD,yBAAKmB,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAClC,0BACEC,EAAE,yLACFC,KAAK,oB,oBCbAC,GAAc,SAACC,GAExBvI,OAAOwI,GAJe,WAIA,YAAaD,ICS1BE,I,OAAoC,SAAC,GAA8B,IAA5BpB,EAA2B,EAA3BA,MAAOqB,EAAoB,EAApBA,cAAoB,EAC/CC,oBAAS,GADsC,oBACtEC,EADsE,KAC7DC,EAD6D,KAGvEC,EAAWC,iBAAuB,MAClCC,EAAYD,iBAAuB,MAEnCE,EAAcC,uBAAY,WAC9BL,GAAW,GACXP,GAAY,YACX,IAEGa,EAAcD,uBAAY,WAC9BL,GAAW,KACV,IAEGO,EAAoBF,uBACxB,SAAC1B,GACCkB,EAAclB,GACdc,GAAY,mBAEd,CAACI,IAGH,OACE,yBAAKW,IAAKP,EAAUhC,UAAU,eAC5B,yBACEuC,IAAKL,EACL3D,QAAS4D,EACTnC,UAAU,sBACVwC,MAAO,CAAEC,WAAYlC,KAEvB,kBAAC,KAAD,CACEmC,UAAU,aACV/B,OAAO,SACPgC,OAAQT,EACR7D,KAAK,UACLyD,QAASA,EACTc,MAAOZ,EACPa,QAASR,GAET,kBAAC,gBAAD,CAAc9B,MAAOA,EAAOuC,iBAAkBR,Q,WC5CzCS,I,OAAoC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAClD,OACE,yBAAKhD,UAAU,uBACb,kBAACiD,GAAA,EAAD,CAAOjD,UAAU,sBAAsBD,QAAQ,IAAImD,UAAU,OAAO3C,MAAM,YAC1E,0BAAMP,UAAU,uBAAuBgD,MCDhCG,GAAiB3H,EAAOH,KAAkB,gBAAGV,EAAH,EAAGA,UAAH,OACrDjB,OAAO0J,QAAQzI,GAAWd,QAAO,SAACC,EAAD,GAA4B,IAAD,oBAApBiC,EAAoB,KAAZsH,EAAY,KAAZA,KACxCC,EAAa,uBAAID,GAAJ,CAAU,UAASE,KAAK,KAC3C,OAAO,2BAAKzJ,GAAZ,kBAAkBiC,EAAOuH,MACxB,OAYQE,GAAyBhI,EAAOH,KAAkB,gBAAGV,EAAH,EAAGA,UAAH,OAC7DjB,OAAO0J,QAAQzI,GAAWd,QAAO,SAACC,EAAD,GAA4B,IAAD,oBAApBiC,EAAoB,KAAZsH,EAAY,KAAZA,KACxCC,EAAa,uBAAID,GAAJ,CAAU,UAASE,KAAK,KAC3C,OAAO,2BAAKzJ,GAAZ,kBAAkBwJ,EAAavH,MAC9B,O,qBChCQ0H,GAAW,cACXC,GAAgB,oBAChBC,GAAe,oBACfC,GAAoB,QCe1B,SAASC,GACd7G,EACAzC,GAES,IADTuJ,EACQ,wDACFC,EAAYD,EAA2BH,GAAhBD,GACvBM,EAASC,GAAcjH,EAAO+G,GAEpC,OAAKC,EAIEA,EAAOnK,QAAO,SAACC,EAAD,GAAqB,IAAbkD,EAAY,EAAZA,MACrBhB,EAAQzB,EAASyC,IAAUA,EACjC,OAAOlD,EAAIT,QAAQ2D,EAAOhB,KACzBgB,GANMA,ECZJ,IAAMiH,GAAgB,SAC3BjI,GAE8B,IAD9B+H,EAC6B,uDADVL,GAEbM,EAAShI,EAAM+E,MAAMgD,GAE3B,GAAKC,EAIL,OAAOA,EAAOnK,QACZ,SAACC,EAAKoK,GAAN,6BAAiBpK,GAAjB,CAAsB,CAAEiK,SAAUG,EAAIlH,MAAOkH,EAAG7K,QAAQuK,GAAmB,SAC3E,KCjBG,IAeMO,GAfkBC,YAC7BtH,EACAtB,EACAgI,IACA,SAACa,EAAc7K,EAAOe,GACpB,IACE,OD8CC,SACLF,EACAE,EACAf,GAEA,IAAM8K,EAAmC,GACnCC,EAAoB,IAAIC,IAE9B,SAASC,EAAazH,EAAehB,GACnC,GAAIsI,EAAStH,GACX,OAAOsH,EAAStH,GAIlB,GAAIxD,EAAMmB,UAAUqC,MAAYA,KAAS3C,GAEvC,OADAiK,EAAStH,GAASxD,EAAMmB,UAAUqC,GAAOhB,MAAMM,WACxCgI,EAAStH,GAKlB,GAAIuH,EAAKG,IAAI1H,GACX,MAAM,IAAIlE,MAAJ,oCAAuCkE,EAAvC,MAGRuH,EAAKI,IAAI3H,GAET,IAAMgH,EAASC,GAAcjI,GAE7B,OAAKgI,EAKEA,EAAOnK,QAAO,SAACC,EAAD,GAA+B,IAC9CkC,EADuB+H,EAAsB,EAAtBA,SAAU/G,EAAY,EAAZA,MAErC,GAAIA,KAAS3C,EACX2B,EAAQ3B,EAAO2C,GAAOjB,SACjB,MAAIiB,KAASxD,EAAMmB,WAGxB,MAAM,IAAI7B,MAAJ,yBAA6BkE,EAA7B,MAFNhB,EAAQxC,EAAMmB,UAAUqC,GAAOhB,MAAMM,WAKvC,OAAOxC,EAAIT,QAAQ0K,EAAUU,EAAazH,EAAOhB,MAChDA,GAfMA,EAkBX,cAA+BtC,OAAO0J,QAAQ/I,GAA9C,eAAuD,CAAC,IAAD,uBAA7C2C,EAA6C,KAE/C4H,EAAcf,GAFiC,KAApC7H,MAE4BzB,GAAU,GACvD+J,EAAStH,GAASyH,EAAazH,EAAO4H,GAGxC,OAAON,ECpGIO,CAAcR,EAAc9J,EAAUf,GAC7C,MAAOsL,GACPxH,IAAME,MAAMsH,EAAEC,SAGhB,MAAO,MAIuC1J,KFjB3C,SAAyBhB,GAC9B,OAAOX,OAAO0J,QAAQ/I,GAAQR,QAC5B,SAACC,EAAD,2BAAOkL,EAAP,KAAYhJ,EAAZ,wBAAC,eACIlC,GADL,kBAEGkL,EAAMhJ,EAAM+E,MAAM0C,IAAYwB,KAAWC,QAAQlJ,GAASA,MAE7D,OEaAmJ,GAAmB,GACVC,GAAgBjB,GAAmB9I,KAA4B,SAAChB,GAC3E,OAAKX,OAAO6B,KAAKlB,GAAQ0E,OAIzBoG,GAAmBzL,OAAO0J,QAAQ/I,GAAQR,QACxC,SAACC,EAAD,2BAAOiC,EAAP,KAAaC,EAAb,wBAAC,eACIlC,GADL,8BAEQiC,GAASC,MAEjB,IAROmJ,MCbEE,I,OAOR,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,MAAOC,EAA8D,EAA9DA,aAAclC,EAAgD,EAAhDA,KAAML,EAA0C,EAA1CA,YAAawC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACtDC,EAAoBjG,YAAS0E,IADwC,EAErDtC,mBAAS2D,GAF4C,oBAEpEzL,EAFoE,KAE/D4L,EAF+D,KAGrE3I,EAAQ0I,EAAkBJ,GAE1BM,EAAehF,GAAQ5D,IAAU4D,GAAQ2E,GACzCM,EAAa7I,GAASuI,EACtBO,EAAYP,IAAiBxL,EAGnCgM,qBAAU,WACRJ,EAAOF,GAAYD,GAAgBD,KAClC,CAACA,EAAcC,EAAcC,IAEhC,IAAMO,EAAmB5D,uBAAY,WACnCuD,EAAOJ,GACP5I,EAAgB,CACd0G,OACAtH,KAAMuJ,EACNtJ,MAAOuJ,EACPU,SAAS,IAEXzE,GAAY,qBACX,CAAC+D,EAAcD,EAAOjC,IAEnBf,EAAoBF,uBACxB,SAAC7B,GACC,IAAIsF,EAAa,GAIfA,EADmB,QAAjBtF,EAAM3B,OACE,eAAW2B,EAAM2F,IAAIC,EAArB,aAA2B5F,EAAM2F,IAAIE,EAArC,aAA2C7F,EAAM2F,IAAIG,EAArD,aAA2D9F,EAAM2F,IAAI7N,EAArE,KACgB,QAAjBkI,EAAM3B,OACL,eAAW2B,EAAM+F,IAAIC,EAArB,aAA2BhG,EAAM+F,IAAIE,EAArC,aAA2CjG,EAAM+F,IAAIG,EAArD,aAA2DlG,EAAM+F,IAAIjO,EAArE,KAEGkI,EAAMmG,IAGrBf,EAAOE,GACPlJ,EAAgB,CACd0G,OACAtH,KAAMuJ,EACNtJ,MAAO6J,EACPI,QAASJ,IAAeN,MAG5B,CAAClC,EAAMkC,EAAcD,IAGjBqB,EAAevE,uBACnB,SAAC1B,GACCiF,EAAOjF,EAAMC,OAAO3E,OACpBW,EAAgB,CACd0G,OACAtH,KAAMuJ,EACNtJ,MAAO0E,EAAMC,OAAO3E,MACpBiK,QAASvF,EAAMC,OAAO3E,QAAUuJ,IAElC/D,GAAY,mBAEd,CAAC6B,EAAMkC,EAAcD,IAGvB,OACE,kBAACrF,EAAA,EAAD,CACEC,UAAU,IACVC,WAAW,IACXC,WAAW,SACXC,QACE,yBAAKL,UAAU,wBACb,kBAAC,IAAD,CAAMM,WAAW,YAAYC,MAAM,aAChC+E,EADH,IACW,KAEVtC,GAAe,kBAAC,GAAD,CAAaA,YAAaA,MAI9C,yBAAKhD,UAAU,0BACb,kBAAC,KAAD,CACE4G,gBAAiB,IACjBnG,SAAUkG,EACVE,UAAWf,EAAY,kBAAC,GAAD,CAAUvH,QAASyH,IAAuB,qCACjE3H,KAAK,UACLC,KAAK,IACLtC,MAAOjC,EACP+M,KAAMhB,EAAS,sIAA8BP,GAAiB,GAC9DvF,UAAU,yBAEX4F,GAAgB,kBAAC,GAAD,CAAarF,MAAOsF,EAAYjE,cAAeU,Q,qBC7G3DyE,GAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChC,kBAAC,IAAD,CAAM1G,WAAW,YAAYC,MAAM,WAChCyG,I,SCCCC,GAAU,kBACd,yBAAK1F,KAAK,UAAU2F,MAAM,6BAA6B/F,MAAM,KAAKC,OAAO,MACvE,0BAAME,EAAE,yY,sICCN6F,GAAeC,aAA0BC,MACzCC,GAAcC,aAAaC,aAA6BC,O,qJCiBxDC,I,QAA+C,CACnD/I,OCvB4B,WAC5B,OACE,oCACE,kBAAC,GAAD,eACA,yBAAKqB,UAAU,iBACb,kBAAC,KAAD,CAAQ1B,KAAK,IAAID,KAAK,WAAtB,eAGA,kBAAC,KAAD,CAAQC,KAAK,IAAID,KAAK,WAAtB,eAGA,kBAAC,KAAD,CAAQC,KAAK,IAAID,KAAK,WAAtB,kBDaNsJ,MFjB2B,WAC3B,OACE,oCACE,kBAAC,GAAD,cACA,yBACE3H,UAAU,gBACVwC,MAAO,CAAEoF,QAAS,OAAQC,eAAgB,gBAAiB1G,MAAO,MAElE,kBAAC8B,GAAA,EAAD,MAEA,kBAACA,GAAA,EAAD,CAAOlD,QAAQ,MAEf,kBAACkD,GAAA,EAAD,CAAOlD,QAAS,GACd,kBAAC,GAAD,OAGF,kBAAC,UAAD,CAAQ1B,KAAK,UAAUC,KAAK,KAA5B,mDAEE,kBAAC2E,GAAA,EAAD,CAAO1C,MAAM,UAAUuH,aAAa,UAAU/H,QAAS,EAAGyC,MAAO,CAAEuF,WAAY,SEAvFC,OEvB4B,WAG5B,OACE,oCACE,kBAAC,GAAD,eAJS,CAAC,UAAW,SAAU,SAAU,OAAQ,QAAS,UAKpD3M,KAAI,SAACgD,GACT,OACE,oCACE,mCAASA,GACT,yBAAK2B,UAAU,iBACb,kBAAC,UAAD,CAAQ3B,KAAMA,EAAMC,KAAK,KAAzB,UAGA,kBAAC,UAAD,CAAQD,KAAMA,EAAMC,KAAK,KAAzB,UAGA,kBAAC,UAAD,CAAQD,KAAMA,EAAMC,KAAK,KAAzB,UAGA,kBAAC,UAAD,CAAQD,KAAMA,EAAMC,KAAK,IAAIoB,UAAQ,GAArC,UAGA,kBAAC,UAAD,CAAQrB,KAAMA,EAAMC,KAAK,IAAI2J,SAAO,GAApC,UAGA,kBAAC,UAAD,CAAQ5J,KAAMA,EAAMC,KAAK,IAAIqB,UAAQ,GAArC,UAGA,kBAAC,UAAD,CACEtB,KAAMA,EACNC,KAAK,IACL4J,SAAU,SAAClI,GAAD,OACR,kBAAC,QAAD,CAAM1B,KAAK,IAAI6J,KAAK,QAAQzF,UAAU,OAAO1C,UAAWA,KAE1D6G,UAAW,SAAC7G,GAAD,OACT,kBAAC,QAAD,CAAM1B,KAAK,IAAI6J,KAAK,QAAQzF,UAAU,OAAO1C,UAAWA,MAP5D,UAYA,kBAAC,UAAD,CACE3B,KAAMA,EACNC,KAAK,IACL8J,KAAM,SAACpI,GAAD,OACJ,kBAAC,QAAD,CAAM1B,KAAK,IAAI6J,KAAK,QAAQzF,UAAU,OAAO1C,UAAWA,YAOpE,yBAAKA,UAAU,gBAAgBwC,MAAO,CAAE6F,WAAY,WAClD,kBAAC,UAAD,CAAQhK,KAAK,UAAUC,KAAK,KAA5B,UAGA,kBAAC,QAAD,uOACA,kBAAC,QAAD,2nBAIA,kBAAC,UAAD,CAAQD,KAAK,SAASC,KAAK,KAA3B,aFrCNgK,YGzBiC,WACjC,IAAMC,EAAO,MAACC,EAAW,IAAK,IAAK,IAAK,MAGxC,OACE,oCACE,kBAAC,GAAD,oBACA,yBAAKxI,UAAU,iBACZuI,EAAKlN,KAAI,SAACoN,EAAKC,GAAN,OACR,oCACa,IAAVA,GACC,oCACG,IACD,6BAFF,IAES,6BAAO,KAGlB,oCAAUD,GAAO,SAAjB,KACA,kBAAC,eAAD,CAAaA,IAAKA,GAChB,kBAAC,UAAD,CAAQpK,KAAK,UAAUC,KAAK,KAA5B,YAGA,kBAAC,UAAD,CAAQD,KAAK,UAAUC,KAAK,KAA5B,YAGA,kBAAC,UAAD,CAAQD,KAAK,UAAUC,KAAK,KAA5B,iBAtBC,CAAC,SAAU,SA6BZjD,KAAI,SAACsN,GAAD,OACR,oCACE,6BADF,IACS,6BACP,oCAAUA,EAAV,KACA,kBAAC,eAAD,CAAaA,IAAKA,GAChB,kBAAC,UAAD,CAAQtK,KAAK,UAAUC,KAAK,KAA5B,YAGA,kBAAC,UAAD,CAAQD,KAAK,UAAUC,KAAK,KAA5B,oBHbZsK,SI3B8B,WAC9B,OACE,oCACE,kBAAC,GAAD,iBACA,yBAAK5I,UAAU,iBACb,kBAAC,KAAD,CAAU1B,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ2C,SAAO,IACvD,kBAAC,KAAD,CAAU3J,KAAK,IAAID,KAAK,UAAUiH,MAAM,UACxC,kBAAC,KAAD,CAAUhH,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ5F,UAAQ,IACxD,kBAAC,KAAD,CAAUpB,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQuD,eAAa,IAC7D,6BACA,6BACA,kBAAC,KAAD,CAAUvK,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ2C,SAAO,IACvD,kBAAC,KAAD,CAAU3J,KAAK,IAAID,KAAK,UAAUiH,MAAM,UACxC,kBAAC,KAAD,CAAUhH,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ5F,UAAQ,IACxD,kBAAC,KAAD,CAAUpB,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQuD,eAAa,IAC7D,6BACA,6BACA,kBAAC,KAAD,CAAUvK,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ2C,SAAO,IACvD,kBAAC,KAAD,CAAU3J,KAAK,IAAID,KAAK,UAAUiH,MAAM,UACxC,kBAAC,KAAD,CAAUhH,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ5F,UAAQ,IACxD,kBAAC,KAAD,CAAUpB,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQuD,eAAa,IAC7D,6BACA,6BACA,kBAAC,KAAD,CAAUvK,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ2C,SAAO,IACvD,kBAAC,KAAD,CAAU3J,KAAK,IAAID,KAAK,UAAUiH,MAAM,UACxC,kBAAC,KAAD,CAAUhH,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQ5F,UAAQ,IACxD,kBAAC,KAAD,CAAUpB,KAAK,IAAID,KAAK,UAAUiH,MAAM,QAAQuD,eAAa,OJEnEC,QK5B6B,WAC7B,OACE,oCACE,kBAAC,GAAD,gBACA,yBAAK9I,UAAU,iBACb,sCACA,kBAAC+I,GAAA,EAAD,CAASvG,MAAO,CAAEwG,OAAQ,UACxB,uCAEF,yCLoBNC,ODtB4B,WAC5B,OACE,oCACE,kBAAC,GAAD,iBACA,yBAAKjJ,UAAU,iBACb,kBAAC,KAAD,CAAQA,UAAU,gBAChB,kBAAC,KAAD,CAAckJ,OAAO,sBACnB,kBAAC5B,GAAD,CAAajJ,KAAK,eAAetC,KAAK,OAAOoN,UAAQ,EAACnN,MAAM,WAC5D,kBAACmL,GAAD,CAAc9I,KAAK,gBAAnB,sCAGJ,6BAPF,IAOS,6BACP,kBAAC,KAAD,CAAQ2B,UAAU,gBAChB,kBAAC,KAAD,CAAckJ,OAAO,sBACnB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAe9P,KAAK,KAApB,wBACA,kBAAC,KAAD,CAAeA,KAAK,KAApB,kBACA,kBAAC,KAAD,CAAeA,KAAK,KAApB,4DACA,kBAAC,KAAD,CAAeA,KAAK,IAAIgQ,QAAM,GAC3B,IADH,mDAEW,WCGvBC,KM9B0B,WAC1B,OACE,oCACE,kBAAC,GAAD,aACA,yBAAKrJ,UAAU,iBACb,kBAAC,KAAD,CAAM5G,KAAK,gBAAgBiF,KAAK,WAAhC,wCAGA,6BACA,kBAAC,KAAD,CAAMA,KAAK,UAAUiL,QAAM,GAA3B,wCAGA,6BACA,kBAAC,KAAD,CAAMlQ,KAAK,gBAAgBiF,KAAK,UAAUqB,UAAQ,GAAlD,2CNkBN6J,KO/B0B,WAC1B,IAAMC,EAAQ,CACZ,CAAExN,MAAO,IAAK+D,QAAS,wCACvB,CAAE/D,MAAO,IAAK+D,QAAS,8CACvB,CACEyJ,MAAO,CACL,CAAExN,MAAO,IAAK+D,QAAS,uCAAUL,UAAU,GAC3C,CAAE1D,MAAO,IAAK+D,QAAS,kCACvB,CAAE/D,MAAO,IAAK+D,QAAS,yBARG,EAaN8B,mBAAS,KAbH,oBAazB7F,EAbyB,KAalByN,EAbkB,KAehC,OACE,oCACE,kBAAC,GAAD,aACA,yBAAKzJ,UAAU,iBACb,kBAAC,KAAD,CACE1B,KAAK,IACL9E,MAAM,SACNgQ,MAAOA,EACPxN,MAAOA,EACPyE,SAAU,SAACC,GAAD,OAAgB+I,EAAS/I,EAAMC,OAAO3E,UAElD,kBAAC,KAAD,CACEsC,KAAK,IACL9E,MAAM,SACNgQ,MAAOA,EACPxN,MAAOA,EACPyE,SAAU,SAACC,GAAD,OAAgB+I,EAAS/I,EAAMC,OAAO3E,WAGpD,yBAAKgE,UAAU,iBACb,kBAAC,KAAD,CACE1B,KAAK,IACLD,KAAK,UACLmL,MAAOA,EACPxN,MAAOA,EACPyE,SAAU,SAACC,GAAD,OAAgB+I,EAAS/I,EAAMC,OAAO3E,UAElD,kBAAC,KAAD,CACEsC,KAAK,IACLD,KAAK,UACLmL,MAAOA,EACPxN,MAAOA,EACPyE,SAAU,SAACC,GAAD,OAAgB+I,EAAS/I,EAAMC,OAAO3E,aPfxD0N,WQ/BgC,WAChC,OACE,oCACE,kBAAC,GAAD,mBACA,yBAAK1J,UAAU,iBACb,yBAAKwC,MAAO,CAAEmH,gBAAiB,OAAQC,QAAS,SAC9C,kBAAC,KAAD,CACE/G,QAAS,kBAAM,MACfxE,KAAK,UACLC,KAAK,IACLuL,QACE,oCACE,kBAAC,IAAD,CAAQxL,KAAK,QAAQC,KAAK,KAA1B,0DAGA,kBAAC,IAAD,CAAQD,KAAK,SAASC,KAAK,KAA3B,gDATN,sKAkBF,yBAAKkE,MAAO,CAAEmH,gBAAiB,OAAQC,QAAS,SAC9C,kBAAC,KAAD,CACE/G,QAAS,kBAAM,MACfxE,KAAK,UACLC,KAAK,IACLuL,QACE,oCACE,kBAAC,IAAD,CAAQxL,KAAK,QAAQC,KAAK,KAA1B,0DAGA,kBAAC,IAAD,CAAQD,KAAK,SAASC,KAAK,KAA3B,gDATN,sKAkBF,yBAAKkE,MAAO,CAAEmH,gBAAiB,OAAQC,QAAS,SAC9C,kBAAC,KAAD,CACE/G,QAAS,kBAAM,MACfxE,KAAK,QACLC,KAAK,IACLuL,QACE,oCACE,kBAAC,IAAD,CAAQxL,KAAK,SAASC,KAAK,KAA3B,4DANN,yKRZRqB,SSjC8B,WAC9B,OACE,oCACE,kBAAC,GAAD,gBACA,yBAAKK,UAAU,iBACb,kBAAC8J,GAAA,EAAD,CAAUC,OAAO,SAAS/N,MAAO,GAAIgO,SAAU,ST6BrDC,SUlC8B,WAC9B,IAAMzJ,EAAU,CACd,CAAE8E,MAAO,WAAYtJ,MAAO,KAC5B,CAAEsJ,MAAO,WAAYtJ,MAAO,KAC5B,CAAEsJ,MAAO,sBAAuBtJ,MAAO,IAAK0D,UAAU,IAGxD,OACE,oCACE,kBAAC,GAAD,iBACA,yBAAKM,UAAU,iBACb,kBAAC,KAAD,CAAU1B,KAAK,IAAID,KAAK,UAAUrC,MAAM,IAAIwE,QAASA,IACrD,6BACA,kBAAC,KAAD,CAAUlC,KAAK,IAAID,KAAK,UAAUrC,MAAM,IAAIwE,QAASA,KAEvD,yBAAKR,UAAU,iBACb,kBAAC,KAAD,CAAU1B,KAAK,IAAID,KAAK,UAAUrC,MAAM,IAAIwE,QAASA,IACrD,6BACA,kBAAC,KAAD,CAAUlC,KAAK,IAAID,KAAK,UAAUrC,MAAM,IAAIwE,QAASA,OViB3D0J,YWnCiC,WACjC,IAAM1J,EAAU,CACd,CAAExE,MAAO,IAAKgL,SAAU,YACxB,CAAEhL,MAAO,IAAKgL,SAAU,YACxB,CAAEhL,MAAO,IAAKgL,SAAU,aAG1B,OACE,oCACE,kBAAC,GAAD,oBACA,yBAAKhH,UAAU,iBACb,kBAAC,KAAD,CAAa1B,KAAK,IAAID,KAAK,UAAUrC,MAAM,IAAIwE,QAASA,IACxD,6BACA,6BACA,kBAAC,KAAD,CAAalC,KAAK,IAAID,KAAK,UAAUrC,MAAM,IAAIwE,QAASA,IACxD,6BACA,6BACA,kBAAC,KAAD,CAAalC,KAAK,IAAID,KAAK,UAAUrC,MAAM,IAAIwE,QAASA,OXmB9D2J,KYpC0B,WAC1B,OACE,oCACE,kBAAC,GAAD,aACA,yBAAKnK,UAAU,iBACb,kBAAC,KAAD,CAAML,UAAQ,EAACtB,KAAK,UAAUC,KAAK,MACnC,kBAAC,KAAD,CAAMqB,UAAQ,EAACtB,KAAK,UAAUC,KAAK,MACnC,kBAAC,KAAD,CAAMqB,UAAQ,EAACtB,KAAK,UAAUC,KAAK,MACnC,kBAAC,KAAD,CAAMqB,UAAQ,EAACtB,KAAK,UAAUC,KAAK,OACnC,kBAAC,KAAD,CAAMqB,UAAQ,EAACtB,KAAK,UAAUC,KAAK,WZ4BzC8L,SarC8B,WAC9B,OACE,oCACE,kBAAC,GAAD,iBACA,yBAAKpK,UAAU,iBACb,kBAAC,KAAD,CACE1B,KAAK,IACLD,KAAK,UACLgM,OAAO,QACPC,KAAM,CACJ,CAAEC,GAAI,SAAUxK,QAAS,kCACzB,CAAEwK,GAAI,SAAUxK,QAAS,oDACzB,CAAEwK,GAAI,QAASxK,QAAS,mCAE1ByK,UAAW,WAGb,6BACA,kBAAC,KAAD,CACElM,KAAK,IACLD,KAAK,UACLgM,OAAO,QACPC,KAAM,CACJ,CAAEC,GAAI,SAAUxK,QAAS,kCACzB,CAAEwK,GAAI,SAAUxK,QAAS,oDACzB,CAAEwK,GAAI,QAASxK,QAAS,mCAE1ByK,UAAW,cbWnBC,KctC0B,WAC1B,OACE,oCACE,kBAAC,GAAD,aACA,yBAAKzK,UAAU,iBACb,kBAAC,IAAD,CAAM0K,GAAG,OAAT,0ZdkCNC,SevC8B,WAAO,IAAD,EACR9I,mBAAS,IADD,oBAC7B+I,EAD6B,KACrBC,EADqB,KAGpC,OACE,oCACE,kBAAC,GAAD,iBACA,yBAAK7K,UAAU,iBACb,kBAAC,KAAD,CACEmJ,UAAQ,EACR7K,KAAK,IACLD,KAAK,UACLrC,MAAO4O,EACPnK,SAAU,SAACC,GAAD,OAAWmK,EAAUnK,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMD,EAAU,OAEhC,6BACA,6BACA,kBAAC,KAAD,CACE1B,UAAQ,EACR7K,KAAK,IACLD,KAAK,UACLrC,MAAO4O,EACPnK,SAAU,SAACC,GAAD,OAAWmK,EAAUnK,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMD,EAAU,OAEhC,6BACA,6BACA,kBAAC,KAAD,CACE1B,UAAQ,EACR7K,KAAK,IACLD,KAAK,UACLrC,MAAO4O,EACPnK,SAAU,SAACC,GAAD,OAAWmK,EAAUnK,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMD,EAAU,KAC9BpN,MAAM,QACNqJ,KAAK,qBfKbiE,UgBxC+B,WAAO,IAAD,EACTlJ,mBAAS,IADA,oBAC9B+I,EAD8B,KACtBC,EADsB,OAEThJ,mBAAS,IAFA,oBAE9BmJ,EAF8B,KAEtBC,EAFsB,OAGTpJ,mBAAS,IAHA,oBAG9BqJ,EAH8B,KAGtBC,EAHsB,OAITtJ,mBAAS,IAJA,oBAI9BuJ,EAJ8B,KAItBC,EAJsB,OAKTxJ,mBAAS,IALA,oBAK9ByJ,EAL8B,KAKtBC,EALsB,OAMT1J,mBAAS,IANA,oBAM9B2J,EAN8B,KAMtBC,EANsB,KAQrC,OACE,oCACE,kBAAC,GAAD,kBACA,yBAAKzL,UAAU,gBAAgBwC,MAAO,CAAE6F,WAAY,WAClD,yBAAK7F,MAAO,CAAEoH,QAAS,IACrB,kBAAC,KAAD,CACET,UAAQ,EACR7K,KAAK,IACLD,KAAK,UACLrC,MAAO4O,EACPnK,SAAU,SAACC,GAAD,OAAWmK,EAAUnK,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMD,EAAU,QAGlC,yBAAKrI,MAAO,CAAEoH,QAAS,IACrB,kBAAC,KAAD,CACET,UAAQ,EACR7K,KAAK,IACLD,KAAK,UACLrC,MAAOgP,EACPvK,SAAU,SAACC,GAAD,OAAWuK,EAAUvK,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMG,EAAU,QAGlC,yBAAKzI,MAAO,CAAEoH,QAAS,IACrB,kBAAC,KAAD,CACET,UAAQ,EACR7K,KAAK,IACLD,KAAK,UACLrC,MAAOkP,EACPzK,SAAU,SAACC,GAAD,OAAWyK,EAAUzK,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMK,EAAU,KAC9B1N,MAAM,QACNqJ,KAAK,oBAIX,yBAAKtE,MAAO,CAAEoH,QAAS,IACrB,kBAAC,KAAD,CACET,UAAQ,EACR7K,KAAK,IACLgH,MAAM,QACNjH,KAAK,WACLrC,MAAOoP,EACP3K,SAAU,SAACC,GAAD,OAAW2K,EAAU3K,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMO,EAAU,QAGlC,yBAAK7I,MAAO,CAAEoH,QAAS,IACrB,kBAAC,KAAD,CACET,UAAQ,EACR7D,MAAM,QACNhH,KAAK,IACLD,KAAK,WACLrC,MAAOsP,EACP7K,SAAU,SAACC,GAAD,OAAW6K,EAAU7K,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMS,EAAU,QAGlC,yBAAK/I,MAAO,CAAEoH,QAAS,IACrB,kBAAC,KAAD,CACET,UAAQ,EACR7D,MAAM,QACNhH,KAAK,IACLD,KAAK,WACLrC,MAAOwP,EACP/K,SAAU,SAACC,GAAD,OAAW+K,EAAU/K,EAAMC,OAAO3E,QAC5C8O,aAAc,kBAAMW,EAAU,KAC9BhO,MAAM,QACNqJ,KAAK,qBhBpCb4E,QiBxC6B,WAAO,IAAD,EACH7J,oBAAS,GADN,oBAC5B8J,EAD4B,KAClBC,EADkB,OAEH/J,oBAAS,GAFN,oBAE5BgK,EAF4B,KAElBC,EAFkB,OAGHjK,oBAAS,GAHN,oBAG5BkK,EAH4B,KAGlBC,EAHkB,OAIHnK,oBAAS,GAJN,oBAI5BoK,EAJ4B,KAIlBC,EAJkB,OAKHrK,oBAAS,GALN,oBAK5BsK,EAL4B,KAKlBC,EALkB,OAMHvK,oBAAS,GANN,oBAM5BwK,EAN4B,KAMlBC,EANkB,KAO7BC,EAAatK,iBAAuB,MACpCuK,EAAavK,iBAAuB,MACpCwK,EAAaxK,iBAAuB,MACpCyK,EAAazK,iBAAuB,MACpC0K,EAAa1K,iBAAuB,MACpC2K,EAAa3K,iBAAuB,MACpCD,EAAWC,iBAAuB,MAExC,OACE,oCACE,kBAAC,GAAD,gBACA,yBAAKjC,UAAU,iBACb,yBAAKwC,MAAO,CAAEqK,SAAU,WAAYjF,QAAS,OAAQxG,OAAQ,IAAMmB,IAAKP,GACtE,yBAAKQ,MAAO,CAAEuF,WAAY,GAAI+E,YAAa,KACzC,kBAAC,IAAD,CACEC,SAAUR,EACVjO,KAAK,IACLD,KAAK,UACLE,QAAS,kBAAMqN,GAAaD,KAJ9B,WASF,yBAAKnJ,MAAO,CAAEuF,WAAY,GAAI+E,YAAa,KACzC,kBAAC,IAAD,CACEC,SAAUP,EACVlO,KAAK,IACLD,KAAK,UACLE,QAAS,kBAAMuN,GAAaD,KAJ9B,WASF,yBAAKrJ,MAAO,CAAEuF,WAAY,GAAI+E,YAAa,KACzC,kBAAC,IAAD,CACEC,SAAUN,EACVnO,KAAK,IACLD,KAAK,UACLE,QAAS,kBAAMyN,GAAaD,KAJ9B,WASF,kBAAC,KAAD,CACEiB,SAAO,EACPtK,UAAU,SACVrE,KAAK,UACLC,KAAK,IACLqE,OAAQ4J,EACR3J,MAAOZ,EACPF,QAAS6J,GAPX,cAWA,kBAAC,KAAD,CACEqB,SAAO,EACPtK,UAAU,SACVrE,KAAK,UACLC,KAAK,IACLqE,OAAQ6J,EACR5J,MAAOZ,EACPF,QAAS+J,GAPX,eAWA,kBAAC,KAAD,CACEmB,SAAO,EACPtK,UAAU,SACVrE,KAAK,UACLC,KAAK,IACLqE,OAAQ8J,EACR7J,MAAOZ,EACPF,QAASiK,GAPX,gBAaJ,yBAAK/L,UAAU,iBACb,yBAAKwC,MAAO,CAAEqK,SAAU,WAAYjF,QAAS,OAAQxG,OAAQ,IAAMmB,IAAKP,GACtE,yBAAKQ,MAAO,CAAEuF,WAAY,GAAI+E,YAAa,KACzC,kBAAC,IAAD,CACEC,SAAUL,EACVpO,KAAK,IACLD,KAAK,UACLE,QAAS,kBAAM2N,GAAaD,KAJ9B,WASF,yBAAKzJ,MAAO,CAAEuF,WAAY,GAAI+E,YAAa,KACzC,kBAAC,IAAD,CACEC,SAAUJ,EACVrO,KAAK,IACLD,KAAK,UACLE,QAAS,kBAAM6N,GAAaD,KAJ9B,WASF,yBAAK3J,MAAO,CAAEuF,WAAY,GAAI+E,YAAa,KACzC,kBAAC,IAAD,CACEC,SAAUH,EACVtO,KAAK,IACLD,KAAK,UACLE,QAAS,kBAAM+N,GAAaD,KAJ9B,WASF,kBAAC,KAAD,CACEW,SAAO,EACPtK,UAAU,SACVrE,KAAK,UACLC,KAAK,IACLb,MAAM,UACNkF,OAAQ+J,EACR9J,MAAOZ,EACPF,QAASmK,GARX,cAYA,kBAAC,KAAD,CACEe,SAAO,EACPtK,UAAU,SACVrE,KAAK,UACLC,KAAK,IACLb,MAAM,UACNkF,OAAQgK,EACR/J,MAAOZ,EACPF,QAASqK,GARX,eAYA,kBAAC,KAAD,CACEa,SAAO,EACPtK,UAAU,SACVrE,KAAK,UACLC,KAAK,IACLb,MAAM,QACNkF,OAAQiK,EACRhK,MAAOZ,EACPF,QAASuK,GARX,kBjBpGRY,QkB1C6B,WAAO,IAAD,EACHpL,oBAAS,GADN,oBAC5BqL,EAD4B,KAClBC,EADkB,OAEHtL,oBAAS,GAFN,oBAE5BuL,EAF4B,KAElBC,EAFkB,KAInC,OACE,oCACE,kBAAC,GAAD,gBACA,yBAAKrN,UAAU,iBACb,oCACE,yBAAKwC,MAAO,CAAE8K,aAAc,IAC1B,kBAAC,KAAD,CACEhP,KAAK,IACLD,KAAK,UACL4J,QAASiF,EACTzM,SAAU,kBAAM0M,GAAaD,IAC7BK,YAAY,iBAGhB,yBAAK/K,MAAO,CAAE8K,aAAc,IAC1B,kBAAC,KAAD,CACEhP,KAAK,IACLD,KAAK,UACL4J,SAAO,EACPvI,UAAQ,EACRe,SAAU,aACV+M,WAAW,oBAGf,yBAAKhL,MAAO,CAAE8K,aAAc,IAC1B,kBAAC,KAAD,CACEhP,KAAK,IACLD,KAAK,UACL4J,QAASmF,EACT3M,SAAU,kBAAM4M,GAAaD,IAC7BI,WAAW,gBAGf,yBAAKhL,MAAO,CAAE8K,aAAc,IAC1B,kBAAC,KAAD,CACEhP,KAAK,IACLD,KAAK,UACL4J,SAAS,EACTvI,UAAQ,EACRe,SAAU,aACV8M,YACE,yBACEE,aAAW,cACXtM,MAAM,KACNC,OAAO,KACP8F,MAAM,8BAEN,0BACE5F,EAAE,sKACFC,KAAK,kBAIXiM,WAAW,kBlBdvBE,QmB3C6B,WAC7B,OACE,oCACE,kBAAC,GAAD,gBACA,yBAAK1N,UAAU,iBACb,oCACE,yBAAKwC,MAAO,CAAEsK,YAAa,OAAQlF,QAAS,iBAC1C,kBAAC,WAAD,CAAS+F,MAAI,EAACC,SAAS,2BAA2BtP,KAAK,OAEzD,yBAAKkE,MAAO,CAAEsK,YAAa,OAAQlF,QAAS,iBAC1C,kBAAC,WAAD,CAASgG,SAAS,QAAQC,WAAS,EAACvP,KAAK,OAE3C,yBAAKkE,MAAO,CAAEsK,YAAa,OAAQlF,QAAS,iBAC1C,kBAAC,WAAD,CAAS+F,MAAI,EAACC,SAAS,QAAQC,WAAS,EAACvP,KAAK,OAEhD,yBAAKkE,MAAO,CAAEsK,YAAa,OAAQlF,QAAS,iBAC1C,kBAAC,WAAD,CACEkG,SAAS,6DACTxP,KAAK,WnB0BjByP,OoB5C4B,WAC5B,IAAMC,EAASC,aAAe,CAAEjS,MAAO,CAAC,MAClCkS,EAASD,aAAe,CAAEjS,MAAO,CAAC,GAAI,MAEtCmS,EAASF,aAAe,CAAEjS,MAAO,CAAC,MAClCoS,EAASH,aAAe,CAAEjS,MAAO,CAAC,GAAI,MAEtCqS,EAASJ,aAAe,CAAEjS,MAAO,CAAC,MAClCsS,EAASL,aAAe,CAAEjS,MAAO,CAAC,GAAI,MAEtCuS,EAASN,aAAe,CAAEjS,MAAO,CAAC,MAClCwS,EAASP,aAAe,CAAEjS,MAAO,CAAC,GAAI,MAEtCyS,EAASR,aAAe,CAAEjS,MAAO,CAAC,MAClC0S,EAAUT,aAAe,CAAEjS,MAAO,CAAC,GAAI,MAE7C,OACE,oCACE,kBAAC,GAAD,eACA,kBAAC,KAAD,eAAQqC,KAAK,WAAc2P,IAC3B,kBAAC,KAAD,eAAQ3P,KAAK,WAAc6P,IAC3B,kBAAC,KAAD,eAAQS,QAAM,EAACtQ,KAAK,WAAc8P,IAClC,kBAAC,KAAD,eAAQQ,QAAM,EAACtQ,KAAK,WAAc+P,IAClC,kBAAC,KAAD,eAAQQ,SAAO,EAACD,QAAM,EAACtQ,KAAK,WAAcgQ,IAC1C,kBAAC,KAAD,eAAQO,SAAO,EAACD,QAAM,EAACtQ,KAAK,WAAciQ,IAC1C,kBAAC,KAAD,eAAQK,QAAM,EAACE,KAAM,GAAIxQ,KAAK,WAAckQ,IAC5C,kBAAC,KAAD,eAAQI,QAAM,EAACE,KAAM,GAAIxQ,KAAK,WAAcmQ,IAC5C,kBAAC,KAAD,eAAQG,QAAM,EAACE,KAAM,GAAIC,WAAS,EAACC,gBAAc,EAAC1Q,KAAK,WAAcoQ,IACrE,kBAAC,KAAD,eAAQE,QAAM,EAACG,WAAS,EAACC,gBAAc,EAACF,KAAM,GAAIxQ,KAAK,WAAcqQ,QpBmB9DM,GAA6C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3D,OACE,yBAAKjP,UAAU,YACZiP,EACEC,QAAO,SAACC,GAAD,OAAmBzH,GAAcyH,MACxC9T,KAAI,SAAC8T,GAAD,OAAmBC,wBAAc1H,GAAcyH,S,6DqBzDrD,SAASE,GAAYhM,EAAgBiM,GAC1C,IAD0D,EACpDC,EAAS,aAAIlM,GAAMuL,UACrBY,EAAcF,EAFwC,eAGxCC,GAHwC,IAG1D,2BAA0B,CAAC,IAAlBE,EAAiB,QACxBD,EAAM,eAAMC,EAAQD,IAJoC,8BAM1D,OAAOA,ECQF,IAAME,GAAWtK,GAAc/J,KAAI,SAACsU,GACzC,IAAMC,EAAUlW,OAAO6B,KAAKoU,GAAW9V,QACrC,SAACC,EAAa8D,GAAd,gBAA+B9D,EAA/B,aAAuC8D,EAAvC,aAA6C+R,EAAU/R,GAAvD,SACA,IAEF,MAAM,YAAN,OAAmBgS,EAAnB,QAGIC,GAA+CzL,YACnDtH,EACAqG,IACA,SAACkB,EAAc9J,GAAf,OACEb,OAAO0J,QAAQiB,GAAcxK,QAC3B,SAACC,EAAD,2BAAOiC,EAAP,YAAeC,EAAf,EAAeA,MAAUgB,EAAzB,6CAAC,eACIlD,GADL,kBAEGiC,EAFH,YAAC,eAGMiB,GAHP,IAIIhB,MAAO6H,GAAkB7H,EAAOzB,SAGpC,OAIOuV,GAAY1L,YACvB,CAAEC,aAAcwL,GAAqBtV,SAAUiJ,GAAwBhK,MAAOgC,IAC9E,YAAuD,IAApD6I,EAAmD,EAAnDA,aAAc9J,EAAqC,EAArCA,SAAmBI,EAAkB,EAA3BnB,MAASmB,UAE5BoV,EAAMrW,OAAOC,OAAO0K,GAAcxK,QAAO,SAACC,EAAD,GAA8C,IAAtCmM,EAAqC,EAArCA,QAAS5C,EAA4B,EAA5BA,KAAMrH,EAAsB,EAAtBA,MAAOyJ,EAAe,EAAfA,SAO3E,OANIA,EACF3L,EAAIkW,KAAKX,GAAYhM,EAAM,CAAErH,MAAOyJ,KAC3BQ,GACTnM,EAAIkW,KAAKX,GAAYhM,EAAM,CAAErH,WAGxBlC,IACN,IAGYJ,OAAOC,OAAO0K,GAAcxK,QACzC,SAACC,EAAD,OAAQkC,EAAR,EAAQA,MAAOyJ,EAAf,EAAeA,SAAf,6BACK3L,GADL,aAEMmK,GAAcwB,GAAYzJ,EAAO2H,KAAiB,OAExD,IAKCtI,KAAI,gBAAG2B,EAAH,EAAGA,MAAH,OAAezC,EAASyC,IAAUA,KACtCkS,QAAO,SAAClS,GAAD,QAAaA,KAASqH,MAC7B1G,SAAQ,SAACX,GACR,GAAIrC,EAAUqC,GAAQ,CAAC,IAAD,EACIrC,EAAUqC,GAA1BqG,EADY,EACZA,KAAMrH,EADM,EACNA,MACd+T,EAAIC,KAAKX,GAAYhM,EAAM,CAAErH,eAInC,IAAMiU,EAAgBC,KAAUC,IAAIJ,GACpC,OAAOK,KAAK1X,UAAUuX,MCxDpBI,GAAY,CAJN,MACC,OACD,OAICC,GAA0B,SAAC,GAAyB,IAAvBrB,EAAsB,EAAtBA,SAAUzV,EAAY,EAAZA,MAAY,EAC5BqI,mBAPxB,OAMoD,oBACvD2I,EADuD,KAC5C+F,EAD4C,KAGxDC,EAAuC/Q,YAAS2F,IAChDwK,EAAUnQ,YAASiQ,IACnBe,EAAWhR,YAASqQ,IALoC,EAMjCjO,oBAAS,GANwB,oBAMvD6O,EANuD,KAM5CC,EAN4C,KAkBxDrG,EAAO+F,GAAUhV,KAAI,SAACuV,GAAD,MAAU,CACnCrG,GAAIqG,EACJrS,QAAS,YAZa,SAACqS,GACvBL,EAAaK,GACbpP,GAAYoP,GAWVC,CAAgBD,IAElB7Q,QAAS6Q,MAGX,OACE,yBAAK5Q,UAAU,oBACb,6BACE,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,kBAAC,YAAD,CAAU1B,KAAK,IAAID,KAAK,UAAUgM,OAAO,QAAQG,UAAWA,EAAWF,KAAMA,IAC7E,yBAAKtK,UAAU,mBACb,kBAAC,WAAD,CACE1B,KAAK,IACLD,KAAK,UACL4J,QAASyI,EACTjQ,SAzBS,WACvBkQ,GAAQ,SAACG,GAAD,OAAWA,KACnBtP,GAAY,sBAwBEgM,WAAY,8GAIlB,yBACExN,UAAW+Q,YAAQvX,EAAO,CAAC,2BAC3BgJ,MAAOkO,EAAYF,EAAe,IAnDpC,QAqDGhG,GAAqB,kBAAC,GAAD,CAAUyE,SAAUA,IAnD5C,QAoDGzE,GACC,yBAAKxK,UAAU,8BACb,6BACE,8BAAO4P,KAxDd,SA4DEpF,GACC,yBAAKxK,UAAU,8BACb,6BACE,8BAAOyQ,W,WC3EdO,GAAiB,CAC5BC,OAAQ,CACNC,IAAK,CACHC,WAAY,CAAC,iBAAkB,wBAC/BC,UAAW,WACXC,MAAO,CACL,CACEC,YAAa,cACbC,OAAQ,kBAGZ1H,QAAS,CAAC,oBAKH2H,GAAa,uCAAG,WAAOzR,EAAcxF,GAArB,uBAAAlC,EAAA,6DACrBG,EAAOC,KAAKC,UAAU,CAC1B+Y,OAAQT,GACR3W,OAAQ,CACNqX,SAAU,OACV3R,QAASA,GAEXxF,aAPyB,SAUJjC,MAAM,0BAA2B,CACtDC,OAAQ,OACRoZ,QAAS,CACP,eAAgB,oBAElBnZ,SAfyB,cAUrBG,EAVqB,gBAkBRA,EAASC,OAlBD,UAkBrBA,EAlBqB,OAoBtBD,EAASE,GApBa,sBAqBnB,IAAIC,MAAMF,EAAK4E,OArBI,cAwBrBoU,EAAMnZ,KAAKO,MAAMJ,EAAKiZ,KAAK,GAAG9R,SAC9B1F,EAASX,OAAO0J,QAAQwO,GAAKvW,KAAI,oCAAKyW,GAAL,iBAAqB,CAC1DzO,KAAMyO,EAAKzO,KACXtH,KAAM+V,EAAK/V,KACXC,MAAO8V,EAAK9V,MACZyJ,SAAUqM,EAAKrM,SACfQ,SAAS,MA9BgB,kBAiCpB5L,GAjCoB,4CAAH,wDCLb0X,GAAkB9X,cAElB+X,GAAc7X,YAAW,oQAgBzB8X,GAAoBtT,YAAO,CACtCC,OAAQ,CACNpF,MAAOgC,EACPnB,OAAQ2X,IAEVnT,UAAW,SAACjD,EAAD,SACR,CACCpC,MAFO,EAAMA,MAGba,OAHO,EAAaA,SAKxByE,OAAQ1B,aAAa,YAAkE,IAA/D/C,EAA8D,EAA9DA,OAAiBE,EAA6C,EAAtDf,MAASe,SACvC,OAAOiX,GAAcnX,EAAQE,QAIpB2X,GAA0BD,GAAkBhT,QAE5CkT,GAAelY,cAE5B+X,GAAYrW,GAAGwW,IAAc,SAACvW,EAAGwW,GAAJ,OAAgBA,KAE7CH,GAAkB9S,SAASrB,OAAM,SAACzD,GAChCuC,EAAqBvC,GACrBiD,IAAMC,QAAQ,6IAGhB0U,GAAkB5S,SAASvB,OAAM,SAACN,GAAD,OAAWF,IAAME,MAAMA,EAAMuH,QAAS,CAAEzF,UAAW,SAEpFvB,YAAQ,CACNC,KAAM+T,GACN7T,GAAI+T,KCpDC,IAAMI,GAA4B,WACvC,IAAM1S,EAAWF,YAASyS,IACpB7X,EAASoF,YAASuS,IAKxB,OACE,0BAAMhS,UAAU,yBAAhB,wCAEE,kBAACsS,GAAA,EAAD,CAAQnC,IAAK,KACb,kBAAC,KAAD,CACE9R,KAAK,UACLC,KAAK,IACLtC,MAAO3B,EACPoG,SAVe,SAACC,GAAD,OAA6CyR,GAAazR,EAAMC,OAAO3E,QAWtF4D,cAAY,oBAEd,kBAAC0S,GAAA,EAAD,CAAQnC,IAAK,KACb,kBAAC,UAAD,CACE9R,KAAK,SACLC,KAAK,IACLqB,SAAUA,EACVpB,QAnBc,kBAAMwT,MAoBpBnS,cAAY,wBALd,4DCPO2S,I,QAAkC,SAACnU,GAAW,IAAD,EAIpDqB,YAASjE,GAFXf,EAFsD,EAEtDA,OAFsD,IAGtDJ,OAAUZ,EAH4C,EAG5CA,QAASG,EAHmC,EAGnCA,WAEfyK,EAAe5E,YAAS3C,GACxB0V,EAAwB/S,YAAS+D,IAEjC8G,EAAI,CAAI,WAAJ,oBAAkB5Q,OAAO6B,KAAK3B,KARgB,EAStBiI,mBAAS,WATa,oBASjD2I,EATiD,KAStC+F,EATsC,OAUpB1O,mBAAS,UAVW,oBAUjD4Q,EAViD,KAUrCC,EAVqC,KAWlD/Y,EAAuB,YAAd6Q,EAA0B/Q,EAAUG,EAAW4Q,GAXN,EAY5B3I,mBAAS,IAZmB,oBAYjDqN,EAZiD,KAYzCyD,EAZyC,KAclDC,EACJ,oCACE,yBACEpQ,MAAO,CACLoF,QAAS,OACTC,eAAgB,gBAChBiF,YAAa,GACbQ,aAAc,KAGhB,kBAAC,UAAD,CACE9K,MAAO,CAAErB,MAAO,IAAK2L,YAAa,IAClCxO,KAAK,IACLD,KAAK,UACLoC,SAAU,SAACC,GACT6P,EAAa7P,EAAMC,OAAO3E,OAC1BwF,GAAY,WAEdxF,MAAOwO,EACPhK,QAAS8J,EAAKjP,KAAI,SAACuV,GAAD,MAAU,CAAE5U,MAAO4U,EAAK7Q,QAAS6Q,QAErD,kBAAC,aAAD,CACEhK,gBAAiB,IACjBuC,UAAQ,EACR1I,SAAU,SAACC,GACTiS,EAAUjS,EAAMC,OAAO3E,OACvBwF,GAAY,WAEdnD,KAAK,UACLC,KAAK,IACLuU,YAAY,yFACZ7W,MAAOkT,KAGVxV,OAAO0J,QAAQzJ,GACbuV,QAAO,wCAA2BD,SAASC,MAC3C7T,KAAI,WAAgCqN,GAAhC,wBAAEoK,EAAF,KAAaC,EAAb,YACH,kBAAC,GAAD,CACE/N,IAAK0D,EACLpD,MAAOwN,EACPvN,aAAcwN,EAAY/W,MAC1BwJ,cAAenB,EAAayO,IAAc,IAAI9W,MAC9CyJ,SAAU5B,IACPQ,EAAayO,IAAc,IAAIrN,UAAY,GAC5C+M,GACA,GAEFnP,KAAM0P,EAAY1P,KAClBL,YAAa+P,EAAY/P,kBAMnC,OACE,yBAAKhD,UAAU,WACb,kBAAC,GAAD,CACExG,MAAOiB,EACPwU,SAAwB,YAAdzE,EAA0B9Q,OAAO6B,KAAK3B,GAAc,CAAC4Q,KAEjE,yBAAKxK,UAAU,kBACb,yBAAKA,UAAU,uBACb,kBAAC,YAAD,CACE3B,KAAK,UACLgM,OAAO,QACP/L,KAAK,IACLkM,UAAWiI,EACXnI,KAAM,CACJ,CAAEC,GAAI,SAAUhM,QAAS,kBAAMmU,EAAc,WAAW3S,QAAS,mFACjE,CAAEwK,GAAI,SAAUhM,QAAS,kBAAMmU,EAAc,WAAW3S,QAAS,4CAIvE,kBAAC,aAAD,CACEiT,WAAYP,EACZQ,MAAO,CACL,CAAE1I,GAAI,SAAUxK,QAAS,kBAAC,GAAD,OACzB,CAAEwK,GAAI,SAAUxK,QAAS6S,U,QCjGrCM,YAAmB,CAAE1Z,YAEN,kBAUb,OATA2Z,YAAQlW,GAER8I,qBAAU,WACR7M,OAAOka,eAAiB,SAACtO,GAEvB,OADAA,EAAEuO,iBACK,MAER,IAGD,yBAAKrT,UAAU,QACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,WACb,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAgBsT,WAAYC,IAAOjU,UAAW,IAAMuN,SAAS,mBC5BnE2G,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ad5cfd76.chunk.js","sourcesContent":["import { VariablesType } from '../types'\n\nexport const downloadTokens = async (tokensHash: string | null) => {\n  if (!tokensHash) {\n    return\n  }\n\n  const response = await fetch('https://functions.yandexcloud.net/d4eg1ughq5da8rgfonij', {\n    method: 'POST',\n    body: JSON.stringify({\n      tokensHash,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return JSON.parse(json) as { tokens: VariablesType[]; theme: string }\n}\n","const getLocation = () => window.location.href.replace(window.location.search, '')\n\nexport const getQueryParameter = (name: string) => {\n  return new URLSearchParams(window.location.search).get(name)\n}\n\nexport const setQueryParameter = (name: string, value: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.set(name, value)\n\n  window.history.pushState({}, '', `${getLocation()}?${queryParams.toString()}`)\n}\n\nexport const deleteQueryParameter = (name: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.delete(name)\n\n  const query = queryParams.toString() ? `?${queryParams.toString()}` : ''\n\n  window.history.pushState({}, '', getLocation() + query)\n}\n","import { createStore, createEvent } from 'effector'\n\nimport { theme as themeDefault } from '@yandex/ui/Theme/presets/default'\nimport { theme as themeInverse } from '@yandex/ui/Theme/presets/inverse'\nimport { theme as themeBrand } from '@yandex/ui/Theme/presets/brand'\n\nimport stylesDataDefault from '../themes/presets/example/root.json'\nimport stylesDataInverse from '../themes/presets/example-inverse/root.json'\nimport stylesDataBrand from '../themes/presets/example-brand/root.json'\n\nimport mappingsDataDefault from '../themes/presets/example/mappings.json'\nimport mappingsDataInverse from '../themes/presets/example-inverse/mappings.json'\nimport mappingsDataBrand from '../themes/presets/example-brand/mappings.json'\n\nimport { ThemeType, ThemeNamesType, TokensType } from '../types'\n\nconst themeToAllTokens = (theme: TokensType) => ({\n  ...theme.globals,\n  ...Object.values(theme.components).reduce((acc, val) => ({ ...acc, ...val })),\n})\n\nexport const themeChange = createEvent<ThemeNamesType>()\n\nexport const $themes = createStore<Record<string, ThemeType>>({\n  default: {\n    tokens: stylesDataDefault,\n    mappings: mappingsDataDefault,\n    preset: themeDefault,\n    allTokens: themeToAllTokens(stylesDataDefault),\n  },\n  inverse: {\n    tokens: stylesDataInverse,\n    mappings: mappingsDataInverse,\n    preset: themeInverse,\n    allTokens: themeToAllTokens(stylesDataInverse),\n  },\n  brand: {\n    tokens: stylesDataBrand,\n    mappings: mappingsDataBrand,\n    preset: themeBrand,\n    allTokens: themeToAllTokens(stylesDataBrand),\n  },\n})\n\nexport const $themesNames = $themes.map((themes) => Object.keys(themes))\n\nexport const $theme = createStore<ThemeType>($themes.getState().default)\n\nexport const $themeName = createStore<ThemeNamesType>('default')\n\n$theme.on(themeChange, (_, themeName) => $themes.getState()[themeName])\n\n$themeName.on(themeChange, (_, themeName) => themeName)\n","import { setQueryParameter, deleteQueryParameter } from '../utils/queryParameters'\n\nexport const TOKENS_QUERY_PARAMETER = 'tokens'\n\nexport const tokensQueryParameterUpdate = (tokens?: string) => {\n  if (!tokens) {\n    deleteQueryParameter(TOKENS_QUERY_PARAMETER)\n    return\n  }\n\n  setQueryParameter(TOKENS_QUERY_PARAMETER, tokens)\n}\n","import { createStore, createEvent, createEffect, forward } from 'effector'\nimport { createGate } from 'effector-react'\nimport { toast } from 'react-toastify'\n\nimport { downloadTokens } from '../api/downloadTokens'\nimport { getQueryParameter } from '../utils/queryParameters'\nimport { themeChange } from './themes'\nimport { tokensQueryParameterUpdate } from './query'\nimport { VariablesType, ThemeNamesType, DesignTokensType, ListDesignTokensType } from '../types'\n\nexport const variablesInitialization = createEvent()\nexport const variablesChange = createEvent<VariablesType>()\nexport const variablesChangeBatch = createEvent<VariablesType[]>()\nexport const variablesReset = createEvent()\n\nexport const tokensUpload = createEvent()\n\nexport const $designTokens = createStore<DesignTokensType>({})\n\nexport const $listDesignTokens = $designTokens.map<ListDesignTokensType>((tokens) =>\n  Object.values(tokens).map((token) => ({ ...token })),\n)\n\nexport const variablesInitializationGate = createGate()\n\nexport const initializeVariables = createEffect(async () => {\n  const tokensHash = getQueryParameter('tokens')\n\n  if (!tokensHash) {\n    return\n  }\n\n  try {\n    const response = await downloadTokens(tokensHash)\n\n    if (!response) {\n      throw new Error('No response')\n    }\n\n    const { tokens, theme } = response\n\n    themeChange(theme as ThemeNamesType)\n    variablesChangeBatch(tokens)\n    tokensQueryParameterUpdate(tokensHash)\n    toast.success('Тема успешно загружена')\n  } catch (err) {\n    toast.error('Не удалось загрузить тему, проверьте ссылку')\n  }\n})\n\n// TODO: Удалять значение из стора если change=false.\n$designTokens\n  .on(variablesChange, (state, token) => ({ ...state, [token.name]: token }))\n  .on(variablesChangeBatch, (state, tokens) => {\n    const ret: Record<string, any> = {}\n    tokens.forEach((v) => (ret[v.name] = v))\n    return { ...state, ...ret }\n  })\n  .reset(variablesReset)\n\nvariablesReset.watch(() => tokensQueryParameterUpdate())\n\nforward({\n  from: variablesInitializationGate.open,\n  to: initializeVariables,\n})\n","import React, { FC } from 'react'\nimport { Button, IButtonProps as ButtonProps } from '@yandex/ui/Button/desktop/bundle'\n\nimport { variablesReset } from '../../../model/tokens'\n\nexport const Clear: FC<ButtonProps> = (props) => {\n  return (\n    <Button {...props} view=\"clear\" size=\"m\" onClick={variablesReset}>\n      Сбросить\n    </Button>\n  )\n}\n","import { VariablesType } from '../types'\n\nexport const uploadTokens = async (theme: string, tokens: VariablesType[]) => {\n  const response = await fetch('https://functions.yandexcloud.net/d4emk05t1v8gvek4q8l0', {\n    method: 'POST',\n    body: JSON.stringify({\n      theme,\n      tokens,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return json.tokensHash\n}\n","import { attach, createEffect, createEvent, forward } from 'effector'\nimport copy from 'copy-to-clipboard'\nimport { toast } from 'react-toastify'\n\nimport { $themeName } from '../../../model/themes'\nimport { $listDesignTokens } from '../../../model/tokens'\nimport { tokensQueryParameterUpdate } from '../../../model/query'\nimport { uploadTokens } from '../../../api/uploadTokens'\n\nimport { ThemeNamesType, VariablesType } from '../../../types'\n\ntype ShareTokensFxPropsType = {\n  themeName: ThemeNamesType\n  tokens: VariablesType[]\n}\n\nexport const tokensShare = createEvent()\n\nexport const shareTokens = attach({\n  source: {\n    themeName: $themeName,\n    tokens: $listDesignTokens,\n  },\n  mapParams: (_: any, { themeName, tokens }) => ({\n    themeName,\n    tokens,\n  }),\n  effect: createEffect(({ themeName, tokens }: ShareTokensFxPropsType) => {\n    if (tokens.length === 0) {\n      return\n    }\n\n    return uploadTokens(themeName, tokens)\n  }),\n})\n\nexport const $shareTokensLoading = shareTokens.pending\nexport const $shareTokensDisabled = $listDesignTokens.map((tokens) => tokens.length === 0)\n\nshareTokens.doneData.watch((tokensHash) => {\n  if (!tokensHash) {\n    return\n  }\n\n  tokensQueryParameterUpdate(tokensHash)\n  copy(window.location.href)\n  toast.success('Ссылка успешно скопирована в буфер обмена')\n})\n\nshareTokens.failData.watch((error) => toast.error(error, { autoClose: 5000 }))\n\nforward({\n  from: tokensShare,\n  to: shareTokens,\n})\n","import React, { FC } from 'react'\nimport { Button, IButtonProps as ButtonProps } from '@yandex/ui/Button/desktop/bundle'\nimport { useStore } from 'effector-react'\n\nimport { tokensShare, $shareTokensLoading, $shareTokensDisabled } from './model'\n\nexport const Share: FC<ButtonProps> = (props) => {\n  const loading = useStore($shareTokensLoading)\n  const disabled = useStore($shareTokensDisabled)\n\n  return (\n    <Button\n      {...props}\n      view=\"action\"\n      size=\"m\"\n      onClick={tokensShare}\n      progress={loading}\n      disabled={disabled}\n      data-testid=\"share-button\"\n    >\n      Поделиться\n    </Button>\n  )\n}\n","import React, { ChangeEvent } from 'react'\nimport { useStore } from 'effector-react'\nimport { Select } from '@yandex/ui/Select/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nimport { Clear } from './Clear'\nimport { Share } from './Share'\n\nimport { $themes, $themesNames, $themeName, themeChange } from '../../model/themes'\n\nimport { ThemeNamesType } from '../../types'\n\nimport './Header.css'\n\nexport function Header() {\n  const themes = useStore($themes)\n  const themeName = useStore($themeName)\n  const themesNames = useStore($themesNames)\n\n  const menuItems = themesNames.map((value) => ({\n    value,\n    content: themes[value].name || value,\n  }))\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) =>\n    themeChange(event.target.value as ThemeNamesType)\n\n  return (\n    <div className=\"Header\">\n      <ListTile\n        leftSpace=\"m\"\n        rightSpace=\"m\"\n        alignItems=\"center\"\n        leading={\n          <Text typography=\"control-m\" color=\"secondary\">\n            Тема из пресетов @yandex/ui:\n          </Text>\n        }\n      >\n        <Select\n          size=\"m\"\n          view=\"default\"\n          options={menuItems}\n          value={themeName}\n          onChange={handleChange}\n          className=\"Header-ThemeSelector\"\n        />\n        <Share className=\"Header-Share\" />\n        <Clear className=\"Header-Clear\" />\n      </ListTile>\n    </div>\n  )\n}\n","export function isColor(value: string): boolean {\n  return Boolean(String(value).match(/^(#|hsla?|rgba?)/))\n}\n","import React, { FC, MouseEventHandler } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport './IconBack.css'\n\nexport const cnIconBack = cn('IconBack')\n\nexport const IconBack: FC<{ onClick: MouseEventHandler<HTMLSpanElement>; className?: string }> = ({\n  onClick,\n  className,\n}) => (\n  <span onClick={onClick} className={cnIconBack(null, [className])}>\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n      <path\n        d=\"M3.713 9a.75.75 0 0 1-.697-1.026l1.862-4.705a.75.75 0 0 1 1.318-.145l.9 1.328a9 9 0 1 1-3.939 9.234 1 1 0 0 1 1.966-.373 7 7 0 1 0 3.096-7.205l1.167 1.721A.75.75 0 0 1 8.766 9H3.712z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </span>\n)\n","export const COUNTER_ID = '69595123';\n\nexport const metricaGoal = (goal: string) => {\n    // @ts-ignore\n    window.ym(COUNTER_ID, 'reachGoal', goal);\n};\n","import React, { useState, useRef, useCallback, FC } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { Popup } from '@yandex/ui/Popup/desktop/bundle'\n\nimport { metricaGoal } from '../../YaMetrika'\n\nimport './ColorPicker.css'\n\nexport type ColorPickerProps = {\n  color: string\n  onColorChange: (color: string) => void\n}\n\nexport const ColorPicker: FC<ColorPickerProps> = ({ color, onColorChange }) => {\n  const [visible, setVisible] = useState(false)\n\n  const scopeRef = useRef<HTMLDivElement>(null)\n  const anchorRef = useRef<HTMLDivElement>(null)\n\n  const handleClick = useCallback(() => {\n    setVisible(true)\n    metricaGoal('picker')\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  const handleColorChange = useCallback(\n    (event) => {\n      onColorChange(event)\n      metricaGoal('change-tokens')\n    },\n    [onColorChange],\n  )\n\n  return (\n    <div ref={scopeRef} className=\"ColorPicker\">\n      <div\n        ref={anchorRef}\n        onClick={handleClick}\n        className=\"ColorPicker-Preview\"\n        style={{ background: color }}\n      />\n      <Popup\n        direction=\"bottom-end\"\n        target=\"anchor\"\n        anchor={anchorRef}\n        view=\"default\"\n        visible={visible}\n        scope={scopeRef}\n        onClose={handleClose}\n      >\n        <ChromePicker color={color} onChangeComplete={handleColorChange} />\n      </Popup>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { Badge } from '@yandex/ui/Badge'\n\nimport './Description.css'\n\nexport type DescriptionProps = {\n  description: string\n}\n\nexport const Description: FC<DescriptionProps> = ({ description }) => {\n  return (\n    <div className=\"Description-Wrapper\">\n      <Badge className=\"Description-Trigger\" content=\"?\" textColor=\"#fff\" color=\"#535353\" />\n      <span className=\"Description-Popover\">{description}</span>\n    </div>\n  )\n}\n","import { $theme } from './themes'\nimport { MappingsType } from '../types'\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button-view-action-fill-color-base': 'button.viewAction.fillColor.base.value',\n * }\n */\nexport const $tokenMappings = $theme.map<MappingsType>(({ allTokens }) =>\n  Object.entries(allTokens).reduce((acc, [name, { path }]) => {\n    const mappedName = [...path, 'value'].join('.')\n    return { ...acc, [name]: mappedName }\n  }, {}),\n)\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button.viewAction.fillColor.base.value': 'button-view-action-fill-color-base',\n * }\n */\nexport const $invertedTokenMappings = $theme.map<MappingsType>(({ allTokens }) =>\n  Object.entries(allTokens).reduce((acc, [name, { path }]) => {\n    const mappedName = [...path, 'value'].join('.')\n    return { ...acc, [mappedName]: name }\n  }, {}),\n)\n","export const COLOR_RE = /color\\(.+\\)/\nexport const PARAM_DASH_RE = /({([a-zA-Z-]+)})/g\nexport const PARAM_DOT_RE = /({([a-zA-Z.]+)})/g\nexport const BRACES_REMOVAL_RE = /[{}]/g\n","import cssColorFn from 'css-color-function'\n\nimport { COLOR_RE, PARAM_DASH_RE, PARAM_DOT_RE } from './constants'\nimport { extractParams } from './resolveTokens'\nimport { MappingsType } from '../types'\n\nexport type TokensType = Record<string, string>\n\nexport function transformColors(tokens: TokensType): TokensType {\n  return Object.entries(tokens).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: value.match(COLOR_RE) ? cssColorFn.convert(value) : value,\n    }),\n    {},\n  )\n}\n\nexport function transformMappings(\n  token: string,\n  mappings: MappingsType,\n  inverted: boolean = false,\n): string {\n  const template = !inverted ? PARAM_DASH_RE : PARAM_DOT_RE\n  const params = extractParams(token, template)\n\n  if (!params) {\n    return token\n  }\n\n  return params.reduce((acc, { token }) => {\n    const value = mappings[token] || token\n    return acc.replace(token, value)\n  }, token)\n}\n","import { MappingsType, ThemeType, DesignTokensType, ParamsType } from '../types'\nimport { transformMappings } from './transformers'\nimport { PARAM_DASH_RE, BRACES_REMOVAL_RE } from './constants'\n\n/**\n * Get parameters from string.\n *\n * @param value {string} String from which parameters should be retrieved\n * @returns {ParamsType[] | undefined}\n *\n * @example\n *\n * extractParams('{button-bg-color}') // [ { template: '{button-bg-color}', token: 'button-bg-color'} ]\n * extractParams('{width} {height}') // [ {template: '{width}', token: 'width'}, { template: '{height}', token: 'height'} ]\n */\nexport const extractParams = (\n  value: string,\n  template: RegExp = PARAM_DASH_RE,\n): ParamsType[] | undefined => {\n  const params = value.match(template)\n\n  if (!params) {\n    return\n  }\n\n  return params.reduce<ParamsType[]>(\n    (acc, el) => [...acc, { template: el, token: el.replace(BRACES_REMOVAL_RE, '') }],\n    [],\n  )\n}\n\n/**\n * Resolves dependencies in tokens.\n *\n * @param tokens {DesignTokensType} Design tokens which need to be resolved\n * @param theme {ThemeType} Theme based on which values resolving should be done\n * @returns {Record<string, string>}\n *\n * @example\n *\n * const exampleTokens = {\n *   'color.project': '#fc0',\n *   'color.bg.action': 'color({color.project} l(+15%))',\n *   'color.bg.alert': '{color.bg.action}',\n *   'space-x': '2px',\n *   'space-y': '4px',\n *   padding: '{space-y} {space-x}',\n * };\n *\n * resolveTokens(exampleTokens);\n *\n * // Result\n * {\n *   'color.project': '#fc0',\n *   'color.bg.action': 'color(#fc0 l(+15%))',\n *   'color.bg.alert': '#fc0',\n *   'space-x': '2px',\n *   'space-y': '4px',\n *   'padding': '4px 2px',\n * };\n *\n */\nexport function resolveTokens(\n  tokens: DesignTokensType,\n  mappings: MappingsType,\n  theme: ThemeType,\n): Record<string, string> {\n  const resolved: Record<string, string> = {}\n  const seen: Set<string> = new Set()\n\n  function resolveToken(token: string, value: string): string {\n    if (resolved[token]) {\n      return resolved[token]\n    }\n\n    // When we don't override token and it is in the the theme, get its value\n    if (theme.allTokens[token] && !(token in tokens)) {\n      resolved[token] = theme.allTokens[token].value.toString()\n      return resolved[token]\n    }\n\n    // If we see token more than once, it means that there is cycle dependency in tokens\n    // and we should terminate the algorithm\n    if (seen.has(token)) {\n      throw new Error(`Cycle dependence. Token: '${token}'`)\n    }\n\n    seen.add(token)\n\n    const params = extractParams(value)\n\n    if (!params) {\n      return value\n    }\n\n    // Change params in the string to resolved tokens\n    return params.reduce((acc, { template, token }) => {\n      let value\n      if (token in tokens) {\n        value = tokens[token].name\n      } else if (token in theme.allTokens) {\n        value = theme.allTokens[token].value.toString()\n      } else {\n        throw new Error(`No such token \\`${token}\\``)\n      }\n\n      return acc.replace(template, resolveToken(token, value))\n    }, value)\n  }\n\n  for (let [token, { value }] of Object.entries(tokens)) {\n    // Convert all tokens to dash-sep format `(button-view-action)`\n    const mappedValue = transformMappings(value, mappings, true)\n    resolved[token] = resolveToken(token, mappedValue)\n  }\n\n  return resolved\n}\n","import { combine } from 'effector'\nimport { toast } from 'react-toastify'\n\nimport { $theme } from './themes'\nimport { $designTokens } from './tokens'\nimport { $invertedTokenMappings } from './mappings'\n\nimport { resolveTokens } from '../utils/resolveTokens'\nimport { transformColors } from '../utils/transformers'\n\nexport const $resolvedTokens = combine(\n  $designTokens,\n  $theme,\n  $invertedTokenMappings,\n  (designTokens, theme, mappings) => {\n    try {\n      return resolveTokens(designTokens, mappings, theme)\n    } catch (e) {\n      toast.error(e.message)\n    }\n\n    return {}\n  },\n)\n\nexport const $transformedTokens = $resolvedTokens.map(transformColors)\n\nlet memoCssVariables = {}\nexport const $cssVariables = $transformedTokens.map<Record<string, string>>((tokens) => {\n  if (!Object.keys(tokens).length) {\n    return memoCssVariables\n  }\n\n  memoCssVariables = Object.entries(tokens).reduce(\n    (acc, [name, value]) => ({\n      ...acc,\n      [`--${name}`]: value,\n    }),\n    {},\n  )\n\n  return memoCssVariables\n})\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useStore } from 'effector-react'\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nimport { isColor } from '../../utils/isColor'\nimport { variablesChange } from '../../model/tokens'\nimport { IconBack } from '../IconBack'\nimport { ColorPicker } from './ColorPicker'\nimport { Description } from './Description'\n\nimport { metricaGoal } from '../YaMetrika'\nimport { $transformedTokens } from '../../model/cssVariables'\n\nimport './TextinputField.css'\n\nexport const TextinputField: React.FC<{\n  label: string\n  defaultValue: string\n  path: string[]\n  description: string\n  customTokens: string\n  rawValue?: string\n}> = ({ label, defaultValue, path, description, customTokens, rawValue }) => {\n  const transformedTokens = useStore($transformedTokens)\n  const [val, setVal] = useState(customTokens)\n  const token = transformedTokens[label]\n\n  const isColorValue = isColor(token) || isColor(defaultValue)\n  const colorValue = token || defaultValue\n  const isChanged = defaultValue !== val\n\n  // Update internal value when showcase is changed.\n  useEffect(() => {\n    setVal(rawValue || customTokens || defaultValue)\n  }, [defaultValue, customTokens, rawValue])\n\n  const handleClearClick = useCallback(() => {\n    setVal(defaultValue)\n    variablesChange({\n      path,\n      name: label,\n      value: defaultValue,\n      changed: false,\n    })\n    metricaGoal('clear-textinput')\n  }, [defaultValue, label, path])\n\n  const handleColorChange = useCallback(\n    (color) => {\n      let colorValue = ''\n\n      // TODO: Move to util.\n      if (color.source === 'rgb') {\n        colorValue = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`\n      } else if (color.source === 'hsl') {\n        colorValue = `hsla(${color.hsl.h}, ${color.hsl.s}, ${color.hsl.l}, ${color.hsl.a})`\n      } else {\n        colorValue = color.hex\n      }\n\n      setVal(colorValue)\n      variablesChange({\n        path,\n        name: label,\n        value: colorValue,\n        changed: colorValue !== defaultValue,\n      })\n    },\n    [path, defaultValue, label],\n  )\n\n  const handleChange = useCallback(\n    (event) => {\n      setVal(event.target.value)\n      variablesChange({\n        path,\n        name: label,\n        value: event.target.value,\n        changed: event.target.value !== defaultValue,\n      })\n      metricaGoal('change-tokens')\n    },\n    [path, defaultValue, label],\n  )\n\n  return (\n    <ListTile\n      leftSpace=\"m\"\n      rightSpace=\"m\"\n      alignItems=\"center\"\n      leading={\n        <div className=\"TextinputField-Label\">\n          <Text typography=\"control-m\" color=\"secondary\">\n            {label}:{' '}\n          </Text>\n          {description && <Description description={description} />}\n        </div>\n      }\n    >\n      <div className=\"TextinputField-Control\">\n        <Textinput\n          debounceTimeout={500}\n          onChange={handleChange}\n          iconRight={isChanged ? <IconBack onClick={handleClearClick} /> : <></>}\n          view=\"default\"\n          size=\"s\"\n          value={val}\n          hint={isChanged ? `Оригинальное значение - ${defaultValue}` : ''}\n          className=\"TextinputField-Input\"\n        />\n        {isColorValue && <ColorPicker color={colorValue} onColorChange={handleColorChange} />}\n      </div>\n    </ListTile>\n  )\n}\n","import React from 'react'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nexport const Headline: React.FC = ({ children }) => (\n  <Text typography=\"display-s\" color=\"primary\">\n    {children}\n  </Text>\n)\n","import React from 'react'\nimport { Badge } from '@yandex/ui/Badge'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\n\nimport { Headline } from '../../Headline'\n\nconst IconTwo = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n    <path d=\"M4.5 18a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zm11 3a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM19 4H5.78L4.97.758A.998.998 0 0 0 4 0H1a1 1 0 0 0 0 2h2.22l.805 3.222.01.042 1.995 7.98a1 1 0 0 0 1.135.743l11.017-1.837c1.02-.17 1.818-1.11 1.818-2.14V5a1 1 0 0 0-1-1zm-1 6.01c0 .05-.085.157-.146.167L7.746 11.862 6.28 6H18v4.01z\" />\n  </svg>\n)\n\nexport const BadgeShowcase = () => {\n  return (\n    <>\n      <Headline>Badge</Headline>\n      <div\n        className=\"Showcase-Item\"\n        style={{ display: 'flex', justifyContent: 'space-between', width: 300 }}\n      >\n        <Badge />\n\n        <Badge content=\"?\" />\n\n        <Badge content={5}>\n          <IconTwo />\n        </Badge>\n\n        <Button view=\"default\" size=\"m\">\n          Закладка\n          <Badge color=\"#0679ff\" outlineColor=\"#0679ff\" content={5} style={{ marginLeft: 5 }} />\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button as ButtonBase } from '@yandex/ui/Button'\nimport { Textinput as TextinputBase, withHasClear } from '@yandex/ui/Textinput/desktop'\nimport { Header, HeaderSearch, HeaderNav, HeaderNavItem } from '@yandex/ui/Header/desktop'\nimport { withViewSearchArrow as withViewSearchArrowButton } from '@yandex/ui/Header/Button'\nimport { withViewSearchArrow as withViewSearchArrowTextinput } from '@yandex/ui/Header/Textinput'\n\nimport { Headline } from '../../Headline'\n\nconst SearchButton = withViewSearchArrowButton(ButtonBase)\nconst SearchInput = withHasClear(withViewSearchArrowTextinput(TextinputBase))\n\nexport const HeaderShowcase = () => {\n  return (\n    <>\n      <Headline> Header </Headline>\n      <div className=\"Showcase-Item\">\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <SearchInput view=\"search-arrow\" name=\"text\" hasClear value=\"Yandex\" />\n            <SearchButton view=\"search-arrow\"> Найти </SearchButton>\n          </HeaderSearch>\n        </Header>\n        <br /> <br />\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <HeaderNav>\n              <HeaderNavItem href=\"/\"> Таб </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> По </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> Умолчанию </HeaderNavItem>\n              <HeaderNavItem href=\"/\" active>\n                {' '}\n                Активный{' '}\n              </HeaderNavItem>\n            </HeaderNav>\n          </HeaderSearch>\n        </Header>\n      </div>\n    </>\n  )\n}\n","import React, { createElement, ComponentType } from 'react'\n\nimport { AttachShowcase } from './Showcases/AttachShowcase';\nimport { BadgeShowcase } from './Showcases/BadgeShowcase';\nimport { ButtonGroupShowcase } from './Showcases/ButtonGroupShowcase';\nimport { ButtonShowcase } from './Showcases/ButtonShowcase';\nimport { CheckboxShowcase } from './Showcases/CheckboxShowcase';\nimport { DividerShowcase } from './Showcases/DividerShowcase';\nimport { HeaderShowcase } from './Showcases/HeaderShowcase';\nimport { LinkShowcase } from './Showcases/LinkShowcase';\nimport { MenuShowcase } from './Showcases/MenuShowcase';\nimport { MessageBoxShowcase } from './Showcases/MessageBoxShowcase';\nimport { ProgressShowcase } from './Showcases/ProgressShowcase';\nimport { RadioboxShowcase } from './Showcases/RadioboxShowcase';\nimport { RadioButtonShowcase } from './Showcases/RadioButtonShowcase';\nimport { SliderShowcase } from './Showcases/SliderShowcase';\nimport { SpinShowcase } from './Showcases/SpinShowcase';\nimport { TabsMenuShowcase } from './Showcases/TabsMenuShowcase';\nimport { TextareaShowcase } from './Showcases/TextareaShowcase';\nimport { TextinputShowcase } from './Showcases/TextinputShowcase';\nimport { TextShowcase } from './Showcases/TextShowcase';\nimport { TooltipShowcase } from './Showcases/TooltipShowcase';\nimport { TumblerShowcase } from './Showcases/TumblerShowcase';\nimport { UserPicShowcase } from './Showcases/UserPicShowcase';\n\nimport './Showcase.css'\n\nconst componentsMap: Record<string, ComponentType> = {\n  attach: AttachShowcase,\n  badge: BadgeShowcase,\n  button: ButtonShowcase,\n  buttonGroup: ButtonGroupShowcase,\n  checkbox: CheckboxShowcase,\n  divider: DividerShowcase,\n  header: HeaderShowcase,\n  link: LinkShowcase,\n  menu: MenuShowcase,\n  messageBox: MessageBoxShowcase,\n  progress: ProgressShowcase,\n  radiobox: RadioboxShowcase,\n  radioButton: RadioButtonShowcase,\n  spin: SpinShowcase,\n  tabsMenu: TabsMenuShowcase,\n  text: TextShowcase,\n  textarea: TextareaShowcase,\n  textinput: TextinputShowcase,\n  tooltip: TooltipShowcase,\n  tumbler: TumblerShowcase,\n  userPic: UserPicShowcase,\n  slider: SliderShowcase\n}\n\nexport const Showcase: React.FC<{ includes: string[] }> = ({ includes }) => {\n  return (\n    <div className=\"Showcase\">\n      {includes\n        .filter((componentName) => componentsMap[componentName])\n        .map((componentName) => createElement(componentsMap[componentName]))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Attach } from '@yandex/ui/Attach/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const AttachShowcase = () => {\n  return (\n    <>\n      <Headline>Attach</Headline>\n      <div className=\"Showcase-Item\">\n        <Attach size=\"l\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"m\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"s\" view=\"default\">\n          Select file\n        </Attach>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { Icon } from '@yandex/ui/Icon/Icon.bundle/desktop'\nimport { Text } from '@yandex/ui/Text/Text.bundle/desktop'\n\nimport { Headline } from '../../Headline'\n\nexport const ButtonShowcase = () => {\n  const view = ['default', 'action', 'pseudo', 'link', 'clear', 'raised']\n\n  return (\n    <>\n      <Headline>Button</Headline>\n      {view.map((view: any) => {\n        return (\n          <>\n            <p>View {view}</p>\n            <div className=\"Showcase-Item\">\n              <Button view={view} size=\"l\">\n                Button\n              </Button>\n              <Button view={view} size=\"m\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\" disabled>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" checked>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" progress>\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                iconLeft={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n                iconRight={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              >\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                icon={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              />\n            </div>\n          </>\n        )\n      })}\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <Button view=\"default\" size=\"m\">\n          Button\n        </Button>\n        <Text>Любя, съешь щипцы, — вздохнёт мэр, — кайф жгуч.</Text>\n        <Text>\n          Шеф взъярён тчк щипцы с эхом гудбай Жюль. Эй, жлоб! Где туз? Прячь юных съёмщиц в шкаф.\n          Экс-граф? Плюш изъят. Бьём чуждый цен хвощ!\n        </Text>\n        <Button view=\"action\" size=\"m\">\n          Button\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { ButtonGroup } from '@yandex/ui/ButtonGroup/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const ButtonGroupShowcase = () => {\n  const gaps = [undefined, 's', 'm', 'l', 'xl'] as ('s' | 'm' | 'l' | 'xl')[]\n  const pins = ['circle', 'round'] as ('circle' | 'round')[]\n\n  return (\n    <>\n      <Headline>ButtonGroup</Headline>\n      <div className=\"Showcase-Item\">\n        {gaps.map((gap, index) => (\n          <>\n            {index !== 0 && (\n              <>\n                {' '}\n                <br /> <br />{' '}\n              </>\n            )}\n            <p> Gap: {gap || 'no gap'} </p>\n            <ButtonGroup gap={gap}>\n              <Button view=\"default\" size=\"m\">\n                Button 1\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 2\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 3\n              </Button>\n            </ButtonGroup>\n          </>\n        ))}\n\n        {pins.map((pin) => (\n          <>\n            <br /> <br />\n            <p> Pin: {pin} </p>\n            <ButtonGroup pin={pin}>\n              <Button view=\"default\" size=\"m\">\n                Button 1\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 2\n              </Button>\n            </ButtonGroup>\n          </>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Checkbox } from '@yandex/ui/Checkbox/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const CheckboxShowcase = () => {\n  return (\n    <>\n      <Headline>Checkbox</Headline>\n      <div className=\"Showcase-Item\">\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" indeterminate />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Divider } from '@yandex/ui/Divider'\n\nimport { Headline } from '../../Headline'\n\nexport const DividerShowcase = () => {\n  return (\n    <>\n      <Headline>Divider</Headline>\n      <div className=\"Showcase-Item\">\n        <p>Content</p>\n        <Divider style={{ margin: '8px 0' }}>\n          <p>Section</p>\n        </Divider>\n        <p>Content</p>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Link } from '@yandex/ui/Link/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const LinkShowcase = () => {\n  return (\n    <>\n      <Headline>Link</Headline>\n      <div className=\"Showcase-Item\">\n        <Link href=\"https://ya.ru\" view=\"default\">\n          Ссылка\n        </Link>\n        <br />\n        <Link view=\"default\" pseudo>\n          Ссылка\n        </Link>\n        <br />\n        <Link href=\"https://ya.ru\" view=\"default\" disabled>\n          Ссылка\n        </Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Menu } from '@yandex/ui/Menu/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const MenuShowcase = () => {\n  const items = [\n    { value: 'a', content: 'Каждый' },\n    { value: 'b', content: 'Охотник' },\n    {\n      items: [\n        { value: 'c', content: 'Желает', disabled: true },\n        { value: 'd', content: 'Знать' },\n        { value: 'e', content: 'Где' },\n      ],\n    },\n  ]\n\n  const [value, setValue] = useState('a')\n\n  return (\n    <>\n      <Headline>Menu</Headline>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { MessageBox } from '@yandex/ui/MessageBox/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const MessageBoxShowcase = () => {\n  return (\n    <>\n      <Headline>MessageBox</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"default\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#000', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"inverse\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"promo\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"action\" size=\"s\">\n                  Подробнее\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Progress } from '@yandex/ui/Progress/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const ProgressShowcase = () => {\n  return (\n    <>\n      <Headline>Progres</Headline>\n      <div className=\"Showcase-Item\">\n        <Progress timing=\"linear\" value={50} maxValue={100} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Radiobox } from '@yandex/ui/Radiobox/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const RadioboxShowcase = () => {\n  const options = [\n    { label: 'Option A', value: 'a' },\n    { label: 'Option B', value: 'b' },\n    { label: 'Option C (disabled)', value: 'c', disabled: true },\n  ]\n\n  return (\n    <>\n      <Headline>Radiobox</Headline>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"outline\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"outline\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { RadioButton } from '@yandex/ui/RadioButton/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const RadioButtonShowcase = () => {\n  const options = [\n    { value: 'a', children: 'Option A' },\n    { value: 'b', children: 'Option B' },\n    { value: 'c', children: 'Option C' },\n  ]\n\n  return (\n    <>\n      <Headline>RadioButton</Headline>\n      <div className=\"Showcase-Item\">\n        <RadioButton size=\"l\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Spin } from '@yandex/ui/Spin/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const SpinShowcase = () => {\n  return (\n    <>\n      <Headline>Spin</Headline>\n      <div className=\"Showcase-Item\">\n        <Spin progress view=\"default\" size=\"l\" />\n        <Spin progress view=\"default\" size=\"m\" />\n        <Spin progress view=\"default\" size=\"s\" />\n        <Spin progress view=\"default\" size=\"xs\" />\n        <Spin progress view=\"default\" size=\"xxs\" />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TabsMenuShowcase = () => {\n  return (\n    <>\n      <Headline>TabsMenu</Headline>\n      <div className=\"Showcase-Item\">\n        <TabsMenu\n          size=\"m\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n\n        <br />\n        <TabsMenu\n          size=\"s\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Text } from '@yandex/ui/Text/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TextShowcase = () => {\n  return (\n    <>\n      <Headline>Text</Headline>\n      <div className=\"Showcase-Item\">\n        <Text as=\"div\">\n          Миссия Яндекса — помогать людям решать задачи и достигать своих целей в жизни.\n        </Text>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Textarea } from '@yandex/ui/Textarea/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TextareaShowcase = () => {\n  const [value1, setValue1] = useState('')\n\n  return (\n    <>\n      <Headline>Textarea</Headline>\n      <div className=\"Showcase-Item\">\n        <Textarea\n          hasClear\n          size=\"m\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TextinputShowcase = () => {\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [value3, setValue3] = useState('')\n  const [value4, setValue4] = useState('')\n  const [value5, setValue5] = useState('')\n  const [value6, setValue6] = useState('')\n\n  return (\n    <>\n      <Headline>Textinput</Headline>\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"m\"\n            view=\"default\"\n            value={value1}\n            onChange={(event) => setValue1(event.target.value)}\n            onClearClick={() => setValue1('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value2}\n            onChange={(event) => setValue2(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value3}\n            onChange={(event) => setValue3(event.target.value)}\n            onClearClick={() => setValue3('')}\n            state=\"error\"\n            hint=\"Error message\"\n          />\n        </div>\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          size=\"s\"\n          label=\"Label\"\n          view=\"material\"\n          value={value4}\n          onChange={(event) => setValue4(event.target.value)}\n          onClearClick={() => setValue4('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value5}\n          onChange={(event) => setValue5(event.target.value)}\n          onClearClick={() => setValue5('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value6}\n          onChange={(event) => setValue6(event.target.value)}\n          onClearClick={() => setValue6('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport { Tooltip } from '@yandex/ui/Tooltip/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TooltipShowcase = () => {\n  const [visible1, setVisible1] = useState(true)\n  const [visible2, setVisible2] = useState(true)\n  const [visible3, setVisible3] = useState(true)\n  const [visible4, setVisible4] = useState(true)\n  const [visible5, setVisible5] = useState(true)\n  const [visible6, setVisible6] = useState(true)\n  const anchorRef1 = useRef<HTMLDivElement>(null)\n  const anchorRef2 = useRef<HTMLDivElement>(null)\n  const anchorRef3 = useRef<HTMLDivElement>(null)\n  const anchorRef4 = useRef<HTMLDivElement>(null)\n  const anchorRef5 = useRef<HTMLDivElement>(null)\n  const anchorRef6 = useRef<HTMLDivElement>(null)\n  const scopeRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <>\n      <Headline>Tooltip</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef1}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible1(!visible1)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef2}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible2(!visible2)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef3}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible3(!visible3)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            anchor={anchorRef1}\n            scope={scopeRef}\n            visible={visible1}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            anchor={anchorRef2}\n            scope={scopeRef}\n            visible={visible2}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            anchor={anchorRef3}\n            scope={scopeRef}\n            visible={visible3}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef4}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible4(!visible4)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef5}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible5(!visible5)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef6}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible6(!visible6)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            state=\"warning\"\n            anchor={anchorRef4}\n            scope={scopeRef}\n            visible={visible4}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            state=\"success\"\n            anchor={anchorRef5}\n            scope={scopeRef}\n            visible={visible5}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            state=\"alert\"\n            anchor={anchorRef6}\n            scope={scopeRef}\n            visible={visible6}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Tumbler } from '@yandex/ui/Tumbler/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TumblerShowcase = () => {\n  const [checked1, setChecked1] = useState(true)\n  const [checked2, setChecked2] = useState(false)\n\n  return (\n    <>\n      <Headline>Tumbler</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked={checked1}\n              onChange={() => setChecked1(!checked1)}\n              labelBefore=\"labelBefore\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked\n              disabled\n              onChange={() => {}}\n              labelAfter=\"disabled check\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"s\"\n              view=\"default\"\n              checked={checked2}\n              onChange={() => setChecked2(!checked2)}\n              labelAfter=\"labelAfter\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"l\"\n              view=\"default\"\n              checked={false}\n              disabled\n              onChange={() => {}}\n              labelBefore={\n                <svg\n                  aria-label=\"labelBefore\"\n                  width=\"16\"\n                  height=\"16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.5 7.003a1.5 1.5 0 0 0-1.5 1.5v6a1.5 1.5 0 0 0 1.5 1.5h9a1.5 1.5 0 0 0 1.5-1.5v-6a1.5 1.5 0 0 0-1.5-1.5H12v-2a4 4 0 0 0-8 0v2h-.5zm2.5-2a2 2 0 1 1 4 0V7H6V5.003z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              }\n              labelAfter=\"disabled\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { UserPic } from '@yandex/ui/UserPic/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const UserPicShowcase = () => {\n  return (\n    <>\n      <Headline>UserPic</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"43978/351415393-30646433\" size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic avatarId=\"0/0-0\" hasCamera size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"0/0-0\" hasCamera size=\"s\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic\n              lodpiUrl=\"https://jing.yandex-team.ru/files/kri0-gen/halp_orange.jpg\"\n              size=\"s\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Slider, useSliderState } from '@yandex/ui/Slider/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const SliderShowcase = () => {\n  const state1 = useSliderState({ value: [20] })\n  const state2 = useSliderState({ value: [20, 50] })\n\n  const state3 = useSliderState({ value: [20] })\n  const state4 = useSliderState({ value: [20, 50] })\n\n  const state5 = useSliderState({ value: [20] })\n  const state6 = useSliderState({ value: [20, 50] })\n\n  const state7 = useSliderState({ value: [20] })\n  const state8 = useSliderState({ value: [20, 50] })\n\n  const state9 = useSliderState({ value: [20] })\n  const state10 = useSliderState({ value: [20, 50] })\n\n  return (\n    <>\n      <Headline>Slider</Headline>\n      <Slider view=\"default\" {...state1} />\n      <Slider view=\"default\" {...state2} />\n      <Slider filled view=\"default\" {...state3} />\n      <Slider filled view=\"default\" {...state4} />\n      <Slider reverse filled view=\"default\" {...state5} />\n      <Slider reverse filled view=\"default\" {...state6} />\n      <Slider filled step={25} view=\"default\" {...state7} />\n      <Slider filled step={25} view=\"default\" {...state8} />\n      <Slider filled step={20} showTicks showTickValues view=\"default\" {...state9} />\n      <Slider filled showTicks showTickValues step={20} view=\"default\" {...state10} />\n    </>\n  )\n}\n","export function toDeepToken(path: string[], prop: any): any {\n  const chunks = [...path].reverse()\n  let result: any = prop\n  for (let chunk of chunks) {\n    result = { [chunk]: result }\n  }\n  return result\n}\n","import { combine, Store } from 'effector'\nimport deepmerge from 'deepmerge'\nimport YAML from 'yaml'\n\nimport { $designTokens } from '../../../model/tokens'\nimport { $theme } from '../../../model/themes'\nimport { $tokenMappings, $invertedTokenMappings } from '../../../model/mappings'\nimport { $cssVariables } from '../../../model/cssVariables'\nimport { toDeepToken } from '../../../utils/toDeepToken'\nimport { transformMappings } from '../../../utils/transformers'\nimport { extractParams } from '../../../utils/resolveTokens'\nimport { DesignTokensType, ParamsType } from '../../../types'\nimport { PARAM_DOT_RE } from '../../../utils/constants'\n\nexport const $cssText = $cssVariables.map((variables) => {\n  const cssText = Object.keys(variables).reduce(\n    (acc: string, v: string) => `${acc}  ${v}: ${variables[v]};\\n`,\n    '',\n  )\n  return `:root {\\n${cssText}}`\n})\n\nconst $dotSepDesignTokens: Store<DesignTokensType> = combine(\n  $designTokens,\n  $tokenMappings,\n  (designTokens, mappings) =>\n    Object.entries(designTokens).reduce(\n      (acc, [name, { value, ...token }]) => ({\n        ...acc,\n        [name]: {\n          ...token,\n          value: transformMappings(value, mappings),\n        },\n      }),\n      {},\n    ),\n)\n\nexport const $yamlText = combine(\n  { designTokens: $dotSepDesignTokens, mappings: $invertedTokenMappings, theme: $theme },\n  ({ designTokens, mappings, theme: { allTokens } }) => {\n    // Make object for yaml from designTokens\n    const yml = Object.values(designTokens).reduce((acc, { changed, path, value, rawValue }) => {\n      if (rawValue) {\n        acc.push(toDeepToken(path, { value: rawValue }))\n      } else if (changed) {\n        acc.push(toDeepToken(path, { value }))\n      }\n\n      return acc\n    }, [] as any)\n\n    // Get all params from designTokens values\n    const params = Object.values(designTokens).reduce<ParamsType[]>(\n      (acc, { value, rawValue }) => [\n        ...acc,\n        ...(extractParams(rawValue || value, PARAM_DOT_RE) || []),\n      ],\n      [],\n    )\n\n    // If param is in the theme and it was not redefined then add theme's value to the yaml\n    params\n      .map(({ token }) => mappings[token] || token)\n      .filter((token) => !(token in designTokens))\n      .forEach((token) => {\n        if (allTokens[token]) {\n          const { path, value } = allTokens[token]\n          yml.push(toDeepToken(path, { value }))\n        }\n      })\n\n    const deepmergedYml = deepmerge.all(yml)\n    return YAML.stringify(deepmergedYml)\n  },\n)\n","import React, { FC, useState } from 'react'\nimport { useStore } from 'effector-react'\nimport { cnTheme } from '@yandex/ui/Theme'\n\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { Tumbler } from '@yandex/ui/Tumbler/Tumbler.bundle/desktop'\n\nimport { Showcase } from '../../Showcase'\nimport { metricaGoal } from '../../YaMetrika'\n\nimport { $cssVariables } from '../../../model/cssVariables'\nimport { $cssText, $yamlText } from './model'\n\nconst JSX = 'JSX'\nconst YAML = 'YAML'\nconst CSS = 'CSS'\n\nconst tabsNames = [JSX, YAML, CSS]\n\nexport const SandboxExample: FC<any> = ({ includes, theme }) => {\n  const [activeTab, setActiveTab] = useState(JSX)\n\n  const cssVariables: Record<string, string> = useStore($cssVariables)\n  const cssText = useStore($cssText)\n  const yamlText = useStore($yamlText)\n  const [shownDiff, setDiff] = useState(true)\n\n  const handleTabChange = (tab: string) => {\n    setActiveTab(tab)\n    metricaGoal(tab)\n  }\n\n  const handleDiffChange = () => {\n    setDiff((prev) => !prev)\n    metricaGoal('show-hide-changes')\n  }\n\n  const tabs = tabsNames.map((tab) => ({\n    id: tab,\n    onClick: () => {\n      handleTabChange(tab)\n    },\n    content: tab,\n  }))\n\n  return (\n    <div className=\"Sandbox-Examples\">\n      <div>\n        <div className=\"Sandbox-Showcase\">\n          <div className=\"Sandbox-Content\">\n            <div className=\"Sandbox-Tabs\">\n              <TabsMenu size=\"m\" view=\"default\" layout=\"horiz\" activeTab={activeTab} tabs={tabs} />\n              <div className=\"Tumbler-Wrapper\">\n                <Tumbler\n                  size=\"m\"\n                  view=\"default\"\n                  checked={shownDiff}\n                  onChange={handleDiffChange}\n                  labelAfter={'Показать изменения'}\n                />\n              </div>\n            </div>\n            <div\n              className={cnTheme(theme, ['Sandbox-ContentWrapper'])}\n              style={shownDiff ? cssVariables : {}}\n            >\n              {activeTab === JSX && <Showcase includes={includes} />}\n              {activeTab === CSS && (\n                <div className=\"Sandbox-ContentWrapper-YML\">\n                  <pre>\n                    <code>{cssText}</code>\n                  </pre>\n                </div>\n              )}\n              {activeTab === YAML && (\n                <div className=\"Sandbox-ContentWrapper-YML\">\n                  <pre>\n                    <code>{yamlText}</code>\n                  </pre>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { MappingsType } from '../types'\n\nexport const themeboxConfig = {\n  output: {\n    css: {\n      transforms: ['name/cti/kebab', 'json/extended/mapper'],\n      buildPath: './themes',\n      files: [\n        {\n          destination: 'tokens.json',\n          format: 'json/extended',\n        },\n      ],\n      actions: ['process-color'],\n    },\n  },\n}\n\nexport const downloadTheme = async (content: any, mappings: MappingsType) => {\n  const body = JSON.stringify({\n    config: themeboxConfig,\n    tokens: {\n      language: 'yaml',\n      content: content,\n    },\n    mappings,\n  })\n\n  const response = await fetch('https://themebox.now.sh', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body,\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.error)\n  }\n\n  const res = JSON.parse(json.data[0].content)\n  const tokens = Object.entries(res).map(([_, item]: any) => ({\n    path: item.path,\n    name: item.name,\n    value: item.value,\n    rawValue: item.rawValue,\n    changed: true,\n  }))\n\n  return tokens\n}\n","import { attach, createStore, createEffect, createEvent, forward } from 'effector'\nimport { toast } from 'react-toastify'\n\nimport { $theme } from '../../../model/themes'\nimport { variablesChangeBatch } from '../../../model/tokens'\nimport { downloadTheme } from '../../../api/downloadTheme'\nimport { ThemeType } from '../../../types'\n\ntype UploadRawTokensFxPropsType = {\n  theme: ThemeType\n  tokens: string\n}\n\nexport const rawTokensUpload = createEvent()\n\nexport const $tokensText = createStore<string>(`button:\n  viewAction:\n    fillColor:\n      base:\n        value: \"#C728B3\"\n      progress:\n        base:\n          value: \"#C728B3\"\n        process:\n          value: \"#de1258\"\n  viewDefault:\n    fillColor:\n      base:\n        value: \"#ecb6ea\"\n`)\n\nexport const uploadRawTokensFx = attach({\n  source: {\n    theme: $theme,\n    tokens: $tokensText,\n  },\n  mapParams: (_, { theme, tokens }) =>\n    ({\n      theme,\n      tokens,\n    } as UploadRawTokensFxPropsType),\n  effect: createEffect(({ tokens, theme: { mappings } }: UploadRawTokensFxPropsType) => {\n    return downloadTheme(tokens, mappings)\n  }),\n})\n\nexport const $uploadRawTokensLoading = uploadRawTokensFx.pending\n\nexport const tokensUpdate = createEvent<string>()\n\n$tokensText.on(tokensUpdate, (_, payload) => payload)\n\nuploadRawTokensFx.doneData.watch((tokens) => {\n  variablesChangeBatch(tokens)\n  toast.success('Токены успешно загружены')\n})\n\nuploadRawTokensFx.failData.watch((error) => toast.error(error.message, { autoClose: 5000 }))\n\nforward({\n  from: rawTokensUpload,\n  to: uploadRawTokensFx,\n})\n","import React, { FC, ChangeEvent } from 'react'\nimport { useStore } from 'effector-react'\n\nimport { TextareaWithAutoResize } from '@yandex/ui/Textarea/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { Spacer } from '@yandex/ui/Spacer/desktop'\n\nimport { rawTokensUpload, $uploadRawTokensLoading, $tokensText, tokensUpdate } from './model'\n\nexport const CustomThemeDownloader: FC = () => {\n  const progress = useStore($uploadRawTokensLoading)\n  const tokens = useStore($tokensText)\n\n  const handleClick = () => rawTokensUpload()\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => tokensUpdate(event.target.value)\n\n  return (\n    <form className=\"CustomThemeDownloader\">\n      Токены:\n      <Spacer all={10} />\n      <TextareaWithAutoResize\n        view=\"default\"\n        size=\"m\"\n        value={tokens}\n        onChange={handleChange}\n        data-testid=\"tokens-textarea\"\n      />\n      <Spacer all={10} />\n      <Button\n        view=\"action\"\n        size=\"m\"\n        progress={progress}\n        onClick={handleClick}\n        data-testid=\"tokens-upload-button\"\n      >\n        Загрузить\n      </Button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport { Select } from '@yandex/ui/Select/Select.bundle/desktop'\nimport { Textinput } from '@yandex/ui/Textinput/Textinput.bundle/desktop'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { TabsPanes } from '@yandex/ui/TabsPanes/TabsPanes.bundle/desktop'\nimport { useStore } from 'effector-react'\n\nimport { TextinputField } from '../TextinputField'\nimport { metricaGoal } from '../YaMetrika'\n\nimport { SandboxExample } from './SandboxExample'\nimport { CustomThemeDownloader } from './CustomThemeDownloader'\nimport { $designTokens } from '../../model/tokens'\nimport { $invertedTokenMappings } from '../../model/mappings'\nimport { $theme } from '../../model/themes'\nimport { transformMappings } from '../../utils/transformers'\n\nimport './Sandbox.css'\n\ntype SandboxProps = {}\n\nexport const Sandbox: React.FC<SandboxProps> = (props) => {\n  const {\n    preset,\n    tokens: { globals, components },\n  } = useStore($theme)\n  const designTokens = useStore($designTokens)\n  const invertedTokenMappings = useStore($invertedTokenMappings)\n\n  const tabs = ['globals', ...Object.keys(components)]\n  const [activeTab, setActiveTab] = useState('globals')\n  const [activeTab1, setActiveTab1] = useState('tokens')\n  const values = activeTab === 'globals' ? globals : components[activeTab]\n  const [filter, setFilter] = useState('')\n\n  const tokensTab = (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-beetwen',\n          marginRight: 20,\n          marginBottom: 20,\n        }}\n      >\n        <Select\n          style={{ width: 150, marginRight: 20 }}\n          size=\"m\"\n          view=\"default\"\n          onChange={(event) => {\n            setActiveTab(event.target.value)\n            metricaGoal('select')\n          }}\n          value={activeTab}\n          options={tabs.map((tab) => ({ value: tab, content: tab }))}\n        />\n        <Textinput\n          debounceTimeout={500}\n          hasClear\n          onChange={(event) => {\n            setFilter(event.target.value)\n            metricaGoal('search')\n          }}\n          view=\"default\"\n          size=\"m\"\n          placeholder=\"Поиск по токенам\"\n          value={filter}\n        />\n      </div>\n      {Object.entries(values)\n        .filter(([groupName]) => groupName.includes(filter))\n        .map(([groupName, groupTokens]: any, index) => (\n          <TextinputField\n            key={index}\n            label={groupName}\n            defaultValue={groupTokens.value}\n            customTokens={(designTokens[groupName] || {}).value}\n            rawValue={transformMappings(\n              (designTokens[groupName] || {}).rawValue || '',\n              invertedTokenMappings,\n              true,\n            )}\n            path={groupTokens.path}\n            description={groupTokens.description}\n          />\n        ))}\n    </>\n  )\n\n  return (\n    <div className=\"Sandbox\">\n      <SandboxExample\n        theme={preset}\n        includes={activeTab === 'globals' ? Object.keys(components) : [activeTab]}\n      />\n      <div className=\"Sandbox-Tokens\">\n        <div className=\"Sandbox-Tokens-Tabs\">\n          <TabsMenu\n            view=\"default\"\n            layout=\"horiz\"\n            size=\"m\"\n            activeTab={activeTab1}\n            tabs={[\n              { id: 'custom', onClick: () => setActiveTab1('custom'), content: 'Загрузить тему' },\n              { id: 'tokens', onClick: () => setActiveTab1('tokens'), content: 'Токены' },\n            ]}\n          />\n        </div>\n        <TabsPanes\n          activePane={activeTab1}\n          panes={[\n            { id: 'custom', content: <CustomThemeDownloader /> },\n            { id: 'tokens', content: tokensTab },\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useGate } from 'effector-react'\nimport { configureRootTheme } from '@yandex/ui/Theme'\nimport { theme } from '@yandex/ui/Theme/presets/default'\n\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nimport { Header } from './components/Header'\nimport { Sandbox } from './components/Sandbox'\n\nimport { variablesInitializationGate } from './model/tokens'\n\nimport './App.css'\n\nconfigureRootTheme({ theme })\n\nexport default () => {\n  useGate(variablesInitializationGate)\n\n  useEffect(() => {\n    window.onbeforeunload = (e: BeforeUnloadEvent) => {\n      e.preventDefault()\n      return ''\n    }\n  }, [])\n\n  return (\n    <div className=\"Site\">\n      <Header />\n      <div className=\"Content\">\n        <Sandbox />\n      </div>\n      <ToastContainer transition={Slide} autoClose={2000} position=\"bottom-right\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}